!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADVANCE	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
AICharacterControl	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^public class AICharacterControl : MonoBehaviour {$/;"	c
ATTACH	Scripts/World/InteractionResult.cs	/^	ATTACH,$/;"	e	enum:InteractionResult	file:
AbstractButton	Sample Assets/Cross Platform Input/Scripts/AbstractButton.cs	/^public abstract class AbstractButton {$/;"	c
AbstractTargetFollower	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^public abstract class AbstractTargetFollower : MonoBehaviour$/;"	c
AccelInput	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public float AccelInput { get; private set; }                                   \/\/ the current acceleration input$/;"	p	class:CarController
Action	Sample Assets/Utility/TimedObjectActivator.cs	/^	public enum Action$/;"	g	class:TimedObjectActivator
Activate	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		Activate,$/;"	e	enum:ParticleSceneControls.Mode	file:
Activate	Sample Assets/Utility/ActivateTrigger.cs	/^		Activate  = 2, \/\/ Activate the target GameObject$/;"	e	enum:ActivateTrigger.Mode	file:
Activate	Sample Assets/Utility/TimedObjectActivator.cs	/^		Activate, $/;"	e	enum:TimedObjectActivator.Action	file:
Activate	Sample Assets/Utility/TimedObjectActivator.cs	/^	IEnumerator Activate(Entry entry)$/;"	m	class:TimedObjectActivator	file:
ActivateTrigger	Sample Assets/Utility/ActivateTrigger.cs	/^public class ActivateTrigger : MonoBehaviour {$/;"	c
AddFire	Sample Assets/Effects/Particle Systems/scripts/ExplosionFireAndDebris.cs	/^	void AddFire(Transform t, Vector3 pos, Vector3 normal)$/;"	m	class:ExplosionFireAndDebris	file:
AddInputMapping	Scripts/InputInterpreter.cs	/^	public void AddInputMapping() {$/;"	m	class:InputInterpreter
AdjustAxesIfInverted	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    private void AdjustAxesIfInverted(ref float modifiedX, ref float modifiedY)$/;"	m	class:JoystickAbstract	file:
AdjustInputForMobileControls	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl2Axis.cs	/^	private void AdjustInputForMobileControls(ref float roll, ref float pitch, ref float throttle)$/;"	m	class:AeroplaneUserControl2Axis	file:
AdjustInputForMobileControls	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl4Axis.cs	/^	private void AdjustInputForMobileControls(ref float roll, ref float pitch, ref float throttle)$/;"	m	class:AeroplaneUserControl4Axis	file:
Advanced	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public class Advanced                                                           \/\/ the advanced settings for the car controller$/;"	c	class:CarController
AdvancedSettings	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	public class AdvancedSettings                                                       \/\/ The advanced settings$/;"	c	class:FirstPersonCharacter
AdvancedSettings	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	public class AdvancedSettings$/;"	c	class:ThirdPersonCharacter
AdvancedSetttings	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^    public class AdvancedSetttings                                      \/\/ A class for storing the advanced options.$/;"	c	class:AeroplaneAudio
AeroplaneAIControl	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^public class AeroplaneAIControl : MonoBehaviour {$/;"	c
AeroplaneAudio	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^public class AeroplaneAudio : MonoBehaviour$/;"	c
AeroplaneControlSurfaceAnimator	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^public class AeroplaneControlSurfaceAnimator : MonoBehaviour$/;"	c
AeroplaneController	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^public class AeroplaneController : MonoBehaviour$/;"	c
AeroplaneGUI	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneGUI.cs	/^public class AeroplaneGUI : MonoBehaviour$/;"	c
AeroplanePropellerAnimator	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^public class AeroplanePropellerAnimator : MonoBehaviour$/;"	c
AeroplaneUserControl2Axis	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl2Axis.cs	/^public class AeroplaneUserControl2Axis : MonoBehaviour$/;"	c
AeroplaneUserControl4Axis	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl4Axis.cs	/^public class AeroplaneUserControl4Axis : MonoBehaviour$/;"	c
Affiliation	Scripts/World/Affiliation.cs	/^public class Affiliation : MonoBehaviour {$/;"	c
AfterburnerPhysicsForce	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^public class AfterburnerPhysicsForce : MonoBehaviour {$/;"	c
Aileron	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^            Aileron,                                    \/\/ Horizontal flaps on the wings, rotate on the x axis.$/;"	e	enum:AeroplaneControlSurfaceAnimator.ControlSurface.Type	file:
AirBrakes	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public bool AirBrakes { get; private set; }                         \/\/ Whether or not the air brakes are being applied.$/;"	p	class:AeroplaneController
AlignMode	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public enum AlignMode$/;"	g	class:ParticleSceneControls
Altitude	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float Altitude { get; private set; }                         \/\/ The aeroplane's height above the ground.$/;"	p	class:AeroplaneController
AngleDistance	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function AngleDistance (a : float, b : float)$/;"	f
Animate	Sample Assets/Utility/ActivateTrigger.cs	/^		Animate   = 4, \/\/ Start animation on target$/;"	e	enum:ActivateTrigger.Mode	file:
Apply	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function Apply (dummyTarget : Transform, dummyCenter : Vector3)$/;"	f
ApplyDownforce	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void ApplyDownforce ()$/;"	m	class:CarController	file:
ApplyExtraTurnRotation	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void ApplyExtraTurnRotation ()$/;"	m	class:ThirdPersonCharacter	file:
ApplyGravity	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function ApplyGravity ()$/;"	f
ApplyJumping	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function ApplyJumping ()$/;"	f
AreaGoal	AreaGoal.cs	/^public class AreaGoal : MonoBehaviour {$/;"	c
AssetPathWithoutAssetPrefix	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string AssetPathWithoutAssetPrefix (Object obj)$/;"	m	class:NewScriptWindow	file:
AttachCamera	Scripts/GUI/HUD.cs	/^	void AttachCamera(GameObject g) {$/;"	m	class:HUD	file:
AttachToGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void AttachToGUI ()$/;"	m	class:NewScriptWindow	file:
Auto	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^		Auto,                                               \/\/ Let the script decide how to update$/;"	e	enum:AbstractTargetFollower.UpdateType	file:
AutoCam	Sample Assets/Cameras/Scripts/AutoCam.cs	/^public class AutoCam : PivotBasedCameraRig$/;"	c
AutoCamInspector	Sample Assets/Cameras/Scripts/Editor/AutoCamInspector.cs	/^public class AutoCamInspector : Editor {$/;"	c
AutoLevel	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void AutoLevel ()$/;"	m	class:AeroplaneController	file:
AutoMobileShaderSwitch	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^public class AutoMobileShaderSwitch : MonoBehaviour {$/;"	c
AutoMoveAndRotate	Sample Assets/Utility/AutoMoveAndRotate.cs	/^public class AutoMoveAndRotate : MonoBehaviour {$/;"	c
AutomaticHandlingOnChangeTemplate	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void AutomaticHandlingOnChangeTemplate ()$/;"	m	class:NewScriptWindow	file:
AvgPowerWheelRpmFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public float AvgPowerWheelRpmFactor { get; private set; }                       \/\/ the average RPM of all wheels marked as 'powered'$/;"	p	class:CarController
AvgSkid	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public float AvgSkid { get; private set; }                                      \/\/ the average skid factor from all wheels$/;"	p	class:CarController
Awake	Sample Assets/2D/Scripts/CameraFollow.cs	/^	void Awake ()$/;"	m	class:CameraFollow	file:
Awake	Sample Assets/2D/Scripts/Platformer2DUserControl.cs	/^	void Awake()$/;"	m	class:Platformer2DUserControl	file:
Awake	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^    void Awake()$/;"	m	class:PlatformerCharacter2D	file:
Awake	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	protected override void Awake ()$/;"	m	class:FreeLookCam
Awake	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	protected virtual void Awake() {$/;"	m	class:PivotBasedCameraRig
Awake	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	void Awake ()$/;"	m	class:FirstPersonCharacter	file:
Awake	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	void Awake()$/;"	m	class:ParticleSceneControls	file:
Awake	Sample Assets/Utility/TimedObjectActivator.cs	/^	void Awake ()$/;"	m	class:TimedObjectActivator	file:
Awake	Sample Assets/Utility/WaypointCircuit.cs	/^	void Awake () {$/;"	m	class:WaypointCircuit	file:
Awake	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	void Awake ()$/;"	m	class:AeroplaneAIControl	file:
Awake	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	void Awake ()$/;"	m	class:AeroplaneAudio	file:
Awake	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^	void Awake ()$/;"	m	class:AeroplanePropellerAnimator	file:
Awake	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl2Axis.cs	/^    void Awake ()$/;"	m	class:AeroplaneUserControl2Axis	file:
Awake	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl4Axis.cs	/^    void Awake ()$/;"	m	class:AeroplaneUserControl4Axis	file:
Awake	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^    void Awake ()$/;"	m	class:CarAIControl	file:
Awake	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void Awake ()$/;"	m	class:CarController	file:
Awake	Sample Assets/Vehicles/Car/Scripts/CarUserControl.cs	/^    void Awake ()$/;"	m	class:CarUserControl	file:
Awake	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^	void Awake ()$/;"	m	class:BallUserControl	file:
Awake	Scripts/FadeInOut.cs	/^	void Awake()$/;"	m	class:FadeInOut	file:
Awake	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function Awake () {$/;"	f
Awake	Standard Assets/Character Controllers/Sources/Scripts/FPSInputController.js	/^function Awake () {$/;"	f
Awake	Standard Assets/Character Controllers/Sources/Scripts/PlatformInputController.js	/^function Awake () {$/;"	f
Awake	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function Awake ()$/;"	f
Awake	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function Awake ()$/;"	f
Awake	Standard Assets/Particles/Legacy Particles/TimedObjectDestructor.js	/^function Awake ()$/;"	f
AxisMapping	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	public class AxisMapping$/;"	c	class:TiltInput
AxisOption	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public enum AxisOption$/;"	g	class:JoystickAbstract
AxisOption	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public enum AxisOption {                                                    \/\/ Options for which axes to use                                                     $/;"	g	class:TouchJoystick
AxisOptions	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	public enum AxisOptions {$/;"	g	class:TiltInput
AxisTouchButton	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^public class AxisTouchButton : MonoBehaviour {$/;"	c
BACKWARD	Scripts/Agent/Act/LegController.cs	/^	public enum MotorMotion { FORWARD, SET, BACKWARD, FREE }$/;"	e	enum:RusticGames.Act.MotorMotion	file:
BALANCE	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
BOUNCE	Scripts/World/InteractionResult.cs	/^	BOUNCE,$/;"	e	enum:InteractionResult	file:
BRACE	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
BRICK	Scripts/World/InteractorType.cs	/^	BRICK,$/;"	e	enum:InteractorType	file:
BalanceControlInfo	Scripts/Agent/Act/LegController.cs	/^	public class BalanceControlInfo {$/;"	c	namespace:RusticGames.Act
Ball	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^public class Ball : MonoBehaviour$/;"	c
BallUserControl	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^public class BallUserControl : MonoBehaviour$/;"	c
Block	_Local/Assets/Scripts/Block.cs	/^public class Block : MonoBehaviour {$/;"	c
BlockGenerator	_Local/Assets/Scripts/GameManager.cs	/^	private delegate void BlockGenerator(Vector3 pos, Quaternion rotation, GameObject type);$/;"	m	class:GameManager	file:
BodyData	Investigator.cs	/^public struct BodyData {$/;"	s
BodyUpdate	Investigator.cs	/^	public IEnumerator BodyUpdate() {$/;"	m	class:Investigator
Boo	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		Boo = 2$/;"	e	enum:UnityEditor.Language	file:
Both	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^        Both,                                                                   \/\/ Use both$/;"	e	enum:JoystickAbstract.AxisOption	file:
Both	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		Both,                                                                   \/\/ Use both$/;"	e	enum:TouchJoystick.AxisOption	file:
Boundary	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	class Boundary $/;"	c	class:TouchJoystick
BrakeCondition	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	public enum BrakeCondition {$/;"	g	class:CarAIControl
BrakeInput	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public float BrakeInput { get; private set; }                                   \/\/ the current brake input$/;"	p	class:CarController
BrakeLight	Sample Assets/Vehicles/Car/Scripts/BrakeLight.cs	/^public class BrakeLight : MonoBehaviour$/;"	c
Break	_Local/Assets/Scripts/Breakable.cs	/^	public void Break() {$/;"	m	class:Breakable
Breakable	_Local/Assets/Scripts/Breakable.cs	/^public class Breakable : MonoBehaviour {$/;"	c
BuildTargetGroup	Sample Assets/Utility/PlatformSpecificContent.cs	/^	enum BuildTargetGroup {$/;"	g	class:PlatformSpecificContent
BurnoutSlipEffect	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float BurnoutSlipEffect$/;"	p	class:CarController
BurnoutTendency	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float BurnoutTendency$/;"	p	class:CarController
Button	Sample Assets/Cross Platform Input/Scripts/Button.cs	/^public class Button : MonoBehaviour$/;"	c
ButtonAction	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^    public enum ButtonAction { GetButtonDown, GetButtonUp, GetButton };$/;"	g	class:CrossPlatformInput
ButtonDownTextureChange	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^public class ButtonDownTextureChange : MonoBehaviour {$/;"	c
ButtonFactory	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^public class ButtonFactory$/;"	c
CROUCH	SimpleWalker.cs	/^public enum LegsIntent { NONE, STAND, WALK, CROUCH, RUN, JUMP }$/;"	e	enum:LegsIntent	file:
CSharp	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		CSharp = 1,$/;"	e	enum:UnityEditor.Language	file:
CachePositionsAndDistances	Sample Assets/Utility/WaypointCircuit.cs	/^	void CachePositionsAndDistances()$/;"	m	class:WaypointCircuit	file:
CalculateAltitude	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void CalculateAltitude ()$/;"	m	class:AeroplaneController	file:
CalculateDrag	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void CalculateDrag ()$/;"	m	class:AeroplaneController	file:
CalculateForwardSpeed	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void CalculateForwardSpeed ()$/;"	m	class:AeroplaneController	file:
CalculateGearFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void CalculateGearFactor ()$/;"	m	class:CarController	file:
CalculateJumpVerticalSpeed	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function CalculateJumpVerticalSpeed (targetJumpHeight : float) {$/;"	f
CalculateJumpVerticalSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function CalculateJumpVerticalSpeed (targetJumpHeight : float)$/;"	f
CalculateLinearForces	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void CalculateLinearForces ()$/;"	m	class:AeroplaneController	file:
CalculateRevs	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void CalculateRevs ()$/;"	m	class:CarController	file:
CalculateRollAndPitchAngles	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void CalculateRollAndPitchAngles ()$/;"	m	class:AeroplaneController	file:
CalculateSpeedValues	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void CalculateSpeedValues ()$/;"	m	class:CarController	file:
CalculateTorque	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void CalculateTorque ()$/;"	m	class:AeroplaneController	file:
Call	Sample Assets/Utility/TimedObjectActivator.cs	/^		Call,$/;"	e	enum:TimedObjectActivator.Action	file:
CaluclateAerodynamicEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void CaluclateAerodynamicEffect ()$/;"	m	class:AeroplaneController	file:
Camera2DFollow	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^public class Camera2DFollow : MonoBehaviour {$/;"	c
CameraFollow	Sample Assets/2D/Scripts/CameraFollow.cs	/^public class CameraFollow : MonoBehaviour $/;"	c
CameraSettings	Scripts/GUI/CameraSettings.cs	/^public class CameraSettings {$/;"	c
CanAddComponent	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool CanAddComponent ()$/;"	m	class:NewScriptWindow	file:
CanCreate	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool CanCreate ()$/;"	m	class:NewScriptWindow	file:
CarAIControl	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^public class CarAIControl : MonoBehaviour$/;"	c
CarAudio	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^public class CarAudio : MonoBehaviour {$/;"	c
CarController	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^public class CarController : MonoBehaviour$/;"	c
CarGUI	Sample Assets/Vehicles/Car/Scripts/CarGUI.cs	/^public class CarGUI : MonoBehaviour$/;"	c
CarSelfRighting	Sample Assets/Vehicles/Car/Scripts/CarSelfRighting.cs	/^public class CarSelfRighting : MonoBehaviour$/;"	c
CarUserControl	Sample Assets/Vehicles/Car/Scripts/CarUserControl.cs	/^public class CarUserControl : MonoBehaviour$/;"	c
CatmullRom	Sample Assets/Utility/WaypointCircuit.cs	/^	Vector3 CatmullRom(Vector3 _P0, Vector3 _P1, Vector3 _P2, Vector3 _P3, float _i)$/;"	m	class:WaypointCircuit	file:
Change	Change.cs	/^public class Change : MonoBehaviour {$/;"	c
ChangeLevel	_Local/Assets/Scripts/GameManager.cs	/^	IEnumerator ChangeLevel(GameObject newLevel)$/;"	m	class:GameManager	file:
Check	Scripts/Goal.cs	/^	IEnumerator Check () {$/;"	m	class:Goal	file:
CheckCamera	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	bool CheckCamera()$/;"	m	class:LightShafts	file:
CheckCondition	Scripts/GoalConditions/CollectAll.cs	/^	IEnumerator CheckCondition () {$/;"	m	class:CollectAll	file:
CheckEnableContent	Sample Assets/Utility/PlatformSpecificContent.cs	/^    void CheckEnableContent()$/;"	m	class:PlatformSpecificContent	file:
CheckEnableControlRig	Sample Assets/Cross Platform Input/Scripts/MobileControlRig.cs	/^	void CheckEnableControlRig()$/;"	m	class:MobileControlRig	file:
CheckFight	Scripts/SelectUnits.cs	/^	IEnumerator CheckFight()$/;"	m	class:SelectUnits	file:
CheckInterpretation	Scripts/SelectUnits.cs	/^	IEnumerator CheckInterpretation(ControllerIntent i)$/;"	m	class:SelectUnits	file:
CheckJump	Scripts/SelectUnits.cs	/^	IEnumerator CheckJump()$/;"	m	class:SelectUnits	file:
CheckMinRequirements	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public bool CheckMinRequirements()$/;"	m	class:LightShafts
CheckMove	Scripts/SelectUnits.cs	/^	IEnumerator CheckMove(){$/;"	m	class:SelectUnits	file:
CheckParamBounds	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	function CheckParamBounds()$/;"	f
CheckSelect	Scripts/SelectUnits.cs	/^	IEnumerator CheckSelect(){$/;"	m	class:SelectUnits	file:
CheckStop	Scripts/SelectUnits.cs	/^	IEnumerator CheckStop()$/;"	m	class:SelectUnits	file:
CheckXMargin	Sample Assets/2D/Scripts/CameraFollow.cs	/^	bool CheckXMargin()$/;"	m	class:CameraFollow	file:
CheckYMargin	Sample Assets/2D/Scripts/CameraFollow.cs	/^	bool CheckYMargin()$/;"	m	class:CameraFollow	file:
ClampInputs	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void ClampInputs()$/;"	m	class:AeroplaneController	file:
ClassAlreadyExists	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool ClassAlreadyExists ()$/;"	m	class:NewScriptWindow	file:
ClassExists	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool ClassExists (string className)$/;"	m	class:NewScriptWindow	file:
ClassName	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private string ClassName$/;"	p	class:UnityEditor.NewScriptGenerator
ClassNameIsInvalid	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool ClassNameIsInvalid ()$/;"	m	class:NewScriptWindow	file:
ClearBox	Scripts/GUI/GUIBox.cs	/^	public void ClearBox()$/;"	m	class:GUIBox
ClearButton	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool ClearButton ()$/;"	m	class:NewScriptWindow	file:
ClickButton	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^internal class ClickButton : AbstractButton {$/;"	c
Clouds	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^public class Clouds : MonoBehaviour {$/;"	c
CoRotator	Scripts/CoRotator.cs	/^public class CoRotator : MonoBehaviour {$/;"	c
CollectAll	Scripts/GoalConditions/CollectAll.cs	/^public class CollectAll : MonoBehaviour, IGoalCondition {$/;"	c
Collectable	Scripts/Collectable.cs	/^public class Collectable : MonoBehaviour$/;"	c
Collector	Scripts/Collector.cs	/^public class Collector : MonoBehaviour$/;"	c
CollisionAction	_Local/Assets/Scripts/Player.cs	/^	private delegate void CollisionAction(GameObject target);$/;"	m	class:Player	file:
CollisionData	_Local/Assets/Scripts/Player.cs	/^		public CollisionData(string direction, string objectName) {$/;"	m	struct:Player.CollisionData
CollisionData	_Local/Assets/Scripts/Player.cs	/^	public struct CollisionData {$/;"	s	class:Player
CollisionDestroy	_Local/Assets/Scripts/Player.cs	/^	void CollisionDestroy(GameObject target) {$/;"	m	class:Player	file:
Combine	Sample Assets/Utility/MeshCombineUtility.cs	/^	public static Mesh Combine (MeshInstance[] combines, bool generateStrips)$/;"	m	class:MeshCombineUtility
CombineChildren	Sample Assets/Utility/CombineChildren.cs	/^public class CombineChildren : MonoBehaviour {$/;"	c
Compare	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^		public int Compare(object x, object y) {$/;"	m	class:ProtectCameraFromWallClip.RayHitComparer
Compare	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^		public int Compare(object x, object y)$/;"	m	class:FirstPersonCharacter.RayHitComparer
Compare	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public int Compare(object x, object y)$/;"	m	class:ThirdPersonCharacter.RayHitComparer
Compare	Sample Assets/Utility/WaypointCircuit.cs	/^		public int Compare(object x, object y) {$/;"	m	class:WaypointListDrawer.TransformNameComparer
Compare	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		public int Compare (string x, string y)$/;"	m	class:NewScriptWindow.TemplateNameComparer
Composition	Composition.cs	/^public class Composition : MonoBehaviour {$/;"	c
ConditionMet	Scripts/Goal.cs	/^	bool ConditionMet { get; set; }$/;"	p	interface:IGoalCondition
ConditionMet	Scripts/GoalConditions/CollectAll.cs	/^	public bool ConditionMet { get; set; }$/;"	p	class:CollectAll
ConditionMet	Scripts/GoalConditions/ReachObject.cs	/^	public bool ConditionMet { get; set; }$/;"	p	class:ReachObject
ConfigurationManager	Scripts/ConfigurationManager.cs	/^public class ConfigurationManager : MonoBehaviour$/;"	c
ConstantSlerp	Standard Assets/Character Controllers/Sources/Scripts/PlatformInputController.js	/^function ConstantSlerp (from : Vector3, to : Vector3, angle : float) {$/;"	f
ConstrainedMover	Scripts/ConstrainedMover.cs	/^public class ConstrainedMover : MonoBehaviour {$/;"	c
ControlSurface	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^    public class ControlSurface                         \/\/ Control surfaces represent the different flaps of the aeroplane.$/;"	c	class:AeroplaneControlSurfaceAnimator
ControlThrottle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void ControlThrottle ()$/;"	m	class:AeroplaneController	file:
ControllerIntent	Scripts/SelectUnits.cs	/^public enum ControllerIntent$/;"	g
ConvertInputToAccelerationAndBraking	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void ConvertInputToAccelerationAndBraking (float accelBrakeInput)$/;"	m	class:CarController	file:
ConvertMoveInput	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void ConvertMoveInput ()$/;"	m	class:ThirdPersonCharacter	file:
Copy	Sample Assets/Utility/MeshCombineUtility.cs	/^	static void Copy (int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)$/;"	m	class:MeshCombineUtility	file:
Copy	Sample Assets/Utility/MeshCombineUtility.cs	/^	static void Copy (int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)$/;"	m	class:MeshCombineUtility	file:
CopyColors	Sample Assets/Utility/MeshCombineUtility.cs	/^	static void CopyColors (int vertexcount, Color[] src, Color[] dst, ref int offset)$/;"	m	class:MeshCombineUtility	file:
CopyNormal	Sample Assets/Utility/MeshCombineUtility.cs	/^	static void CopyNormal (int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)$/;"	m	class:MeshCombineUtility	file:
CopyTangents	Sample Assets/Utility/MeshCombineUtility.cs	/^	static void CopyTangents (int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)$/;"	m	class:MeshCombineUtility	file:
Create	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void Create ()$/;"	m	class:NewScriptWindow	file:
CreateAndCancelButtonsGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void CreateAndCancelButtonsGUI ()$/;"	m	class:NewScriptWindow	file:
CreateComputeResources	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/DepthOfFieldScatter.js	/^	function CreateComputeResources ()$/;"	f
CreateScript	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void CreateScript ()$/;"	m	class:NewScriptWindow	file:
CreateVirtualAxes	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    private void CreateVirtualAxes()$/;"	m	class:JoystickAbstract	file:
Creator	Scripts/Creator.cs	/^public class Creator : MonoBehaviour$/;"	c
CrossPlatformInitialize	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static CrossPlatformInitialize()$/;"	m	class:CrossPlatformInitialize	file:
CrossPlatformInitialize	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^public class CrossPlatformInitialize {$/;"	c
CrossPlatformInput	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^    static CrossPlatformInput () {$/;"	m	class:CrossPlatformInput	file:
CrossPlatformInput	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^public static class CrossPlatformInput {$/;"	c
CurrentSpeed	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public float CurrentSpeed { get; private set; }                                 \/\/ the current speed of the car$/;"	p	class:CarController
CurrentSteerAngle	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public float CurrentSteerAngle{ get; private set; }                             \/\/ The current steering angle for steerable wheels.$/;"	p	class:CarController
CurveDisplayTest	_Local/CurveDisplayTest.cs	/^public class CurveDisplayTest : MonoBehaviour {$/;"	c
CurveFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    float CurveFactor (float factor)$/;"	m	class:CarController	file:
Curved	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^        Curved                                                                  \/\/ Curved$/;"	e	enum:JoystickAbstract.ReturnStyleOption	file:
Curved	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		Curved                                                                  \/\/ Curved$/;"	e	enum:TouchJoystick.ReturnStyleOption	file:
CustomEditorTargetClassNameGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void CustomEditorTargetClassNameGUI ()$/;"	m	class:NewScriptWindow	file:
Cut	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function Cut (dummyTarget : Transform, dummyCenter : Vector3)$/;"	f
DEBUG_MODE	Scripts/InputInterpreter.cs	/^	public bool DEBUG_MODE = false;$/;"	f	class:InputInterpreter
DEBUG_MODE	Scripts/SelectUnits.cs	/^	public bool DEBUG_MODE = false;$/;"	f	class:SelectUnits
DEBUG_MODE	Scripts/World/Mover.cs	/^	public bool DEBUG_MODE = false;$/;"	f	class:Mover
DEFAULT	Scripts/World/InteractorType.cs	/^	DEFAULT$/;"	e	enum:InteractorType	file:
DEFAULT	SimpleLeg.cs	/^public enum LEG_STATE { DEFAULT, LIFTING, LOWERING, JUMPING }$/;"	e	enum:LEG_STATE	file:
DIE	Scripts/World/InteractionResult.cs	/^	DIE,$/;"	e	enum:InteractionResult	file:
DUCK	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
Deactivate	Sample Assets/Utility/ActivateTrigger.cs	/^		Deactivate= 5 \/\/ Decativate target GameObject$/;"	e	enum:ActivateTrigger.Mode	file:
Deactivate	Sample Assets/Utility/TimedObjectActivator.cs	/^		Deactivate,$/;"	e	enum:TimedObjectActivator.Action	file:
Deactivate	Sample Assets/Utility/TimedObjectActivator.cs	/^	IEnumerator Deactivate(Entry entry)$/;"	m	class:TimedObjectActivator	file:
DeadZoneAndNormaliseAxes	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    private void DeadZoneAndNormaliseAxes(ref float modifiedX, ref float modifiedY)$/;"	m	class:JoystickAbstract	file:
DebugDrawStuff	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function DebugDrawStuff ()$/;"	f
DelayedReset	Sample Assets/Utility/ObjectResetter.cs	/^	public void DelayedReset (float delay) {$/;"	m	class:ObjectResetter
DemoParticleSystem	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public class DemoParticleSystem$/;"	c	class:ParticleSceneControls
DemoParticleSystemList	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public class DemoParticleSystemList$/;"	c	class:ParticleSceneControls
Destroy	Sample Assets/Utility/TimedObjectActivator.cs	/^		Destroy,$/;"	e	enum:TimedObjectActivator.Action	file:
DestroyNow	Standard Assets/Particles/Legacy Particles/TimedObjectDestructor.js	/^function DestroyNow ()$/;"	f
DidJump	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function DidJump ()$/;"	f
Disable	Sample Assets/Cross Platform Input/Scripts/AbstractButton.cs	/^    public void Disable () {$/;"	m	class:AbstractButton
Disable	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static void Disable()$/;"	m	class:CrossPlatformInitialize	file:
DisableValidate	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static bool DisableValidate()$/;"	m	class:CrossPlatformInitialize	file:
DoActivateTrigger	Sample Assets/Utility/ActivateTrigger.cs	/^	void DoActivateTrigger () {$/;"	m	class:ActivateTrigger	file:
DragObject	Sample Assets/Utility/DragRigidbody.js	/^function DragObject (distance : float)$/;"	f
DrawBorder	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/PostEffectsBase.js	/^	function DrawBorder (dest : RenderTexture, material : Material ) {$/;"	f
DrawGizmos	Sample Assets/Utility/WaypointCircuit.cs	/^	void DrawGizmos(bool selected)$/;"	m	class:WaypointCircuit	file:
DropCollectable	Scripts/Collector.cs	/^	void DropCollectable(GameObject collectable)$/;"	m	class:Collector	file:
Dynamic	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	Dynamic = 0,$/;"	e	enum:LightShaftsShadowmapMode	file:
DynamicShadowSettings	Sample Assets/Utility/DynamicShadowSettings.cs	/^public class DynamicShadowSettings : MonoBehaviour {$/;"	c
Elevator	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^            Elevator,                                   \/\/ Horizontal flaps used to adjusting the pitch of a plane, rotate on the x axis.$/;"	e	enum:AeroplaneControlSurfaceAnimator.ControlSurface.Type	file:
Enable	Sample Assets/Cross Platform Input/Scripts/AbstractButton.cs	/^    public void Enable (string name,bool pairwithinputmanager, Rect rect) {$/;"	m	class:AbstractButton
Enable	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static void Enable()$/;"	m	class:CrossPlatformInitialize	file:
Enable	Sample Assets/Utility/ActivateTrigger.cs	/^		Enable    = 3, \/\/ Enable a component$/;"	e	enum:ActivateTrigger.Mode	file:
EnableContent	Sample Assets/Utility/PlatformSpecificContent.cs	/^	void EnableContent(bool enabled)$/;"	m	class:PlatformSpecificContent	file:
EnableControlRig	Sample Assets/Cross Platform Input/Scripts/MobileControlRig.cs	/^	void EnableControlRig(bool enabled)$/;"	m	class:MobileControlRig	file:
EnableValidate	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static bool EnableValidate()$/;"	m	class:CrossPlatformInitialize	file:
EngineAudioOptions	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public enum EngineAudioOptions                                                      \/\/ Options for the engine audio      $/;"	g	class:CarAudio
EnginePower	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float EnginePower { get; private set; }                      \/\/ How much power the engine is being given.$/;"	p	class:AeroplaneController
Entries	Sample Assets/Utility/TimedObjectActivator.cs	/^	public class Entries$/;"	c	class:TimedObjectActivator
EntriesDrawer	Sample Assets/Utility/TimedObjectActivator.cs	/^public class EntriesDrawer : PropertyDrawer$/;"	c
Entry	Sample Assets/Utility/TimedObjectActivator.cs	/^	public class Entry$/;"	c	class:TimedObjectActivator
ExplosionFireAndDebris	Sample Assets/Effects/Particle Systems/scripts/ExplosionFireAndDebris.cs	/^public class ExplosionFireAndDebris : MonoBehaviour {$/;"	c
ExplosionPhysicsForce	Sample Assets/Effects/Particle Systems/scripts/ExplosionPhysicsForce.cs	/^public class ExplosionPhysicsForce : MonoBehaviour {$/;"	c
Explosive	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^public class Explosive : MonoBehaviour {$/;"	c
Extinguish	Sample Assets/Effects/Particle Systems/scripts/ExtinguishableParticleSystem.cs	/^	public void Extinguish()$/;"	m	class:ExtinguishableParticleSystem
Extinguish	Sample Assets/Effects/Particle Systems/scripts/FireLight.cs	/^	public void Extinguish()$/;"	m	class:FireLight
ExtinguishableParticleSystem	Sample Assets/Effects/Particle Systems/scripts/ExtinguishableParticleSystem.cs	/^public class ExtinguishableParticleSystem : MonoBehaviour {$/;"	c
FADE_PROPERTY_NAME	Scripts/Fader.cs	/^	private const string FADE_PROPERTY_NAME = "_Cutoff";$/;"	f	class:Fader	file:
FORWARD	Scripts/Agent/Act/LegController.cs	/^	public enum MotorMotion { FORWARD, SET, BACKWARD, FREE }$/;"	e	enum:RusticGames.Act.MotorMotion	file:
FPSCounter	Sample Assets/Utility/FPSCounter.cs	/^public class FPSCounter : MonoBehaviour {$/;"	c
FREE	Scripts/Agent/Act/LegController.cs	/^	public enum MotorMotion { FORWARD, SET, BACKWARD, FREE }$/;"	e	enum:RusticGames.Act.MotorMotion	file:
Fade	Scripts/FadeInOut.cs	/^	public IEnumerator Fade() {$/;"	m	class:FadeInOut
FadeInOut	Scripts/FadeInOut.cs	/^public class FadeInOut : MonoBehaviour {$/;"	c
Fader	Scripts/Fader.cs	/^public class Fader : MonoBehaviour {$/;"	c
FindAeroplaneParent	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^	AeroplaneController FindAeroplaneParent()$/;"	m	class:JetParticleEffect	file:
FindAndTargetPlayer	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	public void FindAndTargetPlayer() {$/;"	m	class:AbstractTargetFollower
FindCamera	Sample Assets/Utility/DragRigidbody.js	/^function FindCamera ()$/;"	f
FindPairedButton	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	void FindPairedButton()$/;"	m	class:AxisTouchButton	file:
FireLight	Sample Assets/Effects/Particle Systems/scripts/FireLight.cs	/^public class FireLight : MonoBehaviour {$/;"	c
FirstPersonCharacter	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^public class FirstPersonCharacter : MonoBehaviour$/;"	c
FirstPersonHeadBob	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^public class FirstPersonHeadBob : MonoBehaviour {$/;"	c
FixedUpdate	Sample Assets/2D/Scripts/Platformer2DUserControl.cs	/^	void FixedUpdate()$/;"	m	class:Platformer2DUserControl	file:
FixedUpdate	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	void FixedUpdate()$/;"	m	class:PlatformerCharacter2D	file:
FixedUpdate	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^		FixedUpdate,                                        \/\/ Update in FixedUpdate (for tracking rigidbodies).$/;"	e	enum:AbstractTargetFollower.UpdateType	file:
FixedUpdate	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	void FixedUpdate() {$/;"	m	class:AbstractTargetFollower	file:
FixedUpdate	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	public void FixedUpdate ()$/;"	m	class:FirstPersonCharacter
FixedUpdate	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	void FixedUpdate () {$/;"	m	class:FirstPersonHeadBob	file:
FixedUpdate	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	void FixedUpdate ()$/;"	m	class:ThirdPersonUserControl	file:
FixedUpdate	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	void FixedUpdate () {$/;"	m	class:AfterburnerPhysicsForce	file:
FixedUpdate	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	void FixedUpdate()$/;"	m	class:AeroplaneAIControl	file:
FixedUpdate	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl2Axis.cs	/^    void FixedUpdate()$/;"	m	class:AeroplaneUserControl2Axis	file:
FixedUpdate	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl4Axis.cs	/^    void FixedUpdate()$/;"	m	class:AeroplaneUserControl4Axis	file:
FixedUpdate	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^    void FixedUpdate()$/;"	m	class:CarAIControl	file:
FixedUpdate	Sample Assets/Vehicles/Car/Scripts/CarUserControl.cs	/^    void FixedUpdate()$/;"	m	class:CarUserControl	file:
FixedUpdate	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    void FixedUpdate()$/;"	m	class:Wheel	file:
FixedUpdate	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^    void FixedUpdate ()$/;"	m	class:BallUserControl	file:
FixedUpdate	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function FixedUpdate () {$/;"	f
Flip	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	void Flip ()$/;"	m	class:PlatformerCharacter2D	file:
FlipWorkaround	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void FlipWorkaround()$/;"	m	class:LightShafts	file:
FollowTarget	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	protected abstract void FollowTarget(float deltaTime);$/;"	m	class:AbstractTargetFollower
FollowTarget	Sample Assets/Cameras/Scripts/AutoCam.cs	/^	protected override void FollowTarget(float deltaTime)$/;"	m	class:AutoCam
FollowTarget	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	protected override void FollowTarget (float deltaTime)$/;"	m	class:FreeLookCam
FollowTarget	Sample Assets/Cameras/Scripts/HandHeldCam.cs	/^	protected override void FollowTarget (float deltaTime)$/;"	m	class:HandHeldCam
FollowTarget	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^	protected override void FollowTarget (float deltaTime)$/;"	m	class:LookatTarget
FollowTarget	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	protected override void FollowTarget (float deltaTime)$/;"	m	class:PivotBasedCameraRig
FollowTarget	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	protected override void FollowTarget (float deltaTime)$/;"	m	class:TargetFieldOfView
FollowTarget	Sample Assets/Utility/FollowTarget.cs	/^public class FollowTarget : MonoBehaviour$/;"	c
ForEachTouch	Sample Assets/Cross Platform Input/Scripts/Joystick.cs	/^    protected override void ForEachTouch(Touch touch, Vector2 guiTouchPos)$/;"	m	class:Joystick
ForEachTouch	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected virtual void ForEachTouch (Touch touch, Vector2 guiTouchPos)$/;"	m	class:JoystickAbstract
ForEachTouch	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    protected override void ForEachTouch(Touch touch, Vector2 guiTouchPos)$/;"	m	class:TouchPad
ForEachTouch	Sample Assets/Cross Platform Input/Scripts/TouchPadPositional.cs	/^    protected override void ForEachTouch(Touch touch, Vector2 guiTouchPos)$/;"	m	class:TouchPadPositional
ForEachTouch	Sample Assets/Cross Platform Input/Scripts/TouchPadRelativePositional.cs	/^    protected override void ForEachTouch(Touch touch, Vector2 guiTouchPos)$/;"	m	class:TouchPadRelativePositional
ForEachTouch	Sample Assets/Cross Platform Input/Scripts/TouchPadSwipe.cs	/^    protected override void ForEachTouch(Touch touch, Vector2 guiTouchPos)$/;"	m	class:TouchPadSwipe
ForcedReset	Sample Assets/Utility/ForcedReset.cs	/^public class ForcedReset : MonoBehaviour {$/;"	c
ForwardAxis	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		ForwardAxis,$/;"	e	enum:TiltInput.AxisOptions	file:
ForwardSpeed	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float ForwardSpeed { get; private set; }                     \/\/ How fast the aeroplane is traveling in it's forward direction.$/;"	p	class:AeroplaneController
FourChannel	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^		FourChannel                                                                     \/\/ four Channel audio$/;"	e	enum:CarAudio.EngineAudioOptions	file:
FreeLookCam	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^public class FreeLookCam : PivotBasedCameraRig$/;"	c
FreeLookCamInspector	Sample Assets/Cameras/Scripts/Editor/FreeLookCamInspector.cs	/^public class FreeLookCamInspector : Editor {$/;"	c
FullSpeedTex	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	public Texture FullSpeedTex;                       \/\/ the gui texture for full speed$/;"	f	class:SlowMoButton
FunctionData	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public FunctionData (string headerName)$/;"	m	struct:UnityEditor.FunctionData
FunctionData	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^	internal struct FunctionData$/;"	s	namespace:UnityEditor
FunctionHeader	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool FunctionHeader (string header, bool expandedByDefault)$/;"	m	class:NewScriptWindow	file:
FunctionsGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void FunctionsGUI ()$/;"	m	class:NewScriptWindow	file:
GAME_IS_RUNNING	Scripts/InputInterpreter.cs	/^	public bool GAME_IS_RUNNING = true;$/;"	f	class:InputInterpreter
GAME_IS_RUNNING	Scripts/SelectUnits.cs	/^	public static bool GAME_IS_RUNNING = true;$/;"	f	class:SelectUnits
GOOMBA	Scripts/World/InteractorType.cs	/^	GOOMBA,$/;"	e	enum:InteractorType	file:
GROW	Scripts/World/InteractionResult.cs	/^	GROW,$/;"	e	enum:InteractionResult	file:
GUIArea	Scripts/GUI/HUD.cs	/^	private Rect GUIArea = new Rect(10f, 10f, 100, 200);$/;"	f	class:HUD	file:
GUIBox	Scripts/GUI/GUIBox.cs	/^	public GUIBox ()$/;"	m	class:GUIBox
GUIBox	Scripts/GUI/GUIBox.cs	/^public class GUIBox$/;"	c
GameManager	_Local/Assets/Scripts/GameManager.cs	/^public class GameManager : MonoBehaviour$/;"	c
GameManagerCollect	Scripts/GameManagerCollect.cs	/^public class GameManagerCollect : MonoBehaviour$/;"	c
GearFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public float GearFactor  { get; private set; }                                  \/\/ value between 0-1 indicating where the current revs fall within the current range of revs for this gear$/;"	p	class:CarController
GearNum	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public int GearNum { get; private set; }                                        \/\/ the current gear we're in.$/;"	p	class:CarController
GearState	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	enum GearState$/;"	g	class:LandingGear
GeneralCollider	Scripts/World/Interaction.cs	/^	public GeneralCollider(Collider c) { is3d = true; collider3d = c; go = c.gameObject; }$/;"	m	class:GeneralCollider
GeneralCollider	Scripts/World/Interaction.cs	/^	public GeneralCollider(Collider2D c) { is3d = false; collider2d = c; go = c.gameObject; }$/;"	m	class:GeneralCollider
GeneralCollider	Scripts/World/Interaction.cs	/^public class GeneralCollider {$/;"	c
GenerateClouds	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	public IEnumerator GenerateClouds()$/;"	m	class:Clouds
GenerateLevel	_Local/Assets/Scripts/GameManager.cs	/^	private void GenerateLevel(GameObject level, BlockGenerator generator)$/;"	m	class:GameManager	file:
GetAbsoluteBuiltinTemplatePath	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string GetAbsoluteBuiltinTemplatePath ()$/;"	m	class:NewScriptWindow	file:
GetAbsoluteCustomTemplatePath	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string GetAbsoluteCustomTemplatePath ()$/;"	m	class:NewScriptWindow	file:
GetAllClasses	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	static List<string> GetAllClasses (string nameSpace)$/;"	m	class:NewScriptWindow	file:
GetAxis	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	private static float GetAxis(string name, bool raw)$/;"	m	class:CrossPlatformInput	file:
GetAxis	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static float GetAxis(string name) {$/;"	m	class:CrossPlatformInput
GetAxis	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/MobileInput.cs	/^    public override float GetAxis (string name, bool raw) {$/;"	m	class:MobileInput
GetAxis	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/StandaloneInput.cs	/^    public override float GetAxis (string name, bool raw) {$/;"	m	class:StandaloneInput
GetAxis	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public abstract float GetAxis (string name, bool raw);$/;"	m	class:VirtualInput
GetAxisRaw	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static float GetAxisRaw(string name) {$/;"	m	class:CrossPlatformInput
GetBaseClass	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string GetBaseClass (string templateContent)$/;"	m	class:NewScriptWindow	file:
GetBoundsLocal	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	Bounds GetBoundsLocal()$/;"	m	class:LightShafts	file:
GetBoundsMatrix	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	Matrix4x4 GetBoundsMatrix()$/;"	m	class:LightShafts	file:
GetButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public bool GetButton {$/;"	p	class:CrossPlatformInput.VirtualButton
GetButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	private static bool GetButton(string name, ButtonAction action)$/;"	m	class:CrossPlatformInput	file:
GetButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static bool GetButton(string name)$/;"	m	class:CrossPlatformInput
GetButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^    public enum ButtonAction { GetButtonDown, GetButtonUp, GetButton };$/;"	e	enum:CrossPlatformInput.ButtonAction	file:
GetButton	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/MobileInput.cs	/^    public override bool GetButton (string name, CrossPlatformInput.ButtonAction action) {$/;"	m	class:MobileInput
GetButton	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/StandaloneInput.cs	/^    public override bool GetButton (string name, CrossPlatformInput.ButtonAction action) {$/;"	m	class:StandaloneInput
GetButton	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public abstract bool GetButton (string name, CrossPlatformInput.ButtonAction action);$/;"	m	class:VirtualInput
GetButtonDown	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public bool GetButtonDown {$/;"	p	class:CrossPlatformInput.VirtualButton
GetButtonDown	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static bool GetButtonDown(string name)$/;"	m	class:CrossPlatformInput
GetButtonDown	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^    public enum ButtonAction { GetButtonDown, GetButtonUp, GetButton };$/;"	e	enum:CrossPlatformInput.ButtonAction	file:
GetButtonUp	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public bool GetButtonUp {$/;"	p	class:CrossPlatformInput.VirtualButton
GetButtonUp	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static bool GetButtonUp(string name)$/;"	m	class:CrossPlatformInput
GetButtonUp	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^    public enum ButtonAction { GetButtonDown, GetButtonUp, GetButton };$/;"	e	enum:CrossPlatformInput.ButtonAction	file:
GetCenterOffset	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function GetCenterOffset ()$/;"	f
GetCreateButtonText	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string GetCreateButtonText ()$/;"	m	class:NewScriptWindow	file:
GetDefinesList	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static List<string> GetDefinesList(BuildTargetGroup group)$/;"	m	class:CrossPlatformInitialize	file:
GetDepthThresholdAdjusted	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	float GetDepthThresholdAdjusted()$/;"	m	class:LightShafts	file:
GetDesiredVelocity	Scripts/World/KeyboardMover.cs	/^	Vector3 GetDesiredVelocity (Vector3 distance)$/;"	m	class:KeyboardMover	file:
GetDesiredVelocity	Scripts/World/Mover.cs	/^	Vector3 GetDesiredVelocity (Vector3 distance)$/;"	m	class:Mover	file:
GetDirection	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function GetDirection () {$/;"	f
GetDirection	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function GetDirection () {$/;"	f
GetDistanceToTarget	Scripts/World/KeyboardMover.cs	/^	Vector3 GetDistanceToTarget (Vector3 target)$/;"	m	class:KeyboardMover	file:
GetDistanceToTarget	Scripts/World/Mover.cs	/^	Vector3 GetDistanceToTarget (Vector3 target)$/;"	m	class:Mover	file:
GetFrustumApex	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	float GetFrustumApex()$/;"	m	class:LightShafts	file:
GetFrustumRays	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	void GetFrustumRays(out Matrix4x4 frustumRays, out Vector3 cameraPosLocal)$/;"	m	class:LightShafts	file:
GetFunctionIsIncluded	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool GetFunctionIsIncluded (string baseClassName, string functionName, bool includeByDefault)$/;"	m	class:NewScriptWindow	file:
GetLightViewportPos	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	Vector4 GetLightViewportPos()$/;"	m	class:LightShafts	file:
GetLockCameraTimer	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function GetLockCameraTimer () $/;"	f
GetPlatformSpecificButtonImplementation	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^	public static AbstractButton GetPlatformSpecificButtonImplementation()$/;"	m	class:ButtonFactory
GetPropertyHeight	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	public override float GetPropertyHeight (SerializedProperty property, GUIContent label)$/;"	m	class:ReplacementListDrawer
GetPropertyHeight	Sample Assets/Utility/TimedObjectActivator.cs	/^	public override float GetPropertyHeight (SerializedProperty property, GUIContent label)$/;"	m	class:EntriesDrawer
GetPropertyHeight	Sample Assets/Utility/WaypointCircuit.cs	/^	public override float GetPropertyHeight (SerializedProperty property, GUIContent label)$/;"	m	class:WaypointListDrawer
GetRank	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		private int GetRank (string s)$/;"	m	class:NewScriptWindow.TemplateNameComparer	file:
GetRotationTarget	Scripts/World/Mover.cs	/^	Vector3 GetRotationTarget (Vector3 distance)$/;"	m	class:Mover	file:
GetRoutePoint	Sample Assets/Utility/WaypointCircuit.cs	/^	public RoutePoint GetRoutePoint(float dist)$/;"	m	class:WaypointCircuit
GetRoutePosition	Sample Assets/Utility/WaypointCircuit.cs	/^	public Vector3 GetRoutePosition(float dist)$/;"	m	class:WaypointCircuit
GetSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function GetSpeed () {$/;"	f
GetStringUntilSeperator	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string GetStringUntilSeperator (ref string source, string sep)$/;"	m	class:NewScriptWindow	file:
GetTemplate	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string GetTemplate (string nameWithoutExtension)$/;"	m	class:NewScriptWindow	file:
GetTemplateName	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string GetTemplateName ()$/;"	m	class:NewScriptWindow	file:
GetTemplateNames	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string[] GetTemplateNames ()$/;"	m	class:NewScriptWindow	file:
GetValue	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public float GetValue {$/;"	p	class:CrossPlatformInput.VirtualAxis
GetValueRaw	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public float GetValueRaw {$/;"	p	class:CrossPlatformInput.VirtualAxis
GetWorldInfoAtScreenPoint	Scripts/GUI/HUD.cs	/^	public ScreenPointToWorldInfo GetWorldInfoAtScreenPoint(Vector3 screenPoint, Camera perspective) {$/;"	m	class:HUD
GizmoGenerator	_Local/Assets/Scripts/GameManager.cs	/^	private void GizmoGenerator(Vector3 pos, Quaternion rotation, GameObject type)$/;"	m	class:GameManager	file:
Goal	Scripts/Goal.cs	/^public class Goal : MonoBehaviour {$/;"	c
Goomba	Goomba.cs	/^public class Goomba : MonoBehaviour$/;"	c
GroundCheck	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void GroundCheck ()$/;"	m	class:ThirdPersonCharacter	file:
GroundRayLength	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^    private const float GroundRayLength = 1f;                   \/\/ The length of the ray to check if the ball is grounded.$/;"	f	class:Ball	file:
Grow	Scripts/ScaleWithCollection.cs	/^	public enum Mode {Grow, Shrink}$/;"	e	enum:ScaleWithCollection.Mode	file:
HUD	Scripts/GUI/HUD.cs	/^public class HUD : MonoBehaviour {$/;"	c
HandHeldCam	Sample Assets/Cameras/Scripts/HandHeldCam.cs	/^public class HandHeldCam : LookatTarget {$/;"	c
HandleAirborneVelocities	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void HandleAirborneVelocities ()$/;"	m	class:ThirdPersonCharacter	file:
HandleBaseClass	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void HandleBaseClass ()$/;"	m	class:NewScriptWindow	file:
HandleGearChanging	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void HandleGearChanging ()$/;"	m	class:CarController	file:
HandleGroundedVelocities	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void HandleGroundedVelocities()$/;"	m	class:ThirdPersonCharacter	file:
HandleRotationMovement	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	void HandleRotationMovement()$/;"	m	class:FreeLookCam	file:
HasJumpReachedApex	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function HasJumpReachedApex ()$/;"	f
HelpField	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void HelpField (string helpText)$/;"	m	class:NewScriptWindow	file:
HingeData	Investigator.cs	/^public struct HingeData {$/;"	s
HingeUpdate	Investigator.cs	/^	public IEnumerator HingeUpdate() {$/;"	m	class:Investigator
History	History.cs	/^public class History : MonoBehaviour {$/;"	c
Hose	Sample Assets/Effects/Particle Systems/scripts/Hose.cs	/^public class Hose : MonoBehaviour {$/;"	c
Hub	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public Transform Hub { get; set; }$/;"	p	class:Wheel
IGoalCondition	Scripts/Goal.cs	/^public interface IGoalCondition$/;"	i
Immobilize	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public void Immobilize ()$/;"	m	class:AeroplaneController
Immobilize	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public void Immobilize ()$/;"	m	class:CarController
IndentLevel	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private int IndentLevel$/;"	p	class:UnityEditor.NewScriptGenerator
Init	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private static void Init ()$/;"	m	class:NewScriptWindow	file:
InitEpipolarTextures	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitEpipolarTextures()$/;"	m	class:LightShafts	file:
InitLUTs	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitLUTs ()$/;"	m	class:LightShafts	file:
InitMaterial	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitMaterial(ref Material material, Shader shader)$/;"	m	class:LightShafts	file:
InitMaterials	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitMaterials()$/;"	m	class:LightShafts	file:
InitRenderTexture	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitRenderTexture(ref RenderTexture rt, int width, int height, int depth, RenderTextureFormat format, bool temp = true)$/;"	m	class:LightShafts	file:
InitResources	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitResources()$/;"	m	class:LightShafts	file:
InitShadowmap	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitShadowmap()$/;"	m	class:LightShafts	file:
InitSpotFrustumMesh	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void InitSpotFrustumMesh()$/;"	m	class:LightShafts	file:
InputInterpreter	Scripts/InputInterpreter.cs	/^public class InputInterpreter : MonoBehaviour $/;"	c
InputMode	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public enum InputMode {$/;"	g	class:TouchJoystick
Instantiate	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		Instantiate,$/;"	e	enum:ParticleSceneControls.Mode	file:
IntentGatherer	Scripts/IntentGatherer.cs	/^public interface IntentGatherer {$/;"	i
IntentPipe	Scripts/IntentPipe.cs	/^public class IntentPipe : MonoBehaviour {$/;"	c
IntentionSetter	SimpleWalker.cs	/^public delegate IEnumerator IntentionSetter();$/;"	m
Interaction	Scripts/World/Interaction.cs	/^public class Interaction : MonoBehaviour {$/;"	c
InteractionLogic	Change.cs	/^	public delegate void InteractionLogic();$/;"	m	class:Change
InteractionLogic	Goomba.cs	/^	public delegate void InteractionLogic(GeneralCollider c);$/;"	m	class:Goomba
InteractionResult	Scripts/World/InteractionResult.cs	/^public enum InteractionResult {$/;"	g
InteractionResultMapping	Scripts/World/Interaction.cs	/^public class InteractionResultMapping {$/;"	c
InteractorType	Scripts/World/InteractorType.cs	/^public enum InteractorType$/;"	g
InterpolateAlongRays	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void InterpolateAlongRays(Vector4 lightPos)$/;"	m	class:LightShafts	file:
InterpretationDelegate	Scripts/SelectUnits.cs	/^ public delegate IEnumerator InterpretationDelegate();$/;"	m	class:SelectUnits
IntersectsNearPlane	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	bool IntersectsNearPlane()$/;"	m	class:LightShafts	file:
InvalidTargetPath	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool InvalidTargetPath ()$/;"	m	class:NewScriptWindow	file:
InvalidTargetPathForEditorScript	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool InvalidTargetPathForEditorScript ()$/;"	m	class:NewScriptWindow	file:
Investigator	Investigator.cs	/^public class Investigator : MonoBehaviour {$/;"	c
IsEditorClass	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool IsEditorClass (string className)$/;"	m	class:NewScriptWindow	file:
IsFolder	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool IsFolder (Object obj)$/;"	m	class:NewScriptWindow	file:
IsGrounded	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function IsGrounded () {$/;"	f
IsGrounded	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function IsGrounded () {$/;"	f
IsGrounded	_Local/Assets/Scripts/Jump.cs	/^	bool IsGrounded()$/;"	m	class:Jump	file:
IsGroundedWithTimeout	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function IsGroundedWithTimeout ()$/;"	f
IsJumping	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function IsJumping () {$/;"	f
IsJumping	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function IsJumping () {$/;"	f
IsMovingBackwards	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function IsMovingBackwards () {$/;"	f
IsSliding	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function IsSliding () {$/;"	f
IsTouchingCeiling	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function IsTouchingCeiling () {$/;"	f
IsVisible	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	bool IsVisible()$/;"	m	class:LightShafts	file:
JUMP	SimpleWalker.cs	/^public enum LegsIntent { NONE, STAND, WALK, CROUCH, RUN, JUMP }$/;"	e	enum:LegsIntent	file:
JUMPING	SimpleLeg.cs	/^public enum LEG_STATE { DEFAULT, LIFTING, LOWERING, JUMPING }$/;"	e	enum:LEG_STATE	file:
JavaScript	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		JavaScript = 0,$/;"	e	enum:UnityEditor.Language	file:
JetParticleEffect	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^public class JetParticleEffect : MonoBehaviour {$/;"	c
Joystick	Sample Assets/Cross Platform Input/Scripts/Joystick.cs	/^public class Joystick : JoystickAbstract {$/;"	c
Joystick	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		Joystick,$/;"	e	enum:TouchJoystick.InputMode	file:
JoystickAbstract	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^public abstract class JoystickAbstract : MonoBehaviour {$/;"	c
Jump	_Local/Assets/Scripts/Jump.cs	/^public class Jump : MonoBehaviour$/;"	c
KeyboardConfiguration	KeyboardConfiguration.cs	/^public class KeyboardConfiguration : MonoBehaviour {$/;"	c
KeyboardMover	Scripts/World/KeyboardMover.cs	/^public class KeyboardMover : MonoBehaviour {$/;"	c
KeyboardTargeter	Scripts/World/KeyboardTargeter.cs	/^public class KeyboardTargeter : MonoBehaviour {$/;"	c
LEG_STATE	SimpleLeg.cs	/^public enum LEG_STATE { DEFAULT, LIFTING, LOWERING, JUMPING }$/;"	g
LIFTING	SimpleLeg.cs	/^public enum LEG_STATE { DEFAULT, LIFTING, LOWERING, JUMPING }$/;"	e	enum:LEG_STATE	file:
LOWERING	SimpleLeg.cs	/^public enum LEG_STATE { DEFAULT, LIFTING, LOWERING, JUMPING }$/;"	e	enum:LEG_STATE	file:
Label	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	function Label( text : String)$/;"	f
LandingGear	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^public class LandingGear : MonoBehaviour {$/;"	c
Language	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^	internal enum Language$/;"	g	namespace:UnityEditor
LanguageGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void LanguageGUI ()$/;"	m	class:NewScriptWindow	file:
LatchedFinger	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected internal virtual void LatchedFinger(int fingerId)$/;"	m	class:JoystickAbstract
LatchedFinger	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private void LatchedFinger(int fingerId)$/;"	m	class:TouchJoystick	file:
LateUpdate	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^		LateUpdate,                                         \/\/ Update in LateUpdate. (for tracking objects that are moved in Update)$/;"	e	enum:AbstractTargetFollower.UpdateType	file:
LateUpdate	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	void LateUpdate() {$/;"	m	class:AbstractTargetFollower	file:
LateUpdate	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	void LateUpdate() {$/;"	m	class:ProtectCameraFromWallClip	file:
LateUpdate	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	void LateUpdate()$/;"	m	class:AxisTouchButton	file:
LateUpdate	Sample Assets/Utility/FollowTarget.cs	/^	void LateUpdate ()$/;"	m	class:FollowTarget	file:
LateUpdate	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function LateUpdate () {$/;"	f
Leg	Scripts/Agent/Act/LegController.cs	/^	public class Leg {$/;"	c	namespace:RusticGames.Act
LegController	Scripts/Agent/Act/LegController.cs	/^	public class LegController {$/;"	c	namespace:RusticGames.Act
LegData	SimpleLeg.cs	/^public struct LegData {$/;"	s
LegState	Scripts/Agent/Act/LegController.cs	/^	public class LegState {$/;"	c	namespace:RusticGames.Act
LegsFunction	SimpleWalker.cs	/^public delegate IEnumerator LegsFunction(SimpleLeg legOne, SimpleLeg legTwo);$/;"	m
LegsIntent	SimpleWalker.cs	/^public enum LegsIntent { NONE, STAND, WALK, CROUCH, RUN, JUMP }$/;"	g
LegsState	Scripts/Agent/Act/LegController.cs	/^	public class LegsState {$/;"	c	namespace:RusticGames.Act
LegsUse	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	g	namespace:RusticGames.Act
Length	Sample Assets/Utility/WaypointCircuit.cs	/^	public float Length { get; private set; }$/;"	p	class:WaypointCircuit
Level	_Local/Assets/Scripts/Level.cs	/^public class Level : MonoBehaviour$/;"	c
LevelBlock	_Local/Assets/Scripts/Level.cs	/^public class LevelBlock$/;"	c
LightShafts	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^public partial class LightShafts : MonoBehaviour$/;"	c
LightShafts	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^public partial class LightShafts : MonoBehaviour$/;"	c
LightShafts	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^public partial class LightShafts : MonoBehaviour$/;"	c
LightShaftsShadowmapMode	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^public enum LightShaftsShadowmapMode$/;"	g
Linear	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^        Linear,                                                                 \/\/ Linearly$/;"	e	enum:JoystickAbstract.ReturnStyleOption	file:
Linear	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		Linear,                                                                 \/\/ Linearly$/;"	e	enum:TouchJoystick.ReturnStyleOption	file:
Linkable	Linkable.cs	/^public class Linkable : MonoBehaviour {$/;"	c
LinkingCollider	LinkingCollider.cs	/^public class LinkingCollider : MonoBehaviour {$/;"	c
LookDistance	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	private const float LookDistance = 100f;            \/\/ How far in front of the pivot the character's look target is.$/;"	f	class:FreeLookCam	file:
LookatTarget	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^public class LookatTarget : AbstractTargetFollower {$/;"	c
Lowered	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^		Lowered = 1$/;"	e	enum:LandingGear.GearState	file:
MANUAL	Scripts/SelectUnits.cs	/^	MANUAL,$/;"	e	enum:SelectionType	file:
MARIO	Scripts/World/InteractorType.cs	/^	MARIO,$/;"	e	enum:InteractorType	file:
MARIO_BOOTS	Scripts/World/InteractorType.cs	/^	MARIO_BOOTS,$/;"	e	enum:InteractorType	file:
MARIO_HEAD	Scripts/World/InteractorType.cs	/^	MARIO_HEAD,$/;"	e	enum:InteractorType	file:
MOUSE_CLICK_OR_DRAG	Scripts/SelectUnits.cs	/^	MOUSE_CLICK_OR_DRAG,$/;"	e	enum:SelectionType	file:
MUSHROOM	Scripts/World/InteractorType.cs	/^	MUSHROOM,$/;"	e	enum:InteractorType	file:
MappingType	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		public enum MappingType { NamedAxis, MousePositionX, MousePositionY, MousePositionZ };$/;"	g	class:TiltInput.AxisMapping
MaxBoundsExtent	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	public static float MaxBoundsExtent(Transform obj, bool includeEffects)$/;"	m	class:TargetFieldOfView
MaxEnginePower	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float MaxEnginePower { get { return maxEnginePower; } }      \/\/ The maximum output of the engine.$/;"	p	class:AeroplaneController
MaxRpm	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public float MaxRpm { get; private set; }$/;"	p	class:Wheel
MaxSpeed	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float MaxSpeed$/;"	p	class:CarController
MaxSteerAngle	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float MaxSteerAngle$/;"	p	class:CarController
MaxTorque	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float MaxTorque$/;"	p	class:CarController
Mechanism	Scripts/World/Mechanism.cs	/^public class Mechanism : MonoBehaviour$/;"	c
MeshCombineUtility	Sample Assets/Utility/MeshCombineUtility.cs	/^public class MeshCombineUtility {$/;"	c
MeshInstance	Sample Assets/Utility/MeshCombineUtility.cs	/^	public struct MeshInstance$/;"	s	class:MeshCombineUtility
Mobile	Sample Assets/Utility/PlatformSpecificContent.cs	/^		Mobile$/;"	e	enum:PlatformSpecificContent.BuildTargetGroup	file:
MobileControlRig	Sample Assets/Cross Platform Input/Scripts/MobileControlRig.cs	/^public class MobileControlRig : MonoBehaviour {$/;"	c
MobileInput	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/MobileInput.cs	/^public class MobileInput : VirtualInput {$/;"	c
Mode	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public enum Mode $/;"	g	class:ParticleSceneControls
Mode	Sample Assets/Utility/ActivateTrigger.cs	/^	public enum Mode {$/;"	g	class:ActivateTrigger
Mode	Scripts/ScaleWithCollection.cs	/^	public enum Mode {Grow, Shrink}$/;"	g	class:ScaleWithCollection
MotorMotion	Scripts/Agent/Act/LegController.cs	/^	public enum MotorMotion { FORWARD, SET, BACKWARD, FREE }$/;"	g	namespace:RusticGames.Act
MouseLook	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^public class MouseLook : MonoBehaviour {$/;"	c
MousePosition	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/MobileInput.cs	/^    public override Vector3 MousePosition () {$/;"	m	class:MobileInput
MousePosition	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/StandaloneInput.cs	/^    public override Vector3 MousePosition () {$/;"	m	class:StandaloneInput
MousePosition	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public abstract Vector3 MousePosition ();$/;"	m	class:VirtualInput
MousePositionX	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		public enum MappingType { NamedAxis, MousePositionX, MousePositionY, MousePositionZ };$/;"	e	enum:TiltInput.AxisMapping.MappingType	file:
MousePositionY	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		public enum MappingType { NamedAxis, MousePositionX, MousePositionY, MousePositionZ };$/;"	e	enum:TiltInput.AxisMapping.MappingType	file:
MousePositionZ	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		public enum MappingType { NamedAxis, MousePositionX, MousePositionY, MousePositionZ };$/;"	e	enum:TiltInput.AxisMapping.MappingType	file:
MouseSelector	Scripts/MouseSelector.cs	/^public class MouseSelector : MonoBehaviour {$/;"	c
MouseX	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public enum RotationAxes { MouseXAndY = 0, MouseX = 1, MouseY = 2 }$/;"	e	enum:MouseLook.RotationAxes	file:
MouseXAndY	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public enum RotationAxes { MouseXAndY = 0, MouseX = 1, MouseY = 2 }$/;"	e	enum:MouseLook.RotationAxes	file:
MouseY	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public enum RotationAxes { MouseXAndY = 0, MouseX = 1, MouseY = 2 }$/;"	e	enum:MouseLook.RotationAxes	file:
Move	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	public void Move(float move, bool crouch, bool jump)$/;"	m	class:PlatformerCharacter2D
Move	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	public void Move (Vector3 move, bool crouch, bool jump, Vector3 lookPos) {$/;"	m	class:ThirdPersonCharacter
Move	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public void Move(float rollInput, float pitchInput, float yawInput, float throttleInput, bool airBrakes)$/;"	m	class:AeroplaneController
Move	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public void Move (float steerInput, float accelBrakeInput)$/;"	m	class:CarController
Move	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^	public void Move (Vector3 moveDirection, bool jump)$/;"	m	class:Ball
Move	Scripts/Agent/Act/Move.cs	/^	public class Move : MonoBehaviour$/;"	c	namespace:RusticGames.Act
MoveJoystickGraphic	Sample Assets/Cross Platform Input/Scripts/Joystick.cs	/^    protected override void MoveJoystickGraphic()$/;"	m	class:Joystick
MoveJoystickGraphic	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected virtual void MoveJoystickGraphic ()$/;"	m	class:JoystickAbstract
MoveJoystickGraphic	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    protected override void MoveJoystickGraphic()$/;"	m	class:TouchPad
MoveLeftAndRight	Scripts/MoveLeftAndRight.cs	/^public class MoveLeftAndRight : MonoBehaviour$/;"	c
MoveTarget	Scripts/MoveTarget.cs	/^public class MoveTarget : MonoBehaviour {$/;"	c
MovementUtility	MovementUtility.cs	/^public class MovementUtility {$/;"	c
Mover	Scripts/World/Mover.cs	/^public class Mover : MonoBehaviour$/;"	c
MphtoMps	Sample Assets/Vehicles/Car/Scripts/CarGUI.cs	/^    private const float MphtoMps = 2.237f;      \/\/ constant for converting miles per hour to metres per second$/;"	f	class:CarGUI	file:
MpsToKph	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneGUI.cs	/^    private const float MpsToKph = 3.6f;        \/\/ Constant for converting metres per second to kilometres per hour.$/;"	f	class:AeroplaneGUI	file:
Mudguard	Sample Assets/Vehicles/Car/Scripts/Mudguard.cs	/^public class Mudguard : MonoBehaviour {$/;"	c
NONE	Scripts/World/InteractionResult.cs	/^	NONE,$/;"	e	enum:InteractionResult	file:
NONE	SimpleWalker.cs	/^public enum LegsIntent { NONE, STAND, WALK, CROUCH, RUN, JUMP }$/;"	e	enum:LegsIntent	file:
NameGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void NameGUI ()$/;"	m	class:NewScriptWindow	file:
NamedAxis	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		public enum MappingType { NamedAxis, MousePositionX, MousePositionY, MousePositionZ };$/;"	e	enum:TiltInput.AxisMapping.MappingType	file:
Networking	Scripts/Networking.cs	/^public class Networking : MonoBehaviour {$/;"	c
NeverBrake	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^		NeverBrake,$/;"	e	enum:CarAIControl.BrakeCondition	file:
NewScriptGenerator	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		public NewScriptGenerator (ScriptPrescription scriptPrescription)$/;"	m	class:UnityEditor.NewScriptGenerator
NewScriptGenerator	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^	internal class NewScriptGenerator$/;"	c	namespace:UnityEditor
NewScriptWindow	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	public NewScriptWindow ()$/;"	m	class:NewScriptWindow
NewScriptWindow	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^public class NewScriptWindow : EditorWindow$/;"	c
Normal	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		Normal,$/;"	e	enum:ParticleSceneControls.AlignMode	file:
NotSupported	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/PostEffectsBase.js	/^	function NotSupported () {$/;"	f
NumGears	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public int NumGears {					\/\/ the number of gears set up on the car$/;"	p	class:CarController
ONEUP	Scripts/World/InteractorType.cs	/^	ONEUP,$/;"	e	enum:InteractorType	file:
ORDER_ATTACK	Scripts/SelectUnits.cs	/^	ORDER_ATTACK,$/;"	e	enum:ControllerIntent	file:
ORDER_FOLLOW	Scripts/SelectUnits.cs	/^	ORDER_FOLLOW,$/;"	e	enum:ControllerIntent	file:
ORDER_JUMP	Scripts/SelectUnits.cs	/^	ORDER_JUMP,$/;"	e	enum:ControllerIntent	file:
ORDER_MOVE	Scripts/SelectUnits.cs	/^	ORDER_MOVE,$/;"	e	enum:ControllerIntent	file:
ORDER_STOP	Scripts/SelectUnits.cs	/^	ORDER_STOP$/;"	e	enum:ControllerIntent	file:
ObjectResetter	Sample Assets/Utility/ObjectResetter.cs	/^public class ObjectResetter : MonoBehaviour {$/;"	c
OnAnimatorIK	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void OnAnimatorIK(int layerIndex)$/;"	m	class:ThirdPersonCharacter	file:
OnAnimatorMove	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	public void OnAnimatorMove()$/;"	m	class:ThirdPersonCharacter
OnCollisionEnter	LinkingCollider.cs	/^	void OnCollisionEnter (Collision collision) {$/;"	m	class:LinkingCollider	file:
OnCollisionEnter	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	IEnumerator OnCollisionEnter(Collision col)$/;"	m	class:Explosive	file:
OnCollisionEnter	Scripts/World/Interaction.cs	/^	void OnCollisionEnter (Collision collision) {$/;"	m	class:Interaction	file:
OnCollisionEnter2D	Scripts/World/Interaction.cs	/^	void OnCollisionEnter2D (Collision2D collision) {$/;"	m	class:Interaction	file:
OnCollisionEnter2D	_Local/Assets/Scripts/Player.cs	/^	void OnCollisionEnter2D(Collision2D coll) {$/;"	m	class:Player	file:
OnCollisionStay	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	void OnCollisionStay(Collision col)$/;"	m	class:CarAIControl	file:
OnConnectedToServer	Scripts/Networking.cs	/^	void OnConnectedToServer () {$/;"	m	class:Networking	file:
OnControllerColliderHit	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function OnControllerColliderHit (hit : ControllerColliderHit) {$/;"	f
OnControllerColliderHit	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function OnControllerColliderHit (hit : ControllerColliderHit )$/;"	f
OnDisable	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	void OnDisable()$/;"	m	class:FreeLookCam	file:
OnDisable	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	void OnDisable()$/;"	m	class:FirstPersonCharacter	file:
OnDisable	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	void OnDisable() {$/;"	m	class:AxisTouchButton	file:
OnDisable	Sample Assets/Cross Platform Input/Scripts/Button.cs	/^    void OnDisable()$/;"	m	class:Button	file:
OnDisable	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected void OnDisable()$/;"	m	class:JoystickAbstract
OnDisable	Sample Assets/Cross Platform Input/Scripts/MobileControlRig.cs	/^	void OnDisable()$/;"	m	class:MobileControlRig	file:
OnDisable	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^    void OnDisable () {$/;"	m	class:TiltInput	file:
OnDisable	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private void OnDisable()$/;"	m	class:TouchJoystick	file:
OnDisable	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/DepthOfFieldScatter.js	/^	function OnDisable()$/;"	f
OnDisable	Sample Assets/Utility/PlatformSpecificContent.cs	/^    void OnDisable()$/;"	m	class:PlatformSpecificContent	file:
OnDisconnectedFromServer	Scripts/Networking.cs	/^	void OnDisconnectedFromServer (NetworkDisconnection info) {$/;"	m	class:Networking	file:
OnDrawGizmos	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	void OnDrawGizmos()$/;"	m	class:PivotBasedCameraRig	file:
OnDrawGizmos	Sample Assets/Utility/WaypointCircuit.cs	/^	void OnDrawGizmos()$/;"	m	class:WaypointCircuit	file:
OnDrawGizmos	Sample Assets/Utility/WaypointProgressTracker.cs	/^	void OnDrawGizmos()$/;"	m	class:WaypointProgressTracker	file:
OnDrawGizmos	Scripts/Agent/Act/Move.cs	/^		void OnDrawGizmos ()$/;"	m	class:RusticGames.Act.Move	file:
OnDrawGizmos	Scripts/SelectUnits.cs	/^	void OnDrawGizmos () {$/;"	m	class:SelectUnits	file:
OnDrawGizmos	Scripts/SpawnObjects.cs	/^	void OnDrawGizmos()$/;"	m	class:SpawnObjects	file:
OnDrawGizmos	Scripts/World/Affiliation.cs	/^	void OnDrawGizmos () {$/;"	m	class:Affiliation	file:
OnDrawGizmos	Scripts/World/Mover.cs	/^	void OnDrawGizmos () {$/;"	m	class:Mover	file:
OnDrawGizmos	_Local/Assets/Scripts/GameManager.cs	/^	void OnDrawGizmos()$/;"	m	class:GameManager	file:
OnDrawGizmos	_Local/Assets/Scripts/Jump.cs	/^	void OnDrawGizmos()$/;"	m	class:Jump	file:
OnDrawGizmosSelected	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	void OnDrawGizmosSelected()$/;"	m	class:LightShafts	file:
OnDrawGizmosSelected	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	void OnDrawGizmosSelected()$/;"	m	class:AfterburnerPhysicsForce	file:
OnDrawGizmosSelected	Sample Assets/Utility/WaypointCircuit.cs	/^	void OnDrawGizmosSelected()$/;"	m	class:WaypointCircuit	file:
OnDrawGizmosSelected	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void OnDrawGizmosSelected()$/;"	m	class:CarController	file:
OnDrawGizmosSelected	Scripts/ConstrainedMover.cs	/^	void OnDrawGizmosSelected() {$/;"	m	class:ConstrainedMover	file:
OnEnable	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	void OnEnable () {$/;"	m	class:AxisTouchButton	file:
OnEnable	Sample Assets/Cross Platform Input/Scripts/Button.cs	/^    void OnEnable()$/;"	m	class:Button	file:
OnEnable	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^    void OnEnable() {$/;"	m	class:ButtonDownTextureChange	file:
OnEnable	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected void OnEnable()$/;"	m	class:JoystickAbstract
OnEnable	Sample Assets/Cross Platform Input/Scripts/MobileControlRig.cs	/^	void OnEnable () {$/;"	m	class:MobileControlRig	file:
OnEnable	Sample Assets/Cross Platform Input/Scripts/MobileControlRig.cs	/^	void OnEnable()$/;"	m	class:MobileControlRig	file:
OnEnable	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	void OnEnable () {$/;"	m	class:TiltInput	file:
OnEnable	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private void OnEnable()$/;"	m	class:TouchJoystick	file:
OnEnable	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^	function OnEnable () {$/;"	f
OnEnable	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/DepthOfFieldScatter.js	/^	function OnEnable () {$/;"	f
OnEnable	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/PostEffectsBase.js	/^	function OnEnable() {$/;"	f
OnEnable	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	function OnEnable () {$/;"	f
OnEnable	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	void OnEnable () {$/;"	m	class:AutoMobileShaderSwitch	file:
OnEnable	Sample Assets/Utility/PlatformSpecificContent.cs	/^	void OnEnable()$/;"	m	class:PlatformSpecificContent	file:
OnEnable	Sample Assets/Utility/PlatformSpecificContent.cs	/^    void OnEnable () {$/;"	m	class:PlatformSpecificContent	file:
OnEnable	Sample Assets/Utility/SimpleActivatorMenu.cs	/^    void OnEnable () {$/;"	m	class:SimpleActivatorMenu	file:
OnEnable	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void OnEnable()$/;"	m	class:CarController	file:
OnEnable	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void OnEnable ()$/;"	m	class:NewScriptWindow	file:
OnFailedToConnect	Scripts/Networking.cs	/^	void OnFailedToConnect (NetworkConnectionError error) {$/;"	m	class:Networking	file:
OnFailedToConnectToMasterServer	Scripts/Networking.cs	/^	void OnFailedToConnectToMasterServer (NetworkConnectionError info) {$/;"	m	class:Networking	file:
OnGUI	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	public override void OnGUI (Rect position, SerializedProperty property, GUIContent label)$/;"	m	class:TiltInputAxisStylePropertyDrawer
OnGUI	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	public override void OnGUI (Rect position, SerializedProperty property, GUIContent label)$/;"	m	class:ReplacementListDrawer
OnGUI	Sample Assets/Utility/TimedObjectActivator.cs	/^	public override void OnGUI (Rect position, SerializedProperty property, GUIContent label)$/;"	m	class:EntriesDrawer
OnGUI	Sample Assets/Utility/WaypointCircuit.cs	/^	public override void OnGUI (Rect position, SerializedProperty property, GUIContent label)$/;"	m	class:WaypointListDrawer
OnGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void OnGUI ()$/;"	m	class:NewScriptWindow	file:
OnGUI	Scripts/GUI/HUD.cs	/^	void OnGUI () {$/;"	m	class:HUD	file:
OnGUI	Scripts/GameManagerCollect.cs	/^	void OnGUI()$/;"	m	class:GameManagerCollect	file:
OnGUI	Scripts/MouseSelector.cs	/^	void OnGUI()$/;"	m	class:MouseSelector	file:
OnGUI	Scripts/Networking.cs	/^	void OnGUI () {$/;"	m	class:Networking	file:
OnGUI	Scripts/TimeManagement.cs	/^	void OnGUI () {$/;"	m	class:TimeManagement	file:
OnGround	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public bool OnGround { get; private set; }$/;"	p	class:Wheel
OnInspectorGUI	Sample Assets/Cameras/Scripts/Editor/AutoCamInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:AutoCamInspector
OnInspectorGUI	Sample Assets/Cameras/Scripts/Editor/FreeLookCamInspector.cs	/^	public override void OnInspectorGUI ()$/;"	m	class:FreeLookCamInspector
OnInspectorGUI	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^    function OnInspectorGUI () {         $/;"	f
OnInspectorGUI	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	function OnInspectorGUI ()$/;"	f
OnInspectorGUI	Sample Assets/Vehicles/Car/Scripts/Editor/WheelEditor.cs	/^	public override void OnInspectorGUI()$/;"	m	class:WheelEditor
OnMasterServerEvent	Scripts/Networking.cs	/^	void OnMasterServerEvent (MasterServerEvent msEvent) {$/;"	m	class:Networking	file:
OnNetworkInstantiate	Scripts/Networking.cs	/^	void OnNetworkInstantiate (NetworkMessageInfo info) {$/;"	m	class:Networking	file:
OnParticleCollision	Sample Assets/Effects/Particle Systems/scripts/WaterHoseParticles.cs	/^    void OnParticleCollision(GameObject other) {$/;"	m	class:WaterHoseParticles	file:
OnPlayerConnected	Scripts/Networking.cs	/^	void OnPlayerConnected (NetworkPlayer player) {$/;"	m	class:Networking	file:
OnPlayerDisconnected	Scripts/Networking.cs	/^	void OnPlayerDisconnected (NetworkPlayer player) {$/;"	m	class:Networking	file:
OnRenderImage	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/DepthOfFieldScatter.js	/^	function OnRenderImage (source : RenderTexture, destination : RenderTexture) {		$/;"	f
OnRenderObject	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	public void OnRenderObject ()$/;"	m	class:LightShafts
OnSelectionChange	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void OnSelectionChange ()$/;"	m	class:NewScriptWindow	file:
OnSerializeNetworkView	Scripts/Networking.cs	/^	void OnSerializeNetworkView (BitStream stream, NetworkMessageInfo info) {$/;"	m	class:Networking	file:
OnServerInitialized	Scripts/Networking.cs	/^	void OnServerInitialized () {$/;"	m	class:Networking	file:
OnTriggerEnter	AreaGoal.cs	/^	void OnTriggerEnter(Collider other) {$/;"	m	class:AreaGoal	file:
OnTriggerEnter	Sample Assets/Utility/ActivateTrigger.cs	/^	void OnTriggerEnter (Collider other) {$/;"	m	class:ActivateTrigger	file:
OnTriggerEnter	Scripts/Collectable.cs	/^	void OnTriggerEnter(Collider other)$/;"	m	class:Collectable	file:
OnTriggerEnter	Scripts/World/Interaction.cs	/^	void OnTriggerEnter(Collider collider) {$/;"	m	class:Interaction	file:
OnTriggerEnter2D	Sample Assets/2D/Scripts/Restarter.cs	/^	void OnTriggerEnter2D (Collider2D other)$/;"	m	class:Restarter	file:
OnTriggerEnter2D	Scripts/World/Interaction.cs	/^	void OnTriggerEnter2D(Collider2D collider) {$/;"	m	class:Interaction	file:
OnTriggerExit	Scripts/Collectable.cs	/^	void OnTriggerExit()$/;"	m	class:Collectable	file:
OneWayFollow	OneWayFollow.cs	/^public class OneWayFollow : MonoBehaviour {$/;"	c
OnlyHorizontal	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^        OnlyHorizontal,                                                         \/\/ Only horizontal$/;"	e	enum:JoystickAbstract.AxisOption	file:
OnlyHorizontal	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		OnlyHorizontal,                                                         \/\/ Only horizontal$/;"	e	enum:TouchJoystick.AxisOption	file:
OnlyVertical	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^        OnlyVertical                                                            \/\/ Only vertical$/;"	e	enum:JoystickAbstract.AxisOption	file:
OnlyVertical	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		OnlyVertical                                                            \/\/ Only vertical$/;"	e	enum:TouchJoystick.AxisOption	file:
OpenFromAssetsMenu	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private static void OpenFromAssetsMenu ()$/;"	m	class:NewScriptWindow	file:
OpenFromComponentMenu	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private static void OpenFromComponentMenu ()$/;"	m	class:NewScriptWindow	file:
OpenFromComponentMenuValidation	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private static bool OpenFromComponentMenuValidation ()$/;"	m	class:NewScriptWindow	file:
OptionsGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void OptionsGUI ()$/;"	m	class:NewScriptWindow	file:
P0	Sample Assets/Utility/WaypointCircuit.cs	/^    Vector3 P0;$/;"	f	class:WaypointCircuit	file:
P1	Sample Assets/Utility/WaypointCircuit.cs	/^    Vector3 P1;$/;"	f	class:WaypointCircuit	file:
P2	Sample Assets/Utility/WaypointCircuit.cs	/^    Vector3 P2;$/;"	f	class:WaypointCircuit	file:
P3	Sample Assets/Utility/WaypointCircuit.cs	/^    Vector3 P3;$/;"	f	class:WaypointCircuit	file:
PRIZE	Scripts/World/InteractorType.cs	/^	PRIZE,$/;"	e	enum:InteractorType	file:
PROJECTILE	Scripts/World/InteractorType.cs	/^	PROJECTILE,$/;"	e	enum:InteractorType	file:
PUSH	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
ParameterData	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public ParameterData (string name, string type)$/;"	m	struct:UnityEditor.ParameterData
ParameterData	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^	internal struct ParameterData$/;"	s	namespace:UnityEditor
ParticleSceneControls	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^public class ParticleSceneControls : MonoBehaviour {$/;"	c
ParticleSystemDestroyer	Sample Assets/Utility/ParticleSystemDestroyer.cs	/^public class ParticleSystemDestroyer : MonoBehaviour {$/;"	c
ParticleSystemMultiplier	Sample Assets/Effects/Particle Systems/scripts/ParticleSystemMultiplier.cs	/^public class ParticleSystemMultiplier : MonoBehaviour {$/;"	c
Pause	Scripts/TimeManagement.cs	/^	public void Pause (bool paused) {$/;"	m	class:TimeManagement
PitchAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float PitchAngle { get; private set; }$/;"	p	class:AeroplaneController
PitchInput	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float PitchInput { get; private set; }$/;"	p	class:AeroplaneController
PivotBasedCameraRig	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^public class PivotBasedCameraRig : AbstractTargetFollower$/;"	c
PlaceTargetWithMouse	Sample Assets/Sample Scenes/Scripts/PlaceTargetWithMouse.cs	/^public class PlaceTargetWithMouse : MonoBehaviour {$/;"	c
PlatformSpecificContent	Sample Assets/Utility/PlatformSpecificContent.cs	/^public class PlatformSpecificContent : MonoBehaviour {$/;"	c
Platformer2DUserControl	Sample Assets/2D/Scripts/Platformer2DUserControl.cs	/^public class Platformer2DUserControl : MonoBehaviour $/;"	c
PlatformerCharacter2D	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^public class PlatformerCharacter2D : MonoBehaviour $/;"	c
Player	_Local/Assets/Scripts/Player.cs	/^public class Player : MonoBehaviour {$/;"	c
PointToPoint	Sample Assets/Utility/WaypointProgressTracker.cs	/^		PointToPoint,$/;"	e	enum:WaypointProgressTracker.ProgressStyle	file:
PreserveDirectionInAir	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void PreserveDirectionInAir()$/;"	m	class:CarController	file:
Pressed	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public void Pressed() { $/;"	m	class:CrossPlatformInput.VirtualButton
PreventStandingInLowHeadroom	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void PreventStandingInLowHeadroom ()$/;"	m	class:ThirdPersonCharacter	file:
PreviewGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void PreviewGUI ()$/;"	m	class:NewScriptWindow	file:
ProcessWheels	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void ProcessWheels (float steerInput)$/;"	m	class:CarController	file:
ProgressStyle	Sample Assets/Utility/WaypointProgressTracker.cs	/^	public enum ProgressStyle$/;"	g	class:WaypointProgressTracker
ProjectOntoPlane	Standard Assets/Character Controllers/Sources/Scripts/PlatformInputController.js	/^function ProjectOntoPlane (v : Vector3, normal : Vector3) {$/;"	f
ProtectCameraFromWallClip	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^public class ProtectCameraFromWallClip : MonoBehaviour$/;"	c
PutCurveBracesOnNewLine	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private void PutCurveBracesOnNewLine ()$/;"	m	class:UnityEditor.NewScriptGenerator	file:
QuestionBlock	_Local/Assets/Scripts/QuestionBlock.cs	/^public class QuestionBlock : MonoBehaviour {$/;"	c
RETAIN_SELECTION	Scripts/SelectUnits.cs	/^	RETAIN_SELECTION,$/;"	e	enum:ControllerIntent	file:
RUN	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
RUN	SimpleWalker.cs	/^public enum LegsIntent { NONE, STAND, WALK, CROUCH, RUN, JUMP }$/;"	e	enum:LegsIntent	file:
Raised	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^		Raised = -1,$/;"	e	enum:LandingGear.GearState	file:
RayHitComparer	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	public class RayHitComparer: IComparer$/;"	c	class:ProtectCameraFromWallClip
RayHitComparer	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	class RayHitComparer: IComparer$/;"	c	class:FirstPersonCharacter
RayHitComparer	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	class RayHitComparer: IComparer$/;"	c	class:ThirdPersonCharacter
Raymarch	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void Raymarch(int width, int height, Vector4 lightPos)$/;"	m	class:LightShafts	file:
ReachObject	Scripts/GoalConditions/ReachObject.cs	/^public class ReachObject : MonoBehaviour , IGoalCondition {$/;"	c
RegisterVirtualAxis	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	static void RegisterVirtualAxis(VirtualAxis axis) {$/;"	m	class:CrossPlatformInput	file:
RegisterVirtualAxis	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public void RegisterVirtualAxis(CrossPlatformInput.VirtualAxis axis)$/;"	m	class:VirtualInput
RegisterVirtualButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	static void RegisterVirtualButton (VirtualButton button){$/;"	m	class:CrossPlatformInput	file:
RegisterVirtualButton	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public void RegisterVirtualButton(CrossPlatformInput.VirtualButton button)$/;"	m	class:VirtualInput
ReleaseComputeResources	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/DepthOfFieldScatter.js	/^	function ReleaseComputeResources ()$/;"	f
ReleaseResources	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void ReleaseResources()$/;"	m	class:LightShafts	file:
ReleaseShadowmap	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	void ReleaseShadowmap()$/;"	m	class:LightShafts	file:
Released	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public void Released() {$/;"	m	class:CrossPlatformInput.VirtualButton
ReloadLevel	Sample Assets/Utility/TimedObjectActivator.cs	/^		ReloadLevel,$/;"	e	enum:TimedObjectActivator.Action	file:
ReloadLevel	Sample Assets/Utility/TimedObjectActivator.cs	/^    IEnumerator ReloadLevel(Entry entry)$/;"	m	class:TimedObjectActivator	file:
Remove	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public void Remove()$/;"	m	class:CrossPlatformInput.VirtualAxis
Remove	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public void Remove()$/;"	m	class:CrossPlatformInput.VirtualButton
RenderCoords	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void RenderCoords(int width, int height, Vector4 lightPos)$/;"	m	class:LightShafts	file:
RenderInterpolationTexture	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void RenderInterpolationTexture(Vector4 lightPos)$/;"	m	class:LightShafts	file:
RenderQuad	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	void RenderQuad()$/;"	m	class:LightShafts	file:
RenderQuadSections	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	void RenderQuadSections(Vector4 lightPos)$/;"	m	class:LightShafts	file:
RenderSamplePositions	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void RenderSamplePositions(int width, int height, Vector4 lightPos)$/;"	m	class:LightShafts	file:
RenderSpotFrustum	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	void RenderSpotFrustum()$/;"	m	class:LightShafts	file:
Replace	Sample Assets/Utility/ActivateTrigger.cs	/^		Replace   = 1, \/\/ replace target with source$/;"	e	enum:ActivateTrigger.Mode	file:
ReplacementDefinition	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	public class ReplacementDefinition$/;"	c	class:AutoMobileShaderSwitch
ReplacementList	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	public class ReplacementList$/;"	c	class:AutoMobileShaderSwitch
ReplacementListDrawer	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^public class ReplacementListDrawer : PropertyDrawer$/;"	c
ReportAutoDisable	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/PostEffectsBase.js	/^	function ReportAutoDisable () {$/;"	f
Reset	Change.cs	/^	void Reset ()$/;"	m	class:Change	file:
Reset	Composition.cs	/^	void Reset () {$/;"	m	class:Composition	file:
Reset	Investigator.cs	/^	void Reset () {$/;"	m	class:Investigator	file:
Reset	OneWayFollow.cs	/^	void Reset () {$/;"	m	class:OneWayFollow	file:
Reset	Resetter.cs	/^	public static void Reset(List<History> rl) {$/;"	m	class:Resetter
Reset	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	public void Reset()$/;"	m	class:Explosive
Reset	Sample Assets/Utility/WaypointProgressTracker.cs	/^	public void Reset ()$/;"	m	class:WaypointProgressTracker
Reset	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	public void Reset ()$/;"	m	class:AeroplaneAIControl
Reset	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public void Reset()$/;"	m	class:AeroplaneController
Reset	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	public void Reset()$/;"	m	class:CarController
Reset	Scripts/World/Interaction.cs	/^	void Reset () {$/;"	m	class:Interaction	file:
Reset	Scripts/World/KeyboardMover.cs	/^	void Reset() {$/;"	m	class:KeyboardMover	file:
Reset	Scripts/World/KeyboardTargeter.cs	/^	void Reset() {$/;"	m	class:KeyboardTargeter	file:
Reset	Shooter.cs	/^	void Reset() {$/;"	m	class:Shooter	file:
Reset	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function Reset ()$/;"	f
ResetCoroutine	Sample Assets/Utility/ObjectResetter.cs	/^	IEnumerator ResetCoroutine (float delay)$/;"	m	class:ObjectResetter	file:
ResetJoystick	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected void ResetJoystick()$/;"	m	class:JoystickAbstract
ResetJoystick	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private void ResetJoystick()$/;"	m	class:TouchJoystick	file:
ResetToInitial	History.cs	/^	public void ResetToInitial() {$/;"	m	class:History
Resetter	Resetter.cs	/^public class Resetter : MonoBehaviour {$/;"	c
Resolution	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		Resolution$/;"	e	enum:TouchJoystick.SensitivityRelativeTo	file:
Resolution	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^        Resolution$/;"	e	enum:TouchPad.SensitivityRelativeTo	file:
Restarter	Sample Assets/2D/Scripts/Restarter.cs	/^public class Restarter : MonoBehaviour {$/;"	c
ReturnStyleOption	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public enum ReturnStyleOption$/;"	g	class:JoystickAbstract
ReturnStyleOption	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public enum ReturnStyleOption {                                             \/\/ Style for the joystick to return to center$/;"	g	class:TouchJoystick
RevsFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float RevsFactor { get; private set; }                                   \/\/ value between 0-1 indicating where the current revs fall between 0 and max revs$/;"	p	class:CarController
RightCar	Sample Assets/Vehicles/Car/Scripts/CarSelfRighting.cs	/^    void RightCar ()$/;"	m	class:CarSelfRighting	file:
RollAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float RollAngle { get; private set; }$/;"	p	class:AeroplaneController
RollInput	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float RollInput { get; private set; }$/;"	p	class:AeroplaneController
RotateSurface	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^    void RotateSurface(ControlSurface surface, Quaternion rotation)$/;"	m	class:AeroplaneControlSurfaceAnimator	file:
RotationAxes	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public enum RotationAxes { MouseXAndY = 0, MouseX = 1, MouseY = 2 }$/;"	g	class:MouseLook
RoutePoint	Sample Assets/Utility/WaypointCircuit.cs	/^		public RoutePoint(Vector3 position, Vector3 direction)$/;"	m	struct:WaypointCircuit.RoutePoint
RoutePoint	Sample Assets/Utility/WaypointCircuit.cs	/^	public struct RoutePoint$/;"	s	class:WaypointCircuit
Rpm	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public float Rpm { get; private set; }$/;"	p	class:Wheel
RpmToDps	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^    private const float RpmToDps = 60f;             \/\/ For converting from revs per minute to degrees per second.$/;"	f	class:AeroplanePropellerAnimator	file:
Rudder	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^            Rudder,                                     \/\/ Vertical flaps on the tail, rotate on the y axis.$/;"	e	enum:AeroplaneControlSurfaceAnimator.ControlSurface.Type	file:
RuddervatorNegative	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^            RuddervatorNegative,						\/\/ Combination of rudder and elevator. $/;"	e	enum:AeroplaneControlSurfaceAnimator.ControlSurface.Type	file:
RuddervatorPositive	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^            RuddervatorPositive,						\/\/ Combination of rudder and elevator. $/;"	e	enum:AeroplaneControlSurfaceAnimator.ControlSurface.Type	file:
RusticGames.Act	Scripts/Agent/Act/LegController.cs	/^namespace RusticGames.Act$/;"	n
RusticGames.Act	Scripts/Agent/Act/Move.cs	/^namespace RusticGames.Act$/;"	n
SET	Scripts/Agent/Act/LegController.cs	/^	public enum MotorMotion { FORWARD, SET, BACKWARD, FREE }$/;"	e	enum:RusticGames.Act.MotorMotion	file:
SHRINK	Scripts/World/InteractionResult.cs	/^	SHRINK$/;"	e	enum:InteractionResult	file:
SIDE	Scripts/World/InteractorType.cs	/^	SIDE,$/;"	e	enum:InteractorType	file:
SLOW	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
SPAWN	Scripts/World/InteractionResult.cs	/^	SPAWN,$/;"	e	enum:InteractionResult	file:
SPECIFY_BOX	Scripts/SelectUnits.cs	/^	SPECIFY_BOX,$/;"	e	enum:ControllerIntent	file:
SPECIFY_CIRCLE	Scripts/SelectUnits.cs	/^	SPECIFY_CIRCLE,$/;"	e	enum:ControllerIntent	file:
SPECIFY_POINT	Scripts/SelectUnits.cs	/^	SPECIFY_POINT,$/;"	e	enum:ControllerIntent	file:
SPECIFY_UNIT	Scripts/SelectUnits.cs	/^	SPECIFY_UNIT,$/;"	e	enum:ControllerIntent	file:
STABILITIZE	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
STAND	SimpleWalker.cs	/^public enum LegsIntent { NONE, STAND, WALK, CROUCH, RUN, JUMP }$/;"	e	enum:LegsIntent	file:
ScaleCapsuleForCrouching	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void ScaleCapsuleForCrouching ()$/;"	m	class:ThirdPersonCharacter	file:
ScaleWithCollection	Scripts/ScaleWithCollection.cs	/^public class ScaleWithCollection : MonoBehaviour$/;"	c
ScreenPointToWorldInfo	Scripts/GUI/HUD.cs	/^	public class ScreenPointToWorldInfo {$/;"	c	class:HUD
ScreenRect	Scripts/GUI/GUIBox.cs	/^	public Rect ScreenRect$/;"	p	class:GUIBox
ScriptPrescription	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^	internal class ScriptPrescription$/;"	c	namespace:UnityEditor
Select	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	void Select(int i)$/;"	m	class:ParticleSceneControls	file:
SelectUnits	Scripts/SelectUnits.cs	/^public class SelectUnits : MonoBehaviour$/;"	c
SelectionType	Scripts/SelectUnits.cs	/^public enum SelectionType $/;"	g
SensitivityRelativeTo	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public enum SensitivityRelativeTo$/;"	g	class:TouchJoystick
SensitivityRelativeTo	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    public enum SensitivityRelativeTo$/;"	g	class:TouchPad
SetArrows	KeyboardConfiguration.cs	/^	void SetArrows() {$/;"	m	class:KeyboardConfiguration	file:
SetClassNameBasedOnTargetClassName	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void SetClassNameBasedOnTargetClassName ()$/;"	m	class:NewScriptWindow	file:
SetControllable	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function SetControllable (controllable : boolean) {$/;"	f
SetEnabled	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static void SetEnabled(string defineName, bool enable, bool mobile)$/;"	m	class:CrossPlatformInitialize	file:
SetFriction	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void SetFriction()$/;"	m	class:ThirdPersonCharacter	file:
SetFrustumRays	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	void SetFrustumRays(Material material)$/;"	m	class:LightShafts	file:
SetFunctionIsIncluded	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void SetFunctionIsIncluded (string baseClassName, string functionName, bool include)$/;"	m	class:NewScriptWindow	file:
SetKeyword	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	void SetKeyword(bool firstOn, string firstKeyword, string secondKeyword)$/;"	m	class:LightShafts	file:
SetShadowmapDirty	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	public void SetShadowmapDirty()$/;"	m	class:LightShafts
SetTarget	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	public virtual void SetTarget (Transform newTransform) {$/;"	m	class:AbstractTargetFollower
SetTarget	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	public override void SetTarget (Transform newTransform)$/;"	m	class:TargetFieldOfView
SetTarget	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^	public void SetTarget(Transform target)$/;"	m	class:AICharacterControl
SetTarget	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	public void SetTarget(Transform target)$/;"	m	class:AeroplaneAIControl
SetTarget	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	public void SetTarget(Transform target)$/;"	m	class:CarAIControl
SetUpAnimator	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void SetUpAnimator()$/;"	m	class:ThirdPersonCharacter	file:
SetUpEngineAudioSource	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	AudioSource SetUpEngineAudioSource(AudioClip clip)$/;"	m	class:CarAudio	file:
SetUpGears	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	void SetUpGears()$/;"	m	class:CarController	file:
SetUpRotation	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^function SetUpRotation (centerPos : Vector3, headPos : Vector3)$/;"	f
SetVelocity	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function SetVelocity (velocity : Vector3) {$/;"	f
SetVirtualMousePositionX	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static void SetVirtualMousePositionX (float f)$/;"	m	class:CrossPlatformInput
SetVirtualMousePositionX	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public void SetVirtualMousePositionX(float f)$/;"	m	class:VirtualInput
SetVirtualMousePositionY	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static void SetVirtualMousePositionY (float f)$/;"	m	class:CrossPlatformInput
SetVirtualMousePositionY	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public void SetVirtualMousePositionY(float f)$/;"	m	class:VirtualInput
SetVirtualMousePositionZ	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static void SetVirtualMousePositionZ (float f)$/;"	m	class:CrossPlatformInput
SetVirtualMousePositionZ	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public void SetVirtualMousePositionZ(float f)$/;"	m	class:VirtualInput
SetWASD	KeyboardConfiguration.cs	/^	void SetWASD() {$/;"	m	class:KeyboardConfiguration	file:
Shoot	Shooter.cs	/^	IEnumerator Shoot() {$/;"	m	class:Shooter	file:
Shooter	Shooter.cs	/^public class Shooter : MonoBehaviour {$/;"	c
Shover	Shover.cs	/^public class Shover : MonoBehaviour {$/;"	c
ShowSamples	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void ShowSamples(int width, int height, Vector4 lightPos)$/;"	m	class:LightShafts	file:
Shrink	Scripts/ScaleWithCollection.cs	/^	public enum Mode {Grow, Shrink}$/;"	e	enum:ScaleWithCollection.Mode	file:
SideSlideEffect	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float SideSlideEffect$/;"	p	class:CarController
SidewaysAxis	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		SidewaysAxis,$/;"	e	enum:TiltInput.AxisOptions	file:
Simple	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^		Simple,                                                                         \/\/ Simple style audio$/;"	e	enum:CarAudio.EngineAudioOptions	file:
SimpleActivatorMenu	Sample Assets/Utility/SimpleActivatorMenu.cs	/^public class SimpleActivatorMenu : MonoBehaviour {$/;"	c
SimpleLeg	SimpleLeg.cs	/^public class SimpleLeg : MonoBehaviour {$/;"	c
SimpleMouseRotator	Sample Assets/Utility/SimpleMouseRotator.cs	/^public class SimpleMouseRotator : MonoBehaviour {$/;"	c
SimpleMover	Scripts/SimpleMover.cs	/^public class SimpleMover : MonoBehaviour$/;"	c
SimpleWalker	SimpleWalker.cs	/^public class SimpleWalker : MonoBehaviour {$/;"	c
SkidFactor	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public float SkidFactor { get; private set; }$/;"	p	class:Wheel
SkidTrail	Sample Assets/Vehicles/Car/Scripts/SkidTrail.cs	/^public class SkidTrail : MonoBehaviour {$/;"	c
SliderData	Investigator.cs	/^public struct SliderData {$/;"	s
SliderUpdate	Investigator.cs	/^	public IEnumerator SliderUpdate() {$/;"	m	class:Investigator
SlowMoButton	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^public class SlowMoButton : MonoBehaviour {$/;"	c
SlowSpeedTex	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	public Texture SlowSpeedTex;                       \/\/ the gui texture for slow motion mode$/;"	f	class:SlowMoButton
SmokeParticles	Sample Assets/Effects/Particle Systems/scripts/SmokeParticles.cs	/^public class SmokeParticles : MonoBehaviour {$/;"	c
SmoothAlongRoute	Sample Assets/Utility/WaypointProgressTracker.cs	/^		SmoothAlongRoute,$/;"	e	enum:WaypointProgressTracker.ProgressStyle	file:
SpawnObjects	Scripts/SpawnObjects.cs	/^public class SpawnObjects : MonoBehaviour$/;"	c
Spawner	Spawner.cs	/^public class Spawner : MonoBehaviour {$/;"	c
SpeedFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float SpeedFactor { get;  private set; }                                 \/\/ value between 0-1 of the car's current speed relative to max speed$/;"	p	class:CarController
SpinoutSlipEffect	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    public float SpinoutSlipEffect$/;"	p	class:CarController
Standalone	Sample Assets/Utility/PlatformSpecificContent.cs	/^		Standalone,$/;"	e	enum:PlatformSpecificContent.BuildTargetGroup	file:
StandaloneInput	Sample Assets/Cross Platform Input/Scripts/PlatformSpecific/StandaloneInput.cs	/^public class StandaloneInput : VirtualInput {$/;"	c
StandardGenerator	_Local/Assets/Scripts/GameManager.cs	/^	private void StandardGenerator(Vector3 pos, Quaternion rotation, GameObject type)$/;"	m	class:GameManager	file:
Start	AreaGoal.cs	/^	void Start() {$/;"	m	class:AreaGoal	file:
Start	Change.cs	/^	void Start ()$/;"	m	class:Change	file:
Start	Composition.cs	/^	void Start () {$/;"	m	class:Composition	file:
Start	Goomba.cs	/^	void Start ()$/;"	m	class:Goomba	file:
Start	History.cs	/^	void Start () {$/;"	m	class:History	file:
Start	Investigator.cs	/^	void Start () {$/;"	m	class:Investigator	file:
Start	Linkable.cs	/^	void Start () {$/;"	m	class:Linkable	file:
Start	OneWayFollow.cs	/^	void Start () {$/;"	m	class:OneWayFollow	file:
Start	Resetter.cs	/^	void Start () {$/;"	m	class:Resetter	file:
Start	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	void Start () {$/;"	m	class:Camera2DFollow	file:
Start	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	virtual protected void Start() {$/;"	m	class:AbstractTargetFollower
Start	Sample Assets/Cameras/Scripts/AutoCam.cs	/^	protected override void Start() {$/;"	m	class:AutoCam
Start	Sample Assets/Cameras/Scripts/HandHeldCam.cs	/^	protected override void Start () {$/;"	m	class:HandHeldCam
Start	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^	protected override void Start () {$/;"	m	class:LookatTarget
Start	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	protected override void Start ()$/;"	m	class:PivotBasedCameraRig
Start	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	void Start() {$/;"	m	class:ProtectCameraFromWallClip	file:
Start	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	protected override void Start ()$/;"	m	class:TargetFieldOfView
Start	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	void Start () {$/;"	m	class:FirstPersonHeadBob	file:
Start	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^	void Start () {$/;"	m	class:AICharacterControl	file:
Start	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void Start () {$/;"	m	class:ThirdPersonCharacter	file:
Start	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	void Start ()$/;"	m	class:ThirdPersonUserControl	file:
Start	Sample Assets/Effects/Image Effects (Pro Only)/Scripts/PostEffectsBase.js	/^	function Start () {$/;"	f
Start	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	public void Start()$/;"	m	class:LightShafts
Start	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	void Start()$/;"	m	class:AfterburnerPhysicsForce	file:
Start	Sample Assets/Effects/Particle Systems/scripts/ExplosionFireAndDebris.cs	/^	IEnumerator Start()$/;"	m	class:ExplosionFireAndDebris	file:
Start	Sample Assets/Effects/Particle Systems/scripts/ExplosionPhysicsForce.cs	/^	IEnumerator Start()$/;"	m	class:ExplosionPhysicsForce	file:
Start	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	void Start() {}  \/\/ here to make the enabled tickbox appear in the inspector! :)$/;"	m	class:Explosive	file:
Start	Sample Assets/Effects/Particle Systems/scripts/ExtinguishableParticleSystem.cs	/^	void Start()$/;"	m	class:ExtinguishableParticleSystem	file:
Start	Sample Assets/Effects/Particle Systems/scripts/FireLight.cs	/^	void Start()$/;"	m	class:FireLight	file:
Start	Sample Assets/Effects/Particle Systems/scripts/ParticleSystemMultiplier.cs	/^	void Start()$/;"	m	class:ParticleSystemMultiplier	file:
Start	Sample Assets/Effects/Particle Systems/scripts/SmokeParticles.cs	/^	void Start()$/;"	m	class:SmokeParticles	file:
Start	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	void Start () {$/;"	m	class:Clouds	file:
Start	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	void Start()$/;"	m	class:SlowMoButton	file:
Start	Sample Assets/Utility/AutoMoveAndRotate.cs	/^	void Start()$/;"	m	class:AutoMoveAndRotate	file:
Start	Sample Assets/Utility/CombineChildren.cs	/^	void Start () {$/;"	m	class:CombineChildren	file:
Start	Sample Assets/Utility/DynamicShadowSettings.cs	/^	void Start()$/;"	m	class:DynamicShadowSettings	file:
Start	Sample Assets/Utility/FPSCounter.cs	/^	void Start()$/;"	m	class:FPSCounter	file:
Start	Sample Assets/Utility/ObjectResetter.cs	/^	void Start () {$/;"	m	class:ObjectResetter	file:
Start	Sample Assets/Utility/ParticleSystemDestroyer.cs	/^	IEnumerator Start()$/;"	m	class:ParticleSystemDestroyer	file:
Start	Sample Assets/Utility/SimpleMouseRotator.cs	/^	void Start () {$/;"	m	class:SimpleMouseRotator	file:
Start	Sample Assets/Utility/WaypointProgressTracker.cs	/^	void Start ()$/;"	m	class:WaypointProgressTracker	file:
Start	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^    void Start()$/;"	m	class:AeroplaneControlSurfaceAnimator	file:
Start	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	void Start ()$/;"	m	class:AeroplaneController	file:
Start	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^	void Start () {$/;"	m	class:JetParticleEffect	file:
Start	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	void Start () {$/;"	m	class:LandingGear	file:
Start	Sample Assets/Vehicles/Car/Scripts/Mudguard.cs	/^	void Start() {$/;"	m	class:Mudguard	file:
Start	Sample Assets/Vehicles/Car/Scripts/SkidTrail.cs	/^	IEnumerator Start () {$/;"	m	class:SkidTrail	file:
Start	Sample Assets/Vehicles/Car/Scripts/Suspension.cs	/^    void Start () {$/;"	m	class:Suspension	file:
Start	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    void Start()$/;"	m	class:Wheel	file:
Start	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^    void Start()$/;"	m	class:Ball	file:
Start	Scripts/CoRotator.cs	/^	void Start () {$/;"	m	class:CoRotator	file:
Start	Scripts/ConfigurationManager.cs	/^		void Start ()$/;"	m	class:ConfigurationManager	file:
Start	Scripts/ConstrainedMover.cs	/^	void Start() {$/;"	m	class:ConstrainedMover	file:
Start	Scripts/FadeInOut.cs	/^	void Start()$/;"	m	class:FadeInOut	file:
Start	Scripts/Fader.cs	/^	void Start () {$/;"	m	class:Fader	file:
Start	Scripts/GUI/HUD.cs	/^	void Start() {$/;"	m	class:HUD	file:
Start	Scripts/GameManagerCollect.cs	/^	void Start()$/;"	m	class:GameManagerCollect	file:
Start	Scripts/Goal.cs	/^	void Start () {$/;"	m	class:Goal	file:
Start	Scripts/GoalConditions/CollectAll.cs	/^	void Start () {$/;"	m	class:CollectAll	file:
Start	Scripts/GoalConditions/ReachObject.cs	/^	void Start() {$/;"	m	class:ReachObject	file:
Start	Scripts/InputInterpreter.cs	/^	void Start()$/;"	m	class:InputInterpreter	file:
Start	Scripts/MouseSelector.cs	/^	void Start() {$/;"	m	class:MouseSelector	file:
Start	Scripts/MoveLeftAndRight.cs	/^	void Start ()$/;"	m	class:MoveLeftAndRight	file:
Start	Scripts/MoveTarget.cs	/^	void Start () {$/;"	m	class:MoveTarget	file:
Start	Scripts/ScaleWithCollection.cs	/^	void Start()$/;"	m	class:ScaleWithCollection	file:
Start	Scripts/SelectUnits.cs	/^	void Start()$/;"	m	class:SelectUnits	file:
Start	Scripts/SpawnObjects.cs	/^	void Start ()$/;"	m	class:SpawnObjects	file:
Start	Scripts/World/Interaction.cs	/^	void Start () {$/;"	m	class:Interaction	file:
Start	Scripts/World/KeyboardMover.cs	/^	void Start () {$/;"	m	class:KeyboardMover	file:
Start	Scripts/World/KeyboardTargeter.cs	/^	void Start () {$/;"	m	class:KeyboardTargeter	file:
Start	Scripts/World/Mover.cs	/^	void Start ()$/;"	m	class:Mover	file:
Start	Shooter.cs	/^	void Start () {$/;"	m	class:Shooter	file:
Start	Shover.cs	/^	void Start () {$/;"	m	class:Shover	file:
Start	SimpleLeg.cs	/^	void Start () {$/;"	m	class:SimpleLeg	file:
Start	SimpleWalker.cs	/^	void Start () {$/;"	m	class:SimpleWalker	file:
Start	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	void Start ()$/;"	m	class:MouseLook	file:
Start	_Local/Assets/Scripts/Block.cs	/^	void Start () {$/;"	m	class:Block	file:
Start	_Local/Assets/Scripts/GameManager.cs	/^	void Start()$/;"	m	class:GameManager	file:
Start	_Local/Assets/Scripts/Player.cs	/^	void Start() {$/;"	m	class:Player	file:
Start	_Local/Assets/Scripts/QuestionBlock.cs	/^	void Start () {$/;"	m	class:QuestionBlock	file:
StartSound	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	void StartSound () {$/;"	m	class:CarAudio	file:
Static	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	Static = 1	$/;"	e	enum:LightShaftsShadowmapMode	file:
Stomp	_Local/Assets/Scripts/Player.cs	/^	void Stomp(GameObject target) {$/;"	m	class:Player	file:
Stop	Sample Assets/Utility/ParticleSystemDestroyer.cs	/^	public void Stop()$/;"	m	class:ParticleSystemDestroyer
StopSound	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	void StopSound()$/;"	m	class:CarAudio	file:
Styles	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		public Styles ()$/;"	m	class:NewScriptWindow.Styles
Styles	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	class Styles$/;"	c	class:NewScriptWindow
Suspension	Sample Assets/Vehicles/Car/Scripts/Suspension.cs	/^public class Suspension : MonoBehaviour {$/;"	c
SwitchInputMapping	Scripts/InputInterpreter.cs	/^	public class SwitchInputMapping {$/;"	c	class:InputInterpreter
TAG	Scripts/SelectUnits.cs	/^	TAG$/;"	e	enum:SelectionType	file:
TERRAIN	Scripts/World/InteractorType.cs	/^	TERRAIN,$/;"	e	enum:InteractorType	file:
TURN	Scripts/World/InteractionResult.cs	/^	TURN,$/;"	e	enum:InteractionResult	file:
Target	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	public Transform Target { get { return this.target; } }$/;"	p	class:AbstractTargetFollower
TargetClassDoesNotExist	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool TargetClassDoesNotExist ()$/;"	m	class:NewScriptWindow	file:
TargetClassIsNotValidType	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool TargetClassIsNotValidType ()$/;"	m	class:NewScriptWindow	file:
TargetDir	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string TargetDir ()$/;"	m	class:NewScriptWindow	file:
TargetDirectionDifference	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^		TargetDirectionDifference,$/;"	e	enum:CarAIControl.BrakeCondition	file:
TargetDistance	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^		TargetDistance,$/;"	e	enum:CarAIControl.BrakeCondition	file:
TargetFieldOfView	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^public class TargetFieldOfView : AbstractTargetFollower {$/;"	c
TargetPath	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string TargetPath ()$/;"	m	class:NewScriptWindow	file:
TargetPathGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void TargetPathGUI ()$/;"	m	class:NewScriptWindow	file:
TemplateNameComparer	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private class TemplateNameComparer : IComparer<string>$/;"	c	class:NewScriptWindow
TemplateSelectionGUI	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void TemplateSelectionGUI ()$/;"	m	class:NewScriptWindow	file:
ThirdPersonCharacter	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^public class ThirdPersonCharacter : MonoBehaviour {$/;"	c
ThirdPersonUserControl	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^public class ThirdPersonUserControl : MonoBehaviour {$/;"	c
Throttle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float Throttle { get; private set; }                         \/\/ The amount of throttle being used.$/;"	p	class:AeroplaneController
ThrottleInput	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float ThrottleInput { get; private set; }$/;"	p	class:AeroplaneController
TiltInput	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^public class TiltInput : MonoBehaviour {$/;"	c
TiltInputAxisStylePropertyDrawer	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^public class TiltInputAxisStylePropertyDrawer : PropertyDrawer$/;"	c
TimeManagement	Scripts/TimeManagement.cs	/^public class TimeManagement : MonoBehaviour {$/;"	c
TimedObjectActivator	Sample Assets/Utility/TimedObjectActivator.cs	/^public class TimedObjectActivator : MonoBehaviour$/;"	c
ToString	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		public override string ToString ()$/;"	m	class:UnityEditor.NewScriptGenerator
TooSteep	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function TooSteep () {$/;"	f
TouchButton	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^internal class TouchButton : ClickButton$/;"	c
TouchJoystick	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^public class TouchJoystick : MonoBehaviour$/;"	c
TouchPad	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^public class TouchPad : JoystickAbstract {$/;"	c
TouchPadPositional	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		TouchPadPositional,$/;"	e	enum:TouchJoystick.InputMode	file:
TouchPadPositional	Sample Assets/Cross Platform Input/Scripts/TouchPadPositional.cs	/^public class TouchPadPositional : TouchPad {$/;"	c
TouchPadRelativePositional	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		TouchPadRelativePositional,$/;"	e	enum:TouchJoystick.InputMode	file:
TouchPadRelativePositional	Sample Assets/Cross Platform Input/Scripts/TouchPadRelativePositional.cs	/^public class TouchPadRelativePositional : TouchPad {$/;"	c
TouchPadSwipe	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		TouchPadSwipe,$/;"	e	enum:TouchJoystick.InputMode	file:
TouchPadSwipe	Sample Assets/Cross Platform Input/Scripts/TouchPadSwipe.cs	/^public class TouchPadSwipe : TouchPad {$/;"	c
TrackPlayer	Sample Assets/2D/Scripts/CameraFollow.cs	/^	void TrackPlayer ()$/;"	m	class:CameraFollow	file:
Trail	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		Trail$/;"	e	enum:ParticleSceneControls.Mode	file:
TransformNameComparer	Sample Assets/Utility/WaypointCircuit.cs	/^	public class TransformNameComparer: IComparer$/;"	c	class:WaypointListDrawer
TranslateTypeToBoo	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private string TranslateTypeToBoo (string typeInCSharp)$/;"	m	class:UnityEditor.NewScriptGenerator	file:
TranslateTypeToJavascript	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private string TranslateTypeToJavascript (string typeInCSharp)$/;"	m	class:UnityEditor.NewScriptGenerator	file:
Trigger	Sample Assets/Utility/ActivateTrigger.cs	/^		Trigger   = 0, \/\/ Just broadcast the action on to the target$/;"	e	enum:ActivateTrigger.Mode	file:
TurnTowardsCameraForward	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void TurnTowardsCameraForward ()$/;"	m	class:ThirdPersonCharacter	file:
Type	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^        public enum Type                                \/\/ Flaps differ in position and rotation and are represented by different types.$/;"	g	class:AeroplaneControlSurfaceAnimator.ControlSurface
TypeSpecificOnEnable	Sample Assets/Cross Platform Input/Scripts/Joystick.cs	/^    protected override void TypeSpecificOnEnable()$/;"	m	class:Joystick
TypeSpecificOnEnable	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected virtual void TypeSpecificOnEnable ()$/;"	m	class:JoystickAbstract
TypeSpecificOnEnable	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    protected override void TypeSpecificOnEnable()$/;"	m	class:TouchPad
TypeSpecificUpdate	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected virtual void TypeSpecificUpdate ()$/;"	m	class:JoystickAbstract
UInverseLerp	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	float UInverseLerp (float from, float to, float value) {$/;"	m	class:CarAudio	file:
ULerp	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	float ULerp (float from, float to, float value) {$/;"	m	class:CarAudio	file:
ULerp	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	float ULerp (float from, float to, float value)$/;"	m	class:CarController	file:
UNIT	Scripts/World/InteractorType.cs	/^	UNIT,$/;"	e	enum:InteractorType	file:
UnRegisterVirtualAxis	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	static void UnRegisterVirtualAxis (string name){$/;"	m	class:CrossPlatformInput	file:
UnRegisterVirtualAxis	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public void UnRegisterVirtualAxis(string name)$/;"	m	class:VirtualInput
UnRegisterVirtualButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	static void UnRegisterVirtualButton (string name){$/;"	m	class:CrossPlatformInput	file:
UnRegisterVirtualButton	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public void UnRegisterVirtualButton(string name)$/;"	m	class:VirtualInput
UnityEditor	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^namespace UnityEditor$/;"	n
UnityEditor	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^namespace UnityEditor$/;"	n
Up	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		Up$/;"	e	enum:ParticleSceneControls.AlignMode	file:
Update	Composition.cs	/^	void Update () {$/;"	m	class:Composition	file:
Update	Investigator.cs	/^	void Update () {$/;"	m	class:Investigator	file:
Update	Linkable.cs	/^	void Update () {$/;"	m	class:Linkable	file:
Update	OneWayFollow.cs	/^	void Update () {$/;"	m	class:OneWayFollow	file:
Update	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	void Update () {$/;"	m	class:Camera2DFollow	file:
Update	Sample Assets/2D/Scripts/CameraFollow.cs	/^	void Update ()$/;"	m	class:CameraFollow	file:
Update	Sample Assets/2D/Scripts/Platformer2DUserControl.cs	/^    void Update ()$/;"	m	class:Platformer2DUserControl	file:
Update	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	protected override void Update ()$/;"	m	class:FreeLookCam
Update	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	virtual protected void Update()$/;"	m	class:PivotBasedCameraRig
Update	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	void Update()$/;"	m	class:FirstPersonCharacter	file:
Update	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^	void Update () {$/;"	m	class:AICharacterControl	file:
Update	Sample Assets/Cross Platform Input/Scripts/AbstractButton.cs	/^    public abstract void Update();$/;"	m	class:AbstractButton
Update	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	void Update()$/;"	m	class:AxisTouchButton	file:
Update	Sample Assets/Cross Platform Input/Scripts/Button.cs	/^    void Update()$/;"	m	class:Button	file:
Update	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^    void Update () {$/;"	m	class:ButtonDownTextureChange	file:
Update	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^	public override void Update () {$/;"	m	class:TouchButton
Update	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^	public override void Update()$/;"	m	class:ClickButton
Update	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public void Update(float value)$/;"	m	class:CrossPlatformInput.VirtualAxis
Update	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public void Update()$/;"	m	class:JoystickAbstract
Update	Sample Assets/Cross Platform Input/Scripts/MobileControlRig.cs	/^	void Update()$/;"	m	class:MobileControlRig	file:
Update	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^    private void Update () {$/;"	m	class:TiltInput	file:
Update	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    public void Update()$/;"	m	class:TouchJoystick
Update	Sample Assets/Effects/Particle Systems/scripts/FireLight.cs	/^	void Update()$/;"	m	class:FireLight	file:
Update	Sample Assets/Effects/Particle Systems/scripts/Hose.cs	/^	void Update () {$/;"	m	class:Hose	file:
Update	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	void Update()$/;"	m	class:ParticleSceneControls	file:
Update	Sample Assets/Sample Scenes/Scripts/PlaceTargetWithMouse.cs	/^	void Update () {$/;"	m	class:PlaceTargetWithMouse	file:
Update	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	void Update()$/;"	m	class:SlowMoButton	file:
Update	Sample Assets/Utility/AutoMoveAndRotate.cs	/^	void Update () {$/;"	m	class:AutoMoveAndRotate	file:
Update	Sample Assets/Utility/DragRigidbody.js	/^function Update ()$/;"	f
Update	Sample Assets/Utility/DynamicShadowSettings.cs	/^	void Update () {$/;"	m	class:DynamicShadowSettings	file:
Update	Sample Assets/Utility/FPSCounter.cs	/^	void Update()$/;"	m	class:FPSCounter	file:
Update	Sample Assets/Utility/ForcedReset.cs	/^    void Update () {$/;"	m	class:ForcedReset	file:
Update	Sample Assets/Utility/PlatformSpecificContent.cs	/^	void Update()$/;"	m	class:PlatformSpecificContent	file:
Update	Sample Assets/Utility/SimpleActivatorMenu.cs	/^    void Update () {$/;"	m	class:SimpleActivatorMenu	file:
Update	Sample Assets/Utility/SimpleMouseRotator.cs	/^	void Update () {$/;"	m	class:SimpleMouseRotator	file:
Update	Sample Assets/Utility/WaypointProgressTracker.cs	/^	void Update()$/;"	m	class:WaypointProgressTracker	file:
Update	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	void Update ()$/;"	m	class:AeroplaneAudio	file:
Update	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^    void Update()$/;"	m	class:AeroplaneControlSurfaceAnimator	file:
Update	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneGUI.cs	/^    private void Update () {$/;"	m	class:AeroplaneGUI	file:
Update	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^	void Update ()$/;"	m	class:AeroplanePropellerAnimator	file:
Update	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^    void Update () {$/;"	m	class:JetParticleEffect	file:
Update	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	void Update () {$/;"	m	class:LandingGear	file:
Update	Sample Assets/Vehicles/Car/Scripts/BrakeLight.cs	/^    void Update ()$/;"	m	class:BrakeLight	file:
Update	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	void Update () {$/;"	m	class:CarAudio	file:
Update	Sample Assets/Vehicles/Car/Scripts/CarGUI.cs	/^    void Update()$/;"	m	class:CarGUI	file:
Update	Sample Assets/Vehicles/Car/Scripts/CarSelfRighting.cs	/^    void Update ()$/;"	m	class:CarSelfRighting	file:
Update	Sample Assets/Vehicles/Car/Scripts/Mudguard.cs	/^    void Update() {$/;"	m	class:Mudguard	file:
Update	Sample Assets/Vehicles/Car/Scripts/Suspension.cs	/^	void Update () {$/;"	m	class:Suspension	file:
Update	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^	void Update ()$/;"	m	class:BallUserControl	file:
Update	Scripts/Collector.cs	/^	void Update()$/;"	m	class:Collector	file:
Update	Scripts/ConfigurationManager.cs	/^		void Update ()$/;"	m	class:ConfigurationManager	file:
Update	Scripts/ConstrainedMover.cs	/^	void Update() {$/;"	m	class:ConstrainedMover	file:
Update	Scripts/Creator.cs	/^	void Update()$/;"	m	class:Creator	file:
Update	Scripts/GameManagerCollect.cs	/^	void Update()$/;"	m	class:GameManagerCollect	file:
Update	Scripts/GoalConditions/ReachObject.cs	/^	void Update() {$/;"	m	class:ReachObject	file:
Update	Scripts/MoveTarget.cs	/^	void Update () {$/;"	m	class:MoveTarget	file:
Update	Scripts/ScaleWithCollection.cs	/^	void Update()$/;"	m	class:ScaleWithCollection	file:
Update	Scripts/SimpleMover.cs	/^	void Update ()$/;"	m	class:SimpleMover	file:
Update	Scripts/TimeManagement.cs	/^	void Update () {$/;"	m	class:TimeManagement	file:
Update	SimpleLeg.cs	/^	void Update () {$/;"	m	class:SimpleLeg	file:
Update	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^function Update () {$/;"	f
Update	Standard Assets/Character Controllers/Sources/Scripts/FPSInputController.js	/^function Update () {$/;"	f
Update	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	void Update ()$/;"	m	class:MouseLook	file:
Update	Standard Assets/Character Controllers/Sources/Scripts/PlatformInputController.js	/^function Update () {$/;"	f
Update	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function Update() {$/;"	f
Update	_Local/Assets/Scripts/Block.cs	/^	void Update () {$/;"	m	class:Block	file:
Update	_Local/Assets/Scripts/GameManager.cs	/^	void Update()$/;"	m	class:GameManager	file:
Update	_Local/Assets/Scripts/Jump.cs	/^	void Update()$/;"	m	class:Jump	file:
Update	_Local/Assets/Scripts/QuestionBlock.cs	/^	void Update () {$/;"	m	class:QuestionBlock	file:
UpdateAnimator	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	void UpdateAnimator ()$/;"	m	class:ThirdPersonCharacter	file:
UpdateBoxFromScreen	Scripts/GUI/GUIBox.cs	/^	public void UpdateBoxFromScreen(Vector2 screenOrigin, Vector2 screenSize)$/;"	m	class:GUIBox
UpdateCamera	Scripts/GUI/HUD.cs	/^	void UpdateCamera(Camera camera, CameraSettings settings) {$/;"	m	class:HUD	file:
UpdateCamera	Scripts/GUI/HUD.cs	/^	void UpdateCamera(CameraSettings settings) {$/;"	m	class:HUD	file:
UpdateCameraDepthMode	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	public void UpdateCameraDepthMode()$/;"	m	class:LightShafts
UpdateIntentsFromInputs	Scripts/InputInterpreter.cs	/^	IEnumerator UpdateIntentsFromInputs ()$/;"	m	class:InputInterpreter	file:
UpdateLUTs	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public void UpdateLUTs ()$/;"	m	class:LightShafts
UpdateLightType	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public void UpdateLightType()$/;"	m	class:LightShafts
UpdateSelectBox	Scripts/MouseSelector.cs	/^	public void UpdateSelectBox(Vector3 startPoint, Vector3 endPoint)$/;"	m	class:MouseSelector
UpdateShadowmap	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.cs	/^	void UpdateShadowmap()$/;"	m	class:LightShafts	file:
UpdateSmoothedMovementDirection	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^function UpdateSmoothedMovementDirection ()$/;"	f
UpdateTemplateNamesAndTemplate	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private void UpdateTemplateNamesAndTemplate ()$/;"	m	class:NewScriptWindow	file:
UpdateType	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	public enum UpdateType                                  \/\/ The available methods of updating are:$/;"	g	class:AbstractTargetFollower
UpdateVirtualAxes	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    private void UpdateVirtualAxes(float modifiedX, float modifiedY)$/;"	m	class:JoystickAbstract	file:
Vector3andSpace	Sample Assets/Utility/AutoMoveAndRotate.cs	/^	public class Vector3andSpace$/;"	c	class:AutoMoveAndRotate
VirtualAxis	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public VirtualAxis(string name) : this(name, true) {}$/;"	m	class:CrossPlatformInput.VirtualAxis
VirtualAxis	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public VirtualAxis(string name, bool matchToInputSettings)$/;"	m	class:CrossPlatformInput.VirtualAxis
VirtualAxis	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public class VirtualAxis{$/;"	c	class:CrossPlatformInput
VirtualAxisReference	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static VirtualAxis VirtualAxisReference(string name) {$/;"	m	class:CrossPlatformInput
VirtualAxisReference	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public CrossPlatformInput.VirtualAxis VirtualAxisReference(string name)$/;"	m	class:VirtualInput
VirtualButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public VirtualButton(string name) : this(name, true) {}$/;"	m	class:CrossPlatformInput.VirtualButton
VirtualButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public class VirtualButton {$/;"	c	class:CrossPlatformInput
VirtualButton	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^        public VirtualButton(string name, bool matchToInputSettings)$/;"	m	class:CrossPlatformInput.VirtualButton
VirtualInput	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^public abstract class VirtualInput {$/;"	c
WALK	Scripts/Agent/Act/LegController.cs	/^	public enum LegsUse { BALANCE, BRACE, DUCK, WALK, RUN, ADVANCE, STABILITIZE, SLOW, PUSH }$/;"	e	enum:RusticGames.Act.LegsUse	file:
WALK	SimpleWalker.cs	/^public enum LegsIntent { NONE, STAND, WALK, CROUCH, RUN, JUMP }$/;"	e	enum:LegsIntent	file:
WaterHoseParticles	Sample Assets/Effects/Particle Systems/scripts/WaterHoseParticles.cs	/^public class WaterHoseParticles : MonoBehaviour {$/;"	c
WaypointCircuit	Sample Assets/Utility/WaypointCircuit.cs	/^public class WaypointCircuit : MonoBehaviour {$/;"	c
WaypointList	Sample Assets/Utility/WaypointCircuit.cs	/^	public class WaypointList$/;"	c	class:WaypointCircuit
WaypointListDrawer	Sample Assets/Utility/WaypointCircuit.cs	/^public class WaypointListDrawer : PropertyDrawer$/;"	c
WaypointProgressTracker	Sample Assets/Utility/WaypointProgressTracker.cs	/^public class WaypointProgressTracker : MonoBehaviour {$/;"	c
Waypoints	Sample Assets/Utility/WaypointCircuit.cs	/^	public Transform[] Waypoints { get { return waypointList.items; } }$/;"	p	class:WaypointCircuit
Wheel	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^public class Wheel : MonoBehaviour$/;"	c
WheelEditor	Sample Assets/Vehicles/Car/Scripts/Editor/WheelEditor.cs	/^public class WheelEditor : Editor$/;"	c
WorldRect	Scripts/GUI/GUIBox.cs	/^	public Rect WorldRect$/;"	p	class:GUIBox
WriteBlankLine	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private void WriteBlankLine ()$/;"	m	class:UnityEditor.NewScriptGenerator	file:
WriteComment	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private void WriteComment (string comment)$/;"	m	class:UnityEditor.NewScriptGenerator	file:
WriteFunction	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private void WriteFunction (FunctionData function)$/;"	m	class:UnityEditor.NewScriptGenerator	file:
YawInput	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	public float YawInput { get; private set; }$/;"	p	class:AeroplaneController
ZeroWhenUnused	Sample Assets/Cross Platform Input/Scripts/Joystick.cs	/^    protected override void ZeroWhenUnused()$/;"	m	class:Joystick
ZeroWhenUnused	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected virtual void ZeroWhenUnused ()$/;"	m	class:JoystickAbstract
ZeroWhenUnused	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    protected override void ZeroWhenUnused()$/;"	m	class:TouchPad
ZeroWhenUnused	Sample Assets/Cross Platform Input/Scripts/TouchPadSwipe.cs	/^    protected override void ZeroWhenUnused()$/;"	m	class:TouchPadSwipe
ZoneSize	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		ZoneSize,$/;"	e	enum:TouchJoystick.SensitivityRelativeTo	file:
ZoneSize	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^        ZoneSize,$/;"	e	enum:TouchPad.SensitivityRelativeTo	file:
a	Scripts/World/Interaction.cs	/^	public Dictionary<InteractorType, InteractionResult> a = new Dictionary<InteractorType, InteractionResult>();$/;"	f	class:Interaction
accelAmount	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float accelAmount;$/;"	f	class:Wheel	file:
accelBrake	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    private float accelBrake;                                                       \/\/ The acceleration or braking input (1 to -1 range)$/;"	f	class:CarController	file:
accelChangeSmoothing	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        public float accelChangeSmoothing = 2f;                                     \/\/ Used to smooth out changes in acceleration input.$/;"	f	class:CarController.Advanced
accelSensitivity	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float accelSensitivity = 0.04f;		    		            \/\/ How sensitively the AI uses the accelerator to reach the current desired speed$/;"	f	class:CarAIControl	file:
accelWanderAmount	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] [Range(0,1)] public float accelWanderAmount = 0.1f;            \/\/ how much the cars acceleration will wander$/;"	f	class:CarAIControl
accelWanderSpeed	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float accelWanderSpeed = 0.1f;                           		\/\/ how fast the cars acceleration wandering will fluctuate$/;"	f	class:CarAIControl	file:
action	Sample Assets/Utility/ActivateTrigger.cs	/^	public Mode action = Mode.Activate;$/;"	f	class:ActivateTrigger
action	Sample Assets/Utility/TimedObjectActivator.cs	/^		public Action action;$/;"	f	class:TimedObjectActivator.Entry
activeTexture	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^    public Texture activeTexture;$/;"	f	class:ButtonDownTextureChange
adaptTime	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public float adaptTime = 1;$/;"	f	class:DynamicShadowSettings
addChange	Change.cs	/^	public void addChange(InteractionResult r) {$/;"	m	class:Change
addChild	History.cs	/^	public void addChild (GameObject o)$/;"	m	class:History
adjustCentreOfMass	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private float adjustCentreOfMass = 0.25f;                      \/\/ vertical offset for the centre of mass$/;"	f	class:CarController	file:
advance	SimpleLeg.cs	/^	public void advance () {$/;"	m	class:SimpleLeg
advanceMotor	SimpleLeg.cs	/^	JointMotor2D advanceMotor;$/;"	f	class:SimpleLeg	file:
advanceOpposed	SimpleLeg.cs	/^	public void advanceOpposed () {$/;"	m	class:SimpleLeg
advanced	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	[SerializeField] private AdvancedSettings advanced = new AdvancedSettings();        \/\/ The container for the advanced settings ( done this way so that the advanced setting are exposed under a foldout$/;"	f	class:FirstPersonCharacter	file:
advanced	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] private AdvancedSetttings advanced = new AdvancedSetttings(); \/\/ container to make advanced settings appear as rollout in inspector$/;"	f	class:AeroplaneAudio	file:
advanced	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private Advanced advanced;                                     \/\/ container for the advanced setting which will expose as a foldout in the inspector$/;"	f	class:CarController	file:
advancedSettings	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	[SerializeField] AdvancedSettings advancedSettings;                 \/\/ Container for the advanced settings class , thiss allows the advanced settings to be in a foldout in the inspector$/;"	f	class:ThirdPersonCharacter	file:
advancer	Scripts/Agent/Act/LegController.cs	/^		public LegState advancer;$/;"	f	class:RusticGames.Act.LegsState
aeroFactor	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	private float aeroFactor;$/;"	f	class:AeroplaneController	file:
aerodynamicEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float aerodynamicEffect = 0.02f;           \/\/ How much aerodynamics affect the speed of the aeroplane.$/;"	f	class:AeroplaneController	file:
aeroplane	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl2Axis.cs	/^	private AeroplaneController aeroplane;$/;"	f	class:AeroplaneUserControl2Axis	file:
aeroplane	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl4Axis.cs	/^	private AeroplaneController aeroplane;$/;"	f	class:AeroplaneUserControl4Axis	file:
aeroplaneController	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	private AeroplaneController aeroplaneController;           \/\/ The aeroplane controller that is used to move the plane$/;"	f	class:AeroplaneAIControl	file:
agent	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^    public NavMeshAgent agent { get; private set; }                 \/\/ the navmesh agent required for the path finding$/;"	p	class:AICharacterControl
airBrakesEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float airBrakesEffect = 3f;                \/\/ How much the air brakes effect the drag.$/;"	f	class:AeroplaneController	file:
airControl	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	[SerializeField] bool airControl = false;			\/\/ Whether or not a player can steer while jumping;$/;"	f	class:PlatformerCharacter2D	file:
airControl	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	[SerializeField] float airControl = 2;								\/\/ determines the response speed of controlling the character while airborne$/;"	f	class:ThirdPersonCharacter	file:
airSpeed	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	[SerializeField] float airSpeed = 6;								\/\/ determines the max speed of the character while airborne$/;"	f	class:ThirdPersonCharacter	file:
align	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public AlignMode align;$/;"	f	class:ParticleSceneControls.DemoParticleSystem
allConditionsMet	Scripts/Goal.cs	/^	public bool allConditionsMet = false;$/;"	f	class:Goal
alsoScalePhysicsTimestep	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	public bool alsoScalePhysicsTimestep = true;$/;"	f	class:SlowMoButton
alwaysUseVirtual	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    protected List<string> alwaysUseVirtual = new List<string>();                                              \/\/ list of the axis and button names that have been flagged to always use a virtual axis or button$/;"	f	class:VirtualInput
amount	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^        public float amount;                            \/\/ The amount by which they can rotate.$/;"	f	class:AeroplaneControlSurfaceAnimator.ControlSurface
angular	Scripts/World/Mover.cs	/^	public Vector3 angular;$/;"	f	class:Mover
angularDrag	Sample Assets/Utility/DragRigidbody.js	/^var angularDrag = 5.0;$/;"	v
angularForceMode	Scripts/World/Mechanism.cs	/^	public ForceMode angularForceMode;$/;"	f	class:Mechanism
angularForceMode	Shover.cs	/^	public ForceMode2D angularForceMode;$/;"	f	class:Shover
angularMaxSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var angularMaxSpeed = 15.0;$/;"	v
angularSmoothLag	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var angularSmoothLag = 0.3;$/;"	v
angularVelocity	Investigator.cs	/^	public float angularVelocity;$/;"	f	struct:BodyData
anim	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	Animator anim;										\/\/ Reference to the player's animator component.$/;"	f	class:PlatformerCharacter2D	file:
animSpeedMultiplier	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	[SerializeField][Range(0.1f,3f)] float animSpeedMultiplier = 1;	    \/\/ how much the animation of the character will be multiplied by$/;"	f	class:ThirdPersonCharacter	file:
animator	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	Animator animator;                                      \/\/ The animator for the character$/;"	f	class:ThirdPersonCharacter	file:
animator	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	Animator animator;$/;"	f	class:LandingGear	file:
anyOnGround	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	bool anyOnGround;$/;"	f	class:CarController	file:
aperture	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var aperture : SerializedProperty;$/;"	v
applicationInterval	Shover.cs	/^	public float applicationInterval = 1f;$/;"	f	class:Shover
apply	Shover.cs	/^	public bool apply = false;$/;"	f	class:Shover
applyAngularForce	Scripts/World/Mechanism.cs	/^	public void applyAngularForce (Rigidbody toBody, Vector3 desiredTorque, bool relative)$/;"	m	class:Mechanism
applyAngularForceViaQuaternion	Scripts/World/Mechanism.cs	/^	public void applyAngularForceViaQuaternion (Rigidbody toBody, Vector3 desiredTorque)$/;"	m	class:Mechanism
applyLinearForce	Scripts/World/Mechanism.cs	/^	public void applyLinearForce (Rigidbody toBody, Vector3 desiredForce, bool relative)$/;"	m	class:Mechanism
area	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	Bounds area;$/;"	f	class:Clouds	file:
attachToCenterOfMass	Sample Assets/Utility/DragRigidbody.js	/^var attachToCenterOfMass = false;$/;"	v
attack	Scripts/World/Mover.cs	/^	public void attack (GameObject target)$/;"	m	class:Mover
attackFilter	Scripts/SelectUnits.cs	/^	public string attackFilter = "Unit";$/;"	f	class:SelectUnits
attackPeriodSeconds	Scripts/World/Mover.cs	/^	float attackPeriodSeconds = 1f;$/;"	f	class:Mover	file:
attackPeriodSeconds	Shooter.cs	/^	public float attackPeriodSeconds = 0.5f;$/;"	f	class:Shooter
attackRange	Scripts/World/Mover.cs	/^	public float attackRange = 10f;$/;"	f	class:Mover
attackRoutine	Scripts/World/Mover.cs	/^	IEnumerator attackRoutine() {$/;"	m	class:Mover	file:
attackTarget	Scripts/World/Mover.cs	/^	GameObject attackTarget;$/;"	f	class:Mover	file:
attenuationCurve	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var attenuationCurve : SerializedProperty;$/;"	v
attenuationCurveOn	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var attenuationCurveOn : SerializedProperty;$/;"	v
autoIntent	SimpleWalker.cs	/^	public IEnumerator autoIntent() {$/;"	m	class:SimpleWalker
autoPitchLevel	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float autoPitchLevel = 0.2f;               \/\/ How much the aeroplane tries to level when not pitching.$/;"	f	class:AeroplaneController	file:
autoReturnSpeed	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public Vector2 autoReturnSpeed = new Vector2(4, 4);                          \/\/ The speed at which the joystick X and Y will return to center$/;"	f	class:JoystickAbstract
autoReturnSpeed	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public Vector2 autoReturnSpeed = new Vector2(4,4);                          \/\/ The speed at which the joystick X and Y will return to center$/;"	f	class:TouchJoystick
autoReturnStyle	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public ReturnStyleOption autoReturnStyle = ReturnStyleOption.Curved;        \/\/ The stored option for the return style of the joystick$/;"	f	class:JoystickAbstract
autoReturnStyle	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public ReturnStyleOption autoReturnStyle = ReturnStyleOption.Curved;        \/\/ The stored option for the return style of the joystick$/;"	f	class:TouchJoystick
autoRollLevel	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float autoRollLevel = 0.2f;                \/\/ How much the aeroplane tries to level when not rolling.$/;"	f	class:AeroplaneController	file:
autoRotate	Standard Assets/Character Controllers/Sources/Scripts/PlatformInputController.js	/^var autoRotate : boolean = true;$/;"	v
autoTargetPlayer	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	[SerializeField] private bool autoTargetPlayer = true; 			\/\/ Whether the rig should automatically target the player.$/;"	f	class:AbstractTargetFollower	file:
autoTurnPitch	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float autoTurnPitch = 0.5f;                \/\/ How much the aeroplane automatically pitches when in a banked turn.$/;"	f	class:AeroplaneController	file:
autoTurnSpeed	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float autoTurnSpeed = 2;						\/\/ speed at which character auto-turns towards cam direction$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
autoTurnThresholdAngle	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float autoTurnThresholdAngle = 100;			\/\/ character auto turns towards camera direction if facing away by more than this angle$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
autoZeroHorizontalOnMobile	Sample Assets/Utility/SimpleMouseRotator.cs	/^	public bool autoZeroHorizontalOnMobile = false;$/;"	f	class:SimpleMouseRotator
autoZeroVerticalOnMobile	Sample Assets/Utility/SimpleMouseRotator.cs	/^	public bool autoZeroVerticalOnMobile = true;$/;"	f	class:SimpleMouseRotator
avoidOtherCarSlowdown	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	float avoidOtherCarSlowdown;	\/\/ how much to slow down due to colliding with another car, whilst avoiding$/;"	f	class:CarAIControl	file:
avoidOtherCarTime	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	float avoidOtherCarTime;		\/\/ time until which to avoid the car we recently collided with$/;"	f	class:CarAIControl	file:
avoidPathOffset	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	float avoidPathOffset;			\/\/ direction (-1 or 1) in which to offset path to avoid other car, whilst avoiding$/;"	f	class:CarAIControl	file:
axes	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public RotationAxes axes = RotationAxes.MouseXAndY;$/;"	f	class:MouseLook
axesToUse	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public AxisOption axesToUse = AxisOption.Both;                              \/\/ The options for the axes that the still will use$/;"	f	class:JoystickAbstract
axesToUse	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    public AxisOption axesToUse = AxisOption.Both;                              \/\/ The options for the axes that the still will use$/;"	f	class:TouchJoystick
axis	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^    private CrossPlatformInput.VirtualAxis axis;            \/\/ A reference to the virtual axis as it is in the cross platform input$/;"	f	class:AxisTouchButton	file:
axisCentre	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^    private float axisCentre;                               \/\/ The centre of the axis$/;"	f	class:AxisTouchButton	file:
axisName	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	public string axisName = "Horizontal";                  \/\/ The name of the axis$/;"	f	class:AxisTouchButton
axisName	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		public string axisName;$/;"	f	class:TiltInput.AxisMapping
axisValue	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	public float axisValue = 1;                             \/\/ The axis that the value has$/;"	f	class:AxisTouchButton
b	Change.cs	/^	public Dictionary<InteractionResult, InteractionLogic> b = new Dictionary<InteractionResult, InteractionLogic>();$/;"	f	class:Change
backgroundFade	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var backgroundFade : SerializedProperty;$/;"	v
ball	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^    private Ball ball;           			\/\/ Reference to the ball controller.$/;"	f	class:BallUserControl	file:
bankedTurnAmount	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	float bankedTurnAmount;$/;"	f	class:AeroplaneController	file:
bankedTurnEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float bankedTurnEffect = 0.5f;             \/\/ The amount of turn from doing a banked turn.$/;"	f	class:AeroplaneController	file:
baseHeight	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var baseHeight : float = 1.0;$/;"	v
baseSwayAmount	Sample Assets/Cameras/Scripts/HandHeldCam.cs	/^	[SerializeField] float baseSwayAmount = .5f;$/;"	f	class:HandHeldCam	file:
bendToEnd	Scripts/Agent/Act/LegController.cs	/^		public HingeJoint2D bendToEnd;$/;"	f	class:RusticGames.Act.Leg
blockObject	_Local/Assets/Scripts/Level.cs	/^	public GameObject blockObject;$/;"	f	class:LevelBlock
blocks	_Local/Assets/Scripts/Level.cs	/^	public LevelBlock[] blocks;$/;"	f	class:Level
blurSampleCount	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var blurSampleCount : SerializedProperty;$/;"	v
blurType	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var blurType : SerializedProperty;$/;"	v
bobHeightSpeedMultiplier	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float bobHeightSpeedMultiplier = 0.3f;		\/\/ the amount the bob height increases as the character's speed increases (for a good 'run' effect compared with walking)$/;"	f	class:FirstPersonHeadBob	file:
bobStrideSpeedLengthen	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float bobStrideSpeedLengthen = 0.3f;		\/\/ the amount the stride lengthens based on speed (so that running isn't like a silly speedwalk!)$/;"	f	class:FirstPersonHeadBob	file:
body	Investigator.cs	/^	public Rigidbody2D body;$/;"	f	class:Investigator
bodyState	Investigator.cs	/^	public BodyData bodyState;$/;"	f	class:Investigator
bounce	Change.cs	/^	void bounce ()$/;"	m	class:Change	file:
boundSize	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	float boundSize;$/;"	f	class:TargetFieldOfView	file:
boxStyle	Scripts/MouseSelector.cs	/^	private GUIStyle boxStyle;$/;"	f	class:MouseSelector	file:
brakeCondition	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] BrakeCondition brakeCondition = BrakeCondition.TargetDistance; \/\/ what should the AI consider when accelerating\/braking?$/;"	f	class:CarAIControl	file:
brakePower	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private float brakePower = 40;                                 \/\/ how powerful the brakes are at stopping the car$/;"	f	class:CarController	file:
brakeSensitivity	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float brakeSensitivity = 1f;	                    			\/\/ How sensitively the AI uses the brake to reach the current desired speed$/;"	f	class:CarAIControl	file:
brightness	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var brightness : SerializedProperty;$/;"	v
brightnessColored	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var brightnessColored : SerializedProperty;$/;"	v
buildTargetGroups	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static BuildTargetGroup[] buildTargetGroups = new BuildTargetGroup[]$/;"	f	class:CrossPlatformInitialize	file:
burning	Sample Assets/Effects/Particle Systems/scripts/FireLight.cs	/^	bool burning = true;$/;"	f	class:FireLight	file:
burnoutFactor	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float burnoutFactor;$/;"	f	class:Wheel	file:
burnoutGrip	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float burnoutGrip;$/;"	f	class:Wheel	file:
burnoutRpm	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float burnoutRpm;$/;"	f	class:Wheel	file:
burnoutSlipEffect	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        [Range(0, 1)] public float burnoutSlipEffect = 0.4f;                        \/\/ how much the car wheels will slide when burning out$/;"	f	class:CarController.Advanced
burnoutTendency	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        [Range(0, 1)] public float burnoutTendency = 0.2f;                          \/\/ how likely the car is to burnout $/;"	f	class:CarController.Advanced
buttonName	Sample Assets/Cross Platform Input/Scripts/Button.cs	/^    public string buttonName = "Fire1";                     \/\/ The name used for the button$/;"	f	class:Button
cam	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	protected Transform cam;                              \/\/ the transform of the camera$/;"	f	class:PivotBasedCameraRig
cam	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    private Transform cam;                              \/\/ the transform of the camera$/;"	f	class:ProtectCameraFromWallClip	file:
cam	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	Camera cam;$/;"	f	class:TargetFieldOfView	file:
cam	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	private Transform cam;                              \/\/ A reference to the main camera in the scenes transform$/;"	f	class:ThirdPersonUserControl	file:
cam	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^	private Transform cam;					\/\/ A reference to the main camera in the scenes transform$/;"	f	class:BallUserControl	file:
camForward	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	private Vector3 camForward;							\/\/ The current forward direction of the camera$/;"	f	class:ThirdPersonUserControl	file:
camForward	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^	private Vector3 camForward;				\/\/ The current forward direction of the camera$/;"	f	class:BallUserControl	file:
camISO	Scripts/GUI/HUD.cs	/^	private CameraSettings camISO = new CameraSettings();$/;"	f	class:HUD	file:
camOffset	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public int camOffset = 15;$/;"	f	class:ParticleSceneControls.DemoParticleSystem
camOffsetVelocity	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	Vector3 camOffsetVelocity = Vector3.zero;$/;"	f	class:ParticleSceneControls	file:
camStart	Scripts/GUI/HUD.cs	/^	private CameraSettings camStart = new CameraSettings();$/;"	f	class:HUD	file:
camSwitchButton	Sample Assets/Utility/SimpleActivatorMenu.cs	/^    public GUIText camSwitchButton;$/;"	f	class:SimpleActivatorMenu
camTop	Scripts/GUI/HUD.cs	/^	private CameraSettings camTop = new CameraSettings();$/;"	f	class:HUD	file:
camUnit	Scripts/GUI/HUD.cs	/^	private CameraSettings camUnit = new CameraSettings();$/;"	f	class:HUD	file:
cameraProvider	Scripts/SelectUnits.cs	/^	public HUD cameraProvider;$/;"	f	class:SelectUnits
cameraTransform	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var cameraTransform : Transform;$/;"	v
cameras	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var cameras : SerializedProperty;$/;"	v
canJump	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var canJump = true;$/;"	v
capsule	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	private CapsuleCollider capsule;                                                    \/\/ The capsule collider for the first person character$/;"	f	class:FirstPersonCharacter	file:
capsule	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	CapsuleCollider capsule;                                \/\/ The collider for the character$/;"	f	class:ThirdPersonCharacter	file:
car	Sample Assets/Vehicles/Car/Scripts/BrakeLight.cs	/^    public CarController car; \/\/ reference to the car controller, must be dragged in inspector$/;"	f	class:BrakeLight
car	Sample Assets/Vehicles/Car/Scripts/CarGUI.cs	/^    public CarController car;                   \/\/ reference to the car controller to get the information needed for the display$/;"	f	class:CarGUI
car	Sample Assets/Vehicles/Car/Scripts/CarUserControl.cs	/^    private CarController car;  \/\/ the car controller we want to use$/;"	f	class:CarUserControl	file:
car	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^	public CarController car { get; private set; }$/;"	p	class:Wheel
carController	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^    CarController carController;    \/\/ Reference to actual car controller we are controlling$/;"	f	class:CarAIControl	file:
carController	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    CarController carController;                                                        \/\/ Reference to car we are controlling$/;"	f	class:CarAudio	file:
cautiousAngularVelocityFactor	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float cautiousAngularVelocityFactor = 30f;                     \/\/ how cautious the AI should be when considering its own current angular velocity (i.e. easing off acceleration if spinning!)$/;"	f	class:CarAIControl	file:
cautiousMaxAngle	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] [Range(0,180)] float cautiousMaxAngle = 50f;               	\/\/ angle of approaching corner to treat as warranting maximum caution$/;"	f	class:CarAIControl	file:
cautiousMaxDistance	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float cautiousMaxDistance = 100f;		                		\/\/ distance at which distance-based cautiousness begins$/;"	f	class:CarAIControl	file:
cautiousSpeedFactor	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] [Range(0,1)] float cautiousSpeedFactor = 0.05f;            	\/\/ percentage of max speed to use when being maximally cautious$/;"	f	class:CarAIControl	file:
ceilingCheck	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	Transform ceilingCheck;								\/\/ A position marking where to check for ceilings$/;"	f	class:PlatformerCharacter2D	file:
ceilingRadius	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	float ceilingRadius = .01f;							\/\/ Radius of the overlap circle to determine if the player can stand up$/;"	f	class:PlatformerCharacter2D	file:
centerOfMass	Investigator.cs	/^	public Vector2 centerOfMass;$/;"	f	struct:BodyData
centreAngleOffset	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	public float centreAngleOffset = 0;$/;"	f	class:TiltInput
changeSpeed	Sample Assets/Effects/Particle Systems/scripts/Hose.cs	/^	public float changeSpeed = 5;$/;"	f	class:Hose
changeSpeed	Sample Assets/Utility/DynamicShadowSettings.cs	/^	float changeSpeed;$/;"	f	class:DynamicShadowSettings	file:
changeTarget	Scripts/World/Interaction.cs	/^	public Change changeTarget;$/;"	f	class:Interaction
character	Sample Assets/2D/Scripts/Platformer2DUserControl.cs	/^	private PlatformerCharacter2D character;$/;"	f	class:Platformer2DUserControl	file:
character	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	FirstPersonCharacter character;						\/\/ a reference to the First Person Character component (on the parent gameobject)$/;"	f	class:FirstPersonHeadBob	file:
character	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^    public ThirdPersonCharacter character { get; private set; }     \/\/ the character we are controlling$/;"	p	class:AICharacterControl
character	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^    private ThirdPersonCharacter character;             \/\/ A reference to the ThirdPersonCharacter on the object$/;"	f	class:ThirdPersonUserControl	file:
character	_Local/Assets/Scripts/Level.cs	/^	public string character;$/;"	f	class:LevelBlock
checkApply	Shover.cs	/^	IEnumerator checkApply () {$/;"	m	class:Shover	file:
checkFeet	MovementUtility.cs	/^	public static void checkFeet(SimpleLeg legOne, SimpleLeg legTwo) {$/;"	m	class:MovementUtility
checkInput	Resetter.cs	/^	IEnumerator checkInput() {$/;"	m	class:Resetter	file:
checkInput	Scripts/World/KeyboardTargeter.cs	/^	IEnumerator checkInput() {$/;"	m	class:KeyboardTargeter	file:
childrenOfThisObject	Sample Assets/Utility/PlatformSpecificContent.cs	/^	[SerializeField] bool childrenOfThisObject;$/;"	f	class:PlatformSpecificContent	file:
circuit	Sample Assets/Utility/WaypointCircuit.cs	/^		public WaypointCircuit circuit;$/;"	f	class:WaypointCircuit.WaypointList
circuit	Sample Assets/Utility/WaypointProgressTracker.cs	/^	[SerializeField] WaypointCircuit circuit;         \/\/ A reference to the waypoint-based route we should follow$/;"	f	class:WaypointProgressTracker	file:
clampHeadPositionScreenSpace	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var clampHeadPositionScreenSpace = 0.75;$/;"	v
clearOnChange	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public bool clearOnChange = false;$/;"	f	class:ParticleSceneControls
clearWhenApplied	Shover.cs	/^	public bool clearWhenApplied = true;$/;"	f	class:Shover
clipMoveTime	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	public float clipMoveTime = 0.05f;                 	\/\/ time taken to move when avoiding cliping (low value = fast, which it should be)$/;"	f	class:ProtectCameraFromWallClip
closestDistance	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	public float closestDistance = 0.5f;                \/\/ the closest distance the camera can be from the target$/;"	f	class:ProtectCameraFromWallClip
collectables	Scripts/GoalConditions/CollectAll.cs	/^	private GameObject[] collectables;$/;"	f	class:CollectAll	file:
collectablesRemaining	Scripts/GameManagerCollect.cs	/^	private int collectablesRemaining = 1;$/;"	f	class:GameManagerCollect	file:
collection	Scripts/Collector.cs	/^	public List<GameObject> collection;$/;"	f	class:Collector
collection	Scripts/ScaleWithCollection.cs	/^	private List<GameObject> collection;$/;"	f	class:ScaleWithCollection	file:
collider2d	Scripts/World/Interaction.cs	/^	public Collider2D collider2d;$/;"	f	class:GeneralCollider
collider3d	Scripts/World/Interaction.cs	/^	public Collider collider3d;$/;"	f	class:GeneralCollider
collisionEvents	Sample Assets/Effects/Particle Systems/scripts/WaterHoseParticles.cs	/^    ParticleSystem.CollisionEvent[] collisionEvents = new ParticleSystem.CollisionEvent[16];$/;"	f	class:WaterHoseParticles	file:
collisionMap	_Local/Assets/Scripts/Player.cs	/^	private Dictionary<CollisionData, CollisionAction> collisionMap = new Dictionary<CollisionData, CollisionAction>();$/;"	f	class:Player	file:
color	Scripts/World/Affiliation.cs	/^	public Color color;$/;"	f	class:Affiliation
colorBalance	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var colorBalance : SerializedProperty;$/;"	v
colorFilterMask	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var colorFilterMask : SerializedProperty;$/;"	v
colored	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var colored : SerializedProperty;$/;"	v
cols	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	Collider[] cols;$/;"	f	class:AfterburnerPhysicsForce	file:
comment	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string comment;$/;"	f	struct:UnityEditor.FunctionData
conditions	Scripts/Goal.cs	/^	private Component[] conditions;$/;"	f	class:Goal	file:
constraintCenter	Scripts/ConstrainedMover.cs	/^	private Vector3 constraintCenter;$/;"	f	class:ConstrainedMover	file:
constraintRadius	Scripts/ConstrainedMover.cs	/^	public float constraintRadius = 3.0f;$/;"	f	class:ConstrainedMover
content	Sample Assets/Utility/PlatformSpecificContent.cs	/^	[SerializeField] GameObject[] content = new GameObject[0];$/;"	f	class:PlatformSpecificContent	file:
context	Scripts/World/Mechanism.cs	/^	public Mechanism context;$/;"	f	class:Mechanism
continuousApply	Shover.cs	/^	public bool continuousApply = false;$/;"	f	class:Shover
controlSurfaces	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^    [SerializeField] private ControlSurface[] controlSurfaces;      \/\/ Collection of control surfaces.$/;"	f	class:AeroplaneControlSurfaceAnimator	file:
controllingHUD	Scripts/MouseSelector.cs	/^	public HUD controllingHUD;$/;"	f	class:MouseSelector
createMotors	Scripts/Agent/Act/LegController.cs	/^		public static void createMotors(LegController l){$/;"	m	class:RusticGames.Act.LegController
crouch	MovementUtility.cs	/^	public static IEnumerator crouch (SimpleLeg legOne, SimpleLeg legTwo)$/;"	m	class:MovementUtility
crouchChangeSpeed	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float crouchChangeSpeed = 4;					\/\/ speed at which capsule changes height when crouching\/standing$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
crouchHeightFactor	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float crouchHeightFactor = 0.6f; 			\/\/ collider height is multiplied by this when crouching$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
crouchInput	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	bool crouchInput;$/;"	f	class:ThirdPersonCharacter	file:
crouchSpeed	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	[SerializeField] float crouchSpeed = .36f;			\/\/ Amount of maxSpeed applied to crouching movement. 1 = 100%$/;"	f	class:PlatformerCharacter2D	file:
crouching	SimpleWalker.cs	/^	public bool crouching;$/;"	f	class:SimpleWalker
cullingMask	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var cullingMask : SerializedProperty;$/;"	v
currentActiveObject	Sample Assets/Utility/SimpleActivatorMenu.cs	/^    private int currentActiveObject;$/;"	f	class:SimpleActivatorMenu	file:
currentDist	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    private float currentDist;                          \/\/ the current distance from the camera to the target$/;"	f	class:ProtectCameraFromWallClip	file:
currentFps	Sample Assets/Utility/FPSCounter.cs	/^	int currentFps;$/;"	f	class:FPSCounter	file:
currentGravity	SimpleWalker.cs	/^	public Vector2 currentGravity;$/;"	f	class:SimpleWalker
currentHeight	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^	var currentHeight = cameraTransform.position.y;$/;"	v
currentLegs	SimpleWalker.cs	/^	public LegsFunction currentLegs;$/;"	f	class:SimpleWalker
currentLegsIntent	SimpleWalker.cs	/^	public LegsIntent currentLegsIntent;$/;"	f	class:SimpleWalker
currentLookPos	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	Vector3 currentLookPos;                                 \/\/ The current position where the character is looking$/;"	f	class:ThirdPersonCharacter	file:
currentMovementOffset	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var currentMovementOffset : Vector3 = velocity * Time.deltaTime;$/;"	v
currentParticleList	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	List<Transform> currentParticleList = new List<Transform>();$/;"	f	class:ParticleSceneControls	file:
currentRotation	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^	var currentRotation = Quaternion.Euler (0, currentAngle, 0);$/;"	v
currentTurnAmount	Sample Assets/Cameras/Scripts/AutoCam.cs	/^	private float currentTurnAmount;                        \/\/ How much to turn the camera$/;"	f	class:AutoCam	file:
currentUse	Scripts/Agent/Act/LegController.cs	/^		public LegsUse currentUse;$/;"	f	class:RusticGames.Act.LegController
currentVelocity	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	Vector3 currentVelocity;$/;"	f	class:Camera2DFollow	file:
curvedSpeedFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	float curvedSpeedFactor;$/;"	f	class:CarController	file:
damper	Sample Assets/Utility/DragRigidbody.js	/^var damper = 5.0;$/;"	v
damping	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	public float damping = 1;$/;"	f	class:Camera2DFollow
dampingTime	Sample Assets/Utility/SimpleMouseRotator.cs	/^	public float dampingTime = 0.2f;$/;"	f	class:SimpleMouseRotator
deadZone	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public Vector2 deadZone = Vector2.zero;                                     \/\/ The dead zone where the joystick will not be regarded as having input$/;"	f	class:JoystickAbstract
deadZone	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    public Vector2 deadZone = Vector2.zero;                                     \/\/ The dead zone where the joystick will not be regarded as having input$/;"	f	class:TouchJoystick
debrisPrefabs	Sample Assets/Effects/Particle Systems/scripts/ExplosionFireAndDebris.cs	/^	public Transform[] debrisPrefabs;$/;"	f	class:ExplosionFireAndDebris
defaultKeymap	Scripts/InputInterpreter.cs	/^	public List<SwitchInputMapping> defaultKeymap;$/;"	f	class:InputInterpreter
defaultRect	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Rect defaultRect;                                                   \/\/ This stores the default rect so we can snap back to it$/;"	f	class:JoystickAbstract
defaultRect	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private Rect defaultRect;                                                   \/\/ This stores the default rect so we can snap back to it$/;"	f	class:TouchJoystick	file:
delay	Sample Assets/Utility/TimedObjectActivator.cs	/^		public float delay;$/;"	f	class:TimedObjectActivator.Entry
delayJump	MovementUtility.cs	/^	public static IEnumerator delayJump (SimpleLeg legOne, SimpleLeg legTwo)$/;"	m	class:MovementUtility
delayJump	SimpleWalker.cs	/^	public bool delayJump;$/;"	f	class:SimpleWalker
demoCam	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public Transform demoCam;$/;"	f	class:ParticleSceneControls
demoParticles	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public DemoParticleSystemList demoParticles;$/;"	f	class:ParticleSceneControls
density	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	[SerializeField] [Range(0,1)] float density;$/;"	f	class:Clouds	file:
depthThreshold	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var depthThreshold : SerializedProperty;$/;"	v
desiredLegSeparation	Scripts/Agent/Act/LegController.cs	/^		public float desiredLegSeparation;$/;"	f	class:RusticGames.Act.BalanceControlInfo
desiredPosition	Shover.cs	/^	public Vector2 desiredPosition;$/;"	f	class:Shover
desiredRotation	Shover.cs	/^	public float desiredRotation;$/;"	f	class:Shover
desiredVelocity	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var desiredVelocity : Vector3;$/;"	v
desiredWalkPower	Scripts/Agent/Act/LegController.cs	/^		public float desiredWalkPower;$/;"	f	class:RusticGames.Act.LegController
destroyableChildren	History.cs	/^	public List<GameObject> destroyableChildren = new List<GameObject>();$/;"	f	class:History
detachChildren	Standard Assets/Particles/Legacy Particles/TimedObjectDestructor.js	/^var detachChildren = false;$/;"	v
detonationImpactVelocity	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	public float detonationImpactVelocity = 10;$/;"	f	class:Explosive
die	Change.cs	/^	void die ()$/;"	m	class:Change	file:
direction	Sample Assets/Utility/WaypointCircuit.cs	/^		public Vector3 direction;$/;"	f	struct:WaypointCircuit.RoutePoint
direction	_Local/Assets/Scripts/Player.cs	/^		public string direction;$/;"	f	struct:Player.CollisionData
directional	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	public bool directional {get{return m_LightType == LightType.Directional;}}$/;"	p	class:LightShafts
display	Sample Assets/Utility/FPSCounter.cs	/^	string display = "{0} FPS";$/;"	f	class:FPSCounter	file:
display	Sample Assets/Vehicles/Car/Scripts/CarGUI.cs	/^    private string display =          			\/\/ template string for GUI info$/;"	f	class:CarGUI	file:
displayText	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneGUI.cs	/^	private string displayText = "Throttle: {0:0%}\\nSpeed: {1:0000}KM\/H\\nAltitude: {2:0000}M";$/;"	f	class:AeroplaneGUI	file:
distFromSurface	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public float distFromSurface = 0.5f;$/;"	f	class:ParticleSceneControls
distance	Sample Assets/Utility/DragRigidbody.js	/^var distance = 0.2;$/;"	v
distance	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var distance = 7.0;$/;"	v
distanceVector	Scripts/World/KeyboardMover.cs	/^	private Vector3 distanceVector;$/;"	f	class:KeyboardMover	file:
distanceVector	Scripts/World/Mover.cs	/^	private Vector3 distanceVector;$/;"	f	class:Mover	file:
distances	Sample Assets/Utility/WaypointCircuit.cs	/^	float[] distances;$/;"	f	class:WaypointCircuit	file:
distribution	_Local/CurveDisplayTest.cs	/^	public AnimationCurve distribution;$/;"	f	class:CurveDisplayTest
doLegs	SimpleWalker.cs	/^	public IEnumerator doLegs ()$/;"	m	class:SimpleWalker
dontClipTag	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	public string dontClipTag = "Player";				\/\/ don't clip against objects with this tag (useful for not clipping against the targeted object)$/;"	f	class:ProtectCameraFromWallClip
dopplerLevel	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public float dopplerLevel = 1;                                                      \/\/ The mount of doppler effect used in the audio$/;"	f	class:CarAudio
down	KeyboardConfiguration.cs	/^	public KeyCode down;$/;"	f	class:KeyboardConfiguration
down	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^    private bool down;$/;"	f	class:ButtonDownTextureChange	file:
downForce	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        public float downForce = 30;                                                \/\/ the amount of downforce applied (speed is factored in)$/;"	f	class:CarController.Advanced
drag	Sample Assets/Utility/DragRigidbody.js	/^var drag = 10.0;$/;"	v
dragIncreaseFactor	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	[SerializeField] private float dragIncreaseFactor = 0.001f;			\/\/ how much drag should increase with speed.$/;"	f	class:AeroplaneController	file:
dragSelect	Scripts/MouseSelector.cs	/^	private GUIBox dragSelect = new GUIBox();$/;"	f	class:MouseSelector	file:
drawLegGizmo	Scripts/Agent/Act/LegController.cs	/^		public static void drawLegGizmo (Leg leg)$/;"	m	class:RusticGames.Act.LegController
drawOffset	Scripts/World/Affiliation.cs	/^	public Vector3 drawOffset = new Vector3(0f, 2f, 0f);$/;"	f	class:Affiliation
drawRadius	Scripts/World/Affiliation.cs	/^	public float drawRadius = 1f;$/;"	f	class:Affiliation
driving	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] bool driving = false;							                \/\/ whether the AI is currently actively driving or stopped.$/;"	f	class:CarAIControl	file:
duration	Scripts/FadeInOut.cs	/^	public float duration = 1.5f;$/;"	f	class:FadeInOut
dx11BokehIntensity	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var dx11BokehIntensity : SerializedProperty;$/;"	v
dx11BokehScale	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var dx11BokehScale : SerializedProperty;$/;"	v
dx11BokehTexture	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var dx11BokehTexture : SerializedProperty;$/;"	v
dx11BokehThreshhold	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var dx11BokehThreshhold : SerializedProperty;$/;"	v
dx11SpawnHeuristic	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var dx11SpawnHeuristic : SerializedProperty;$/;"	v
earlyStop	Sample Assets/Utility/ParticleSystemDestroyer.cs	/^	bool earlyStop = false;$/;"	f	class:ParticleSystemDestroyer	file:
editorVisualisationSubsteps	Sample Assets/Utility/WaypointCircuit.cs	/^	public float editorVisualisationSubsteps = 100;$/;"	f	class:WaypointCircuit
effectAngle	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	public float effectAngle = 15;$/;"	f	class:AfterburnerPhysicsForce
effectDistance	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	public float effectDistance = 10;$/;"	f	class:AfterburnerPhysicsForce
effectWidth	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	public float effectWidth = 1;$/;"	f	class:AfterburnerPhysicsForce
element	Scripts/World/Interaction.cs	/^	public InteractorType element;$/;"	f	class:InteractionResultMapping
elements	Composition.cs	/^	public List<InteractorType> elements = new List<InteractorType>();$/;"	f	class:Composition
end	Scripts/Agent/Act/LegController.cs	/^		public HingeJoint2D end;$/;"	f	class:RusticGames.Act.Leg
endColor	Scripts/FadeInOut.cs	/^	public Color endColor = Color.clear;$/;"	f	class:FadeInOut
engineDopplerLevel	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^        public float engineDopplerLevel = 1f;                           \/\/ The doppler level of the engine audio source.$/;"	f	class:AeroplaneAudio.AdvancedSetttings
engineFwdSpeedMultiplier	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] float engineFwdSpeedMultiplier = 0.002f;       	\/\/ Additional multiplier for an increase in pitch of the engine from the plane's speed.$/;"	f	class:AeroplaneAudio	file:
engineMasterVolume	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^        [Range(0f, 1f)] public float engineMasterVolume = 0.5f;       	\/\/ An overall control of the engine sound volume.$/;"	f	class:AeroplaneAudio.AdvancedSetttings
engineMaxDistance	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^        public float engineMaxDistance = 1000f;                         \/\/ The max distance of the engine audio source.$/;"	f	class:AeroplaneAudio.AdvancedSetttings
engineMaxThrottlePitch	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] float engineMaxThrottlePitch = 2f;					\/\/ Pitch of the engine sound when at maximum throttle.$/;"	f	class:AeroplaneAudio	file:
engineMinDistance	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^        public float engineMinDistance = 50f;                           \/\/ The min distance of the engine audio source.$/;"	f	class:AeroplaneAudio.AdvancedSetttings
engineMinThrottlePitch	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] float engineMinThrottlePitch = 0.4f;				\/\/ Pitch of the engine sound when at minimum throttle.$/;"	f	class:AeroplaneAudio	file:
engineSound	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] AudioClip engineSound;                     		\/\/ Looped engine sound, whose pitch and volume are affected by the plane's throttle setting.$/;"	f	class:AeroplaneAudio	file:
engineSoundSource	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^    private AudioSource engineSoundSource;                              \/\/ Reference to the AudioSource for the engine.$/;"	f	class:AeroplaneAudio	file:
engineSoundStyle	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public EngineAudioOptions engineSoundStyle = EngineAudioOptions.FourChannel;        \/\/ Set the default audio options to be four channel$/;"	f	class:CarAudio
entries	Sample Assets/Utility/TimedObjectActivator.cs	/^		public Entry[] entries;	$/;"	f	class:TimedObjectActivator.Entries
entries	Sample Assets/Utility/TimedObjectActivator.cs	/^	public Entries entries = new Entries();$/;"	f	class:TimedObjectActivator
enumeratedJoysticks	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected static bool enumeratedJoysticks;                                    \/\/ A check so that we know we have an enumeration of all the joysticks$/;"	f	class:JoystickAbstract
enumeratedJoysticks	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private static bool enumeratedJoysticks;                                    \/\/ A check so that we know we have an enumeration of all the joysticks$/;"	f	class:TouchJoystick	file:
epipolarLines	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var epipolarLines : SerializedProperty;$/;"	v
epipolarSamples	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var epipolarSamples : SerializedProperty;$/;"	v
exploded	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	bool exploded;$/;"	f	class:Explosive	file:
explosionForce	Sample Assets/Effects/Particle Systems/scripts/ExplosionPhysicsForce.cs	/^	public float explosionForce = 4;$/;"	f	class:ExplosionPhysicsForce
explosionPrefab	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	public Transform explosionPrefab;$/;"	f	class:Explosive
extension	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string extension$/;"	p	class:NewScriptWindow
extinction	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var extinction : SerializedProperty;$/;"	v
extinguishSounds	Sample Assets/Effects/Particle Systems/scripts/SmokeParticles.cs	/^	public AudioClip[] extinguishSounds;$/;"	f	class:SmokeParticles
extraHeight	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var extraHeight : float = 4.1;$/;"	v
facingRight	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	bool facingRight = true;							\/\/ For determining which way the player is currently facing.$/;"	f	class:PlatformerCharacter2D	file:
fade	Scripts/Fader.cs	/^	IEnumerator fade () {$/;"	m	class:Fader	file:
fadeDuration	Sample Assets/Vehicles/Car/Scripts/SkidTrail.cs	/^	[SerializeField] float fadeDuration;    \/\/ the amount of time before the skid trail will start to fade$/;"	f	class:SkidTrail	file:
fadeRate	Scripts/Fader.cs	/^	public float fadeRate = 1.0f;$/;"	f	class:Fader
fadeTarget	Scripts/Fader.cs	/^	public float fadeTarget = 1.0f;$/;"	f	class:Fader
far	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var far : SerializedProperty;$/;"	v
firePrefab	Sample Assets/Effects/Particle Systems/scripts/ExplosionFireAndDebris.cs	/^	public Transform firePrefab;$/;"	f	class:ExplosionFireAndDebris
fixedTimeRatio	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	float fixedTimeRatio;$/;"	f	class:SlowMoButton	file:
focalLength	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var focalLength : SerializedProperty;$/;"	v
focalSize	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var focalSize : SerializedProperty; $/;"	v
focalTransform	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var focalTransform : SerializedProperty;$/;"	v
follow	Scripts/World/Mover.cs	/^	public void follow (GameObject target)$/;"	m	class:Mover
followAngles	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^	Vector3 followAngles;$/;"	f	class:LookatTarget	file:
followAngles	Sample Assets/Utility/SimpleMouseRotator.cs	/^	Vector3 followAngles;$/;"	f	class:SimpleMouseRotator	file:
followDirection	OneWayFollow.cs	/^	public Vector3 followDirection = new Vector3(1,0,0);$/;"	f	class:OneWayFollow
followDistance	Scripts/World/KeyboardMover.cs	/^	public float followDistance = .001f;	$/;"	f	class:KeyboardMover
followDistance	Scripts/World/Mover.cs	/^	public float followDistance = 1.0f;	$/;"	f	class:Mover
followFilter	Scripts/SelectUnits.cs	/^	public string followFilter = "Unit";$/;"	f	class:SelectUnits
followSpeed	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^	[SerializeField] float followSpeed = 1;$/;"	f	class:LookatTarget	file:
followTarget	Scripts/World/Mover.cs	/^	GameObject followTarget;$/;"	f	class:Mover	file:
followTargetInEditMode	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	[SerializeField] protected bool followTargetInEditMode = true;$/;"	f	class:PivotBasedCameraRig
followTilt	Sample Assets/Cameras/Scripts/AutoCam.cs	/^    [SerializeField] private bool followTilt = true;        		\/\/ Whether the rig will tilt (around X axis) with the target.$/;"	f	class:AutoCam	file:
followVelocity	Sample Assets/Cameras/Scripts/AutoCam.cs	/^    [SerializeField] private bool followVelocity = false;   		\/\/ Whether the rig will rotate in the direction of the target's velocity.$/;"	f	class:AutoCam	file:
followVelocity	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^	protected Vector3 followVelocity;$/;"	f	class:LookatTarget
followVelocity	Sample Assets/Utility/SimpleMouseRotator.cs	/^	Vector3 followVelocity;$/;"	f	class:SimpleMouseRotator	file:
foot	SimpleLeg.cs	/^	public SliderJoint2D foot;$/;"	f	class:SimpleLeg
footAdvanceFactor	SimpleLeg.cs	/^	public float footAdvanceFactor;$/;"	f	class:SimpleLeg
footPrefab	SimpleWalker.cs	/^	public GameObject footPrefab;$/;"	f	class:SimpleWalker
footstepSounds	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] AudioClip[] footstepSounds;		\/\/ an array of footstep sounds that will be randomly selected from.$/;"	f	class:FirstPersonHeadBob	file:
force	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	public float force = 10;$/;"	f	class:AfterburnerPhysicsForce
force	Sample Assets/Effects/Particle Systems/scripts/WaterHoseParticles.cs	/^	public float force = 1;$/;"	f	class:WaterHoseParticles
force	Shover.cs	/^	public Vector2 force;$/;"	f	class:Shover
forceForNextTenthOfASecond	Investigator.cs	/^	public float forceForNextTenthOfASecond;$/;"	f	struct:SliderData
forceMode	Scripts/Agent/Act/Move.cs	/^		public ForceMode2D forceMode;$/;"	f	class:RusticGames.Act.Move
forceMode	Scripts/World/Mechanism.cs	/^	public ForceMode forceMode;$/;"	f	class:Mechanism
forceSource	Scripts/World/Mover.cs	/^	public Mechanism forceSource;$/;"	f	class:Mover
foregroundOverlap	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var foregroundOverlap : SerializedProperty;$/;"	v
forwardAmount	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	float forwardAmount;$/;"	f	class:ThirdPersonCharacter	file:
forwardFriction	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private WheelFrictionCurve forwardFriction;$/;"	f	class:Wheel	file:
forwardStiffness	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float forwardStiffness;$/;"	f	class:Wheel	file:
fovAdjustTime	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	[SerializeField] float fovAdjustTime = 1;			\/\/ the time taken to adjust the current FOV to the desired target FOV amount.$/;"	f	class:TargetFieldOfView	file:
fovAdjustVelocity	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	float fovAdjustVelocity;$/;"	f	class:TargetFieldOfView	file:
fpsAccumulator	Sample Assets/Utility/FPSCounter.cs	/^	int fpsAccumulator = 0;$/;"	f	class:FPSCounter	file:
fpsMeasurePeriod	Sample Assets/Utility/FPSCounter.cs	/^	float fpsMeasurePeriod = 0.5f;$/;"	f	class:FPSCounter	file:
fpsNextPeriod	Sample Assets/Utility/FPSCounter.cs	/^	float fpsNextPeriod = 0;$/;"	f	class:FPSCounter	file:
freshestFrame	Scripts/GUI/HUD.cs	/^	int freshestFrame = 0;$/;"	f	class:HUD	file:
fullManual	SimpleWalker.cs	/^	public bool fullManual;$/;"	f	class:SimpleWalker
fullSpeed	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	public float fullSpeed = 1;$/;"	f	class:SlowMoButton
fullTiltAngle	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	public float fullTiltAngle = 25;$/;"	f	class:TiltInput
gameOver	Scripts/GameManagerCollect.cs	/^	private bool gameOver = false;$/;"	f	class:GameManagerCollect	file:
gearDistribution	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    private float[] gearDistribution;                                               \/\/ Stores the caluclated change point for each gear (0-1 as a normalised amount relative to car's max speed)$/;"	f	class:CarController	file:
gearDistributionBias	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        [Range(0, 1)] public float gearDistributionBias = 0.2f;                     \/\/ Controls whether the gears are bunched together towards the lower or higher end of the car's range of speed.$/;"	f	class:CarController.Advanced
gearFactorSmoothing	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        public float gearFactorSmoothing = 5f;                                      \/\/ Controls the speed at which revs drop or raise to match new gear, after a gear change.$/;"	f	class:CarController.Advanced
generateTriangleStrips	Sample Assets/Utility/CombineChildren.cs	/^	public bool generateTriangleStrips = true;$/;"	f	class:CombineChildren
generatedObjects	_Local/Assets/Scripts/GameManager.cs	/^	public List<GameObject> generatedObjects;$/;"	f	class:GameManager
getAllObjectsInScreenBox	Scripts/GUI/HUD.cs	/^	public List<GameObject> getAllObjectsInScreenBox (Rect box, Vector3 startPoint)$/;"	m	class:HUD
getBestGuessCameraFromScreenPoint	Scripts/GUI/HUD.cs	/^	public Camera getBestGuessCameraFromScreenPoint(Vector3 point){$/;"	m	class:HUD
getBlock	_Local/Assets/Scripts/Level.cs	/^	public LevelBlock getBlock(char c) {$/;"	m	class:Level
getCurrentIntents	Scripts/IntentGatherer.cs	/^	List<ControllerIntent> getCurrentIntents();$/;"	m	interface:IntentGatherer
getIntentFromInputs	SimpleWalker.cs	/^	public IEnumerator getIntentFromInputs ()$/;"	m	class:SimpleWalker
getSpeedRatio	SimpleWalker.cs	/^	public float getSpeedRatio(float desiredSpeed) {$/;"	m	class:SimpleWalker
getTouchZoneRect	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected bool getTouchZoneRect;$/;"	f	class:JoystickAbstract
getTouchZoneRect	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private bool getTouchZoneRect;$/;"	f	class:TouchJoystick	file:
getWorldInfoAtScreenPoint	Scripts/GUI/HUD.cs	/^	public ScreenPointToWorldInfo getWorldInfoAtScreenPoint(Vector3 screenPoint) {$/;"	m	class:HUD
getXAxisDiff	SimpleLeg.cs	/^	public static float getXAxisDiff(SimpleLeg first, SimpleLeg other) {$/;"	m	class:SimpleLeg
getYAxisDiff	SimpleLeg.cs	/^	public static float getYAxisDiff(SimpleLeg first, SimpleLeg other) {$/;"	m	class:SimpleLeg
gizmoColor	Scripts/Agent/Act/LegController.cs	/^		public Color gizmoColor;$/;"	f	class:RusticGames.Act.Leg
go	Scripts/World/Interaction.cs	/^	public GameObject go;$/;"	f	class:GeneralCollider
gravity	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var gravity : float = 10.0;$/;"	v
gravity	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var gravity = 20.0;$/;"	v
gravityMultiplier	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^		public float gravityMultiplier = 1f;                                            \/\/ Changes the way gravity effect the player ( realistic gravity can look bad for jumping in game )$/;"	f	class:FirstPersonCharacter.AdvancedSettings
gravityMultiplier	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	[Range(1,4)] [SerializeField] public float gravityMultiplier = 2;	\/\/ gravity modifier - often higher than natural gravity feels right for game characters$/;"	f	class:ThirdPersonCharacter
groundCheck	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	Transform groundCheck;								\/\/ A position marking where to check if the player is grounded.$/;"	f	class:PlatformerCharacter2D	file:
groundStickyEffect	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^		public float groundStickyEffect = 5f;											\/\/ power of 'stick to ground' effect - prevents bumping down slopes.$/;"	f	class:FirstPersonCharacter.AdvancedSettings
groundStickyEffect	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float groundStickyEffect = 5f;				\/\/ power of 'stick to ground' effect - prevents bumping down slopes.$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
grounded	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	bool grounded = false;								\/\/ Whether or not the player is grounded.$/;"	f	class:PlatformerCharacter2D	file:
grounded	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	public bool grounded { get; private set; }$/;"	p	class:FirstPersonCharacter
groundedDistance	_Local/Assets/Scripts/Jump.cs	/^	public float groundedDistance = 0.00f;$/;"	f	class:Jump
groundedRadius	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	float groundedRadius = .2f;							\/\/ Radius of the overlap circle to determine if grounded$/;"	f	class:PlatformerCharacter2D	file:
grow	Change.cs	/^	void grow ()$/;"	m	class:Change	file:
gui	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected GUITexture gui;                                                     \/\/ The texture used for the joystick$/;"	f	class:JoystickAbstract
gui	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private GUITexture gui;                                                     \/\/ The texture used for the joystick$/;"	f	class:TouchJoystick	file:
guiBoundary	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Rect guiBoundary = new Rect();                                      \/\/ A boundary used for clamping the joystick movement$/;"	f	class:JoystickAbstract
guiBoundary	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private Boundary guiBoundary = new Boundary();                              \/\/ A boundary used for clamping the joystick movement$/;"	f	class:TouchJoystick	file:
guiCenter	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Vector2 guiCenter;                                                  \/\/ center of joystick$/;"	f	class:JoystickAbstract
guiCenter	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private Vector2 guiCenter;                                                  \/\/ center of joystick$/;"	f	class:TouchJoystick	file:
guiStyle	Scripts/GameManagerCollect.cs	/^	private GUIStyle guiStyle;$/;"	f	class:GameManagerCollect	file:
guiTexture	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^    private new GUITexture guiTexture;$/;"	f	class:ButtonDownTextureChange	file:
guiTexture	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	public new GUITexture guiTexture;               	\/\/ reference to the gui texture that will be changed$/;"	f	class:SlowMoButton
guiTouchOffset	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Vector2 guiTouchOffset;                                             \/\/ Offset to apply to touch input$/;"	f	class:JoystickAbstract
guiTouchOffset	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private Vector2 guiTouchOffset;                                             \/\/ Offset to apply to touch input$/;"	f	class:TouchJoystick	file:
half	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	const float half = 0.5f;                                \/\/ whats it says, it's a constant for a half$/;"	f	class:ThirdPersonCharacter	file:
head	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] Transform head;							\/\/ the object to which the head-bob movement should be applied$/;"	f	class:FirstPersonHeadBob	file:
headBobCycle	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float headBobCycle = 0;								\/\/ the current position through the headbob cycle$/;"	f	class:FirstPersonHeadBob	file:
headBobFade	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float headBobFade = 0;								\/\/ the current amount to which the head bob position is being applied or not (it is faded out when the character is not moving)$/;"	f	class:FirstPersonHeadBob	file:
headBobFrequency	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float headBobFrequency = 1.5f;				\/\/ the base speed of the head bobbing (in cycles per metre)$/;"	f	class:FirstPersonHeadBob	file:
headBobHeight	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float headBobHeight = 0.3f;				\/\/ the height range of the head bob$/;"	f	class:FirstPersonHeadBob	file:
headBobSideMovement	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float headBobSideMovement = 0.05f;			\/\/ the distance the head moves to left & right during the bob cycle$/;"	f	class:FirstPersonHeadBob	file:
headBobSwayAngle	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float headBobSwayAngle = 0.5f;				\/\/ the angle which the head tilts to left & right during the bob cycle$/;"	f	class:FirstPersonHeadBob	file:
headLookResponseSpeed	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float headLookResponseSpeed = 2;				\/\/ speed at which head look follows its target$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
height	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var height = 3.0;$/;"	v
heightSmoothLag	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var heightSmoothLag = 0.3;$/;"	v
helper	Scripts/Agent/Act/LegController.cs	/^		public LegState helper;$/;"	f	class:RusticGames.Act.LegsState
highAccel	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    AudioSource highAccel;                                                              \/\/ Source for the high acceleration sounds$/;"	f	class:CarAudio	file:
highAccelClip	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    public AudioClip highAccelClip;                                                     \/\/ Audio clip for high acceleration$/;"	f	class:CarAudio
highDecel	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    AudioSource highDecel;                                                              \/\/ Source for the high deceleration sounds$/;"	f	class:CarAudio	file:
highDecelClip	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    public AudioClip highDecelClip;                                                     \/\/ Audio clip for high deceleration$/;"	f	class:CarAudio
highFrictionMaterial	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^		public PhysicMaterial highFrictionMaterial;                                     \/\/ Material used for high friction ( can stop character sliding down slopes )$/;"	f	class:FirstPersonCharacter.AdvancedSettings
highFrictionMaterial	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public PhysicMaterial highFrictionMaterial;			\/\/ used when stationary to avoid sliding down slopes$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
highPitchMultiplier	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public float highPitchMultiplier = 0.25f;                                           \/\/ Used for altering the pitch of high sounds$/;"	f	class:CarAudio
highResolution	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var highResolution : SerializedProperty;$/;"	v
hinge	Investigator.cs	/^	public HingeJoint2D hinge;$/;"	f	class:Investigator
hingeState	Investigator.cs	/^	public HingeData hingeState;$/;"	f	class:Investigator
hipToKneeTargetAngle	Scripts/Agent/Act/LegController.cs	/^		public float hipToKneeTargetAngle = -45f;$/;"	f	class:RusticGames.Act.LegController
history	Shooter.cs	/^	public History history;$/;"	f	class:Shooter
hit	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private RaycastHit hit;$/;"	f	class:Wheel	file:
hitInfo	Scripts/GUI/HUD.cs	/^	RaycastHit hitInfo = new RaycastHit();$/;"	f	class:HUD	file:
hits	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    private RaycastHit[] hits;                          \/\/ the hits between the camera and the target$/;"	f	class:ProtectCameraFromWallClip	file:
horizontalAxisName	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public string horizontalAxisName = "Horizontal";                            \/\/ The name given to the horizontal axis for the cross platform input$/;"	f	class:JoystickAbstract
horizontalAxisName	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public string horizontalAxisName = "Horizontal";                            \/\/ The name given to the horizontal axis for the cross platform input$/;"	f	class:TouchJoystick
horizontalVirtualAxis	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected CrossPlatformInput.VirtualAxis horizontalVirtualAxis;               \/\/ Reference to the joystick in the cross platform input$/;"	f	class:JoystickAbstract
horizontalVirtualAxis	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private CrossPlatformInput.VirtualAxis horizontalVirtualAxis;               \/\/ Reference to the joystick in the cross platform input$/;"	f	class:TouchJoystick	file:
hoseWaterSystems	Sample Assets/Effects/Particle Systems/scripts/Hose.cs	/^	public ParticleSystem[] hoseWaterSystems;$/;"	f	class:Hose
i	Sample Assets/Utility/WaypointCircuit.cs	/^    private float i;$/;"	f	class:WaypointCircuit	file:
idleTexture	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^    public Texture idleTexture;$/;"	f	class:ButtonDownTextureChange
ignore	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private bool ignore;$/;"	f	class:Wheel	file:
ignoreTimescale	Sample Assets/Utility/AutoMoveAndRotate.cs	/^	public bool ignoreTimescale;$/;"	f	class:AutoMoveAndRotate
immobilized	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	bool immobilized = false;											\/\/ used for making the plane uncontrollable, i.e. if it has been hit or crashed.$/;"	f	class:AeroplaneController	file:
immobilized	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	private bool immobilized;                                                       \/\/ Whether the car is accepting inputs.$/;"	f	class:CarController	file:
inAirControlAcceleration	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var inAirControlAcceleration = 3.0;$/;"	v
include	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public bool include;$/;"	f	struct:UnityEditor.FunctionData
includeEffectsInSize	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	[SerializeField] bool includeEffectsInSize = false;	  \/\/ changing this only takes effect on startup, or when new target is assigned.$/;"	f	class:TargetFieldOfView	file:
inertia	Investigator.cs	/^	public float inertia;$/;"	f	struct:BodyData
infoThisFrame	Scripts/GUI/HUD.cs	/^	ScreenPointToWorldInfo infoThisFrame;$/;"	f	class:HUD	file:
initialAngularVelocity	History.cs	/^	private Vector3 initialAngularVelocity;$/;"	f	class:History	file:
initialLinearVelocity	History.cs	/^	private Vector3 initialLinearVelocity;$/;"	f	class:History	file:
initialPosition	History.cs	/^	private Vector3 initialPosition;$/;"	f	class:History	file:
initialRotation	History.cs	/^	private Quaternion initialRotation;$/;"	f	class:History	file:
input	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	private Vector2 input;$/;"	f	class:FirstPersonCharacter	file:
input	Scripts/InputInterpreter.cs	/^		public KeyCode input;$/;"	f	class:InputInterpreter.SwitchInputMapping
inputMode	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public InputMode inputMode;													\/\/ the type of input mode. (joystick, positional touchpad or swipe touchpad$/;"	f	class:TouchJoystick
insetCamera	Scripts/GUI/HUD.cs	/^	public Camera insetCamera = null;$/;"	f	class:HUD
instance	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	Transform instance;$/;"	f	class:ParticleSceneControls	file:
instructionText	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public string instructionText;$/;"	f	class:ParticleSceneControls.DemoParticleSystem
intentProvider	Scripts/SelectUnits.cs	/^	public IntentPipe intentProvider;$/;"	f	class:SelectUnits
intentSink	Scripts/InputInterpreter.cs	/^	public IntentPipe intentSink;$/;"	f	class:InputInterpreter
intents	Scripts/IntentPipe.cs	/^	public List<ControllerIntent> intents = new List<ControllerIntent>();$/;"	f	class:IntentPipe
interactionGuiText	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public GUIText interactionGuiText;$/;"	f	class:ParticleSceneControls
interpolateTime	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public float interpolateTime = 2f;$/;"	f	class:JoystickAbstract
interpolateTime	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public float interpolateTime = 2f;$/;"	f	class:TouchJoystick
interpolationStep	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var interpolationStep : SerializedProperty;$/;"	v
interpolationStepValues	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var interpolationStepValues : int[] = [32, 16, 8];$/;"	v
interpolationStepValuesStr	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var interpolationStepValuesStr : GUIContent[] = [new GUIContent("32"), new GUIContent("16"), new GUIContent("8")];$/;"	v
interpretationMap	Scripts/SelectUnits.cs	/^ public Dictionary<ControllerIntent, InterpretationDelegate> interpretationMap = new Dictionary<ControllerIntent, InterpretationDelegate>();$/;"	f	class:SelectUnits
invertX	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public bool invertX = false;$/;"	f	class:JoystickAbstract
invertX	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public bool invertX = false;$/;"	f	class:TouchJoystick
invertY	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public bool invertY = false;$/;"	f	class:JoystickAbstract
invertY	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public bool invertY = false;$/;"	f	class:TouchJoystick
is3d	Scripts/World/Interaction.cs	/^	public bool is3d = true;$/;"	f	class:GeneralCollider
isAdvanced	SimpleLeg.cs	/^	public bool isAdvanced() {$/;"	m	class:SimpleLeg
isAdvancedOpposed	SimpleLeg.cs	/^	public bool isAdvancedOpposed() {$/;"	m	class:SimpleLeg
isBig	Change.cs	/^	bool isBig() {$/;"	m	class:Change	file:
isCollectable	Scripts/Collectable.cs	/^	public bool isCollectable = true;$/;"	f	class:Collectable
isFullyLifted	SimpleLeg.cs	/^	public bool isFullyLifted() {$/;"	m	class:SimpleLeg
isFullyLowered	SimpleLeg.cs	/^	public bool isFullyLowered() {$/;"	m	class:SimpleLeg
isJumping	Scripts/World/Mover.cs	/^	bool isJumping = false;$/;"	f	class:Mover	file:
isPastCenterOfMass	SimpleLeg.cs	/^	public bool isPastCenterOfMass() {$/;"	m	class:SimpleLeg
isPastCenterOfMassOpposed	SimpleLeg.cs	/^	public bool isPastCenterOfMassOpposed() {$/;"	m	class:SimpleLeg
isValid	Scripts/GUI/HUD.cs	/^		public bool isValid = false;$/;"	f	class:HUD.ScreenPointToWorldInfo
isVirtual	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public bool isVirtual;$/;"	f	struct:UnityEditor.FunctionData
items	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public DemoParticleSystem[] items;$/;"	f	class:ParticleSceneControls.DemoParticleSystemList
items	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^		public ReplacementDefinition[] items = new ReplacementDefinition[0];$/;"	f	class:AutoMobileShaderSwitch.ReplacementList
items	Sample Assets/Utility/WaypointCircuit.cs	/^		public Transform[] items = new Transform[0];$/;"	f	class:WaypointCircuit.WaypointList
jet	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^    private AeroplaneController jet;                    \/\/ The jet that the particle effect is attached to$/;"	f	class:JetParticleEffect	file:
jointAngle	Investigator.cs	/^	public float jointAngle;$/;"	f	struct:HingeData
jointSpeed	Investigator.cs	/^	public float jointSpeed;$/;"	f	struct:HingeData
jointSpeed	Investigator.cs	/^	public float jointSpeed;$/;"	f	struct:SliderData
jointTranslation	Investigator.cs	/^	public float jointTranslation;$/;"	f	struct:SliderData
joysticks	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected static JoystickAbstract[] joysticks;                                   \/\/ A static collection of all joysticks$/;"	f	class:JoystickAbstract
joysticks	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private static TouchJoystick[] joysticks;                                   \/\/ A static collection of all joysticks$/;"	f	class:TouchJoystick	file:
jump	MovementUtility.cs	/^	public static IEnumerator jump (SimpleLeg legOne, SimpleLeg legTwo)$/;"	m	class:MovementUtility
jump	Sample Assets/2D/Scripts/Platformer2DUserControl.cs	/^    private bool jump;$/;"	f	class:Platformer2DUserControl	file:
jump	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^	bool jump; 								\/\/ whether the jump button is currently pressed$/;"	f	class:BallUserControl	file:
jump	Scripts/World/Mover.cs	/^	public void jump () {		$/;"	m	class:Mover
jump	SimpleLeg.cs	/^	public void jump() {$/;"	m	class:SimpleLeg
jumpDelay	Scripts/World/Mover.cs	/^	public float jumpDelay = 1f;$/;"	f	class:Mover
jumpFactor	SimpleLeg.cs	/^	public float jumpFactor;$/;"	f	class:SimpleLeg
jumpForce	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	[SerializeField] float jumpForce = 400f;			\/\/ Amount of force added when the player jumps.	$/;"	f	class:PlatformerCharacter2D	file:
jumpForce	Scripts/World/Mover.cs	/^	public Vector3 jumpForce = new Vector3(0.0f, 3f, 0f);$/;"	f	class:Mover
jumpHeight	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var jumpHeight = 0.5;$/;"	v
jumpInput	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	bool jumpInput;$/;"	f	class:ThirdPersonCharacter	file:
jumpKeyPressed	MovementUtility.cs	/^	public static bool jumpKeyPressed(bool firstPressedThisFrame) {$/;"	m	class:MovementUtility
jumpLandMove	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float jumpLandMove = 3;$/;"	f	class:FirstPersonHeadBob	file:
jumpLandTilt	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] float jumpLandTilt = 60;$/;"	f	class:FirstPersonHeadBob	file:
jumpMotor	SimpleLeg.cs	/^	JointMotor2D jumpMotor;$/;"	f	class:SimpleLeg	file:
jumpPower	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	[SerializeField] private float jumpPower = 5f;                                      \/\/ The power behind the characters jump. increase for higher jumps$/;"	f	class:FirstPersonCharacter	file:
jumpPower	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	[SerializeField] float jumpPower = 12;								\/\/ determines the jump force applied when jumping (and therefore the jump height)$/;"	f	class:ThirdPersonCharacter	file:
jumpPower	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^    [SerializeField] private float jumpPower = 2;               \/\/ The force added to the ball when it jumps.$/;"	f	class:Ball	file:
jumpPower	_Local/Assets/Scripts/Jump.cs	/^	public float jumpPower = 500.0f;$/;"	f	class:Jump
jumpRayLength	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	private const float jumpRayLength = 0.7f;                                           \/\/ The length of the ray used for testing against the ground when jumping$/;"	f	class:FirstPersonCharacter	file:
jumpRepeatDelayTime	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float jumpRepeatDelayTime = 0.25f;			\/\/ amount of time that must elapse between landing and being able to jump again$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
jumpSound	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] AudioClip jumpSound;				\/\/ the sound played when character leaves the ground.$/;"	f	class:FirstPersonHeadBob	file:
jumping	SimpleWalker.cs	/^	public bool jumping;$/;"	f	class:SimpleWalker
jumping	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^var jumping : CharacterMotorJumping = CharacterMotorJumping();$/;"	v
kBasePath	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kBasePath = "Scripts\/";$/;"	f	class:NewScriptWindow	file:
kButtonWidth	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const int kButtonWidth = 120;$/;"	f	class:NewScriptWindow	file:
kCommentWrapLength	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private const int kCommentWrapLength = 35;$/;"	f	class:UnityEditor.NewScriptGenerator	file:
kCustomEditorClassName	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kCustomEditorClassName = "Editor";$/;"	f	class:NewScriptWindow	file:
kInvalidPathChars	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private char[] kInvalidPathChars = new char[] {'<', '>', ':', '"', '|', '?', '*', (char)0};$/;"	f	class:NewScriptWindow	file:
kLabelWidth	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const int kLabelWidth = 85;$/;"	f	class:NewScriptWindow	file:
kLanguageEditorPrefName	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kLanguageEditorPrefName = "NewScriptLanguage";$/;"	f	class:NewScriptWindow	file:
kMonoBehaviourName	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kMonoBehaviourName = "MonoBehaviour";$/;"	f	class:NewScriptWindow	file:
kNoTemplateString	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kNoTemplateString = "No Template Found";$/;"	f	class:NewScriptWindow	file:
kPathSepChars	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private char[] kPathSepChars = new char[] {'\/', '\\\\'};$/;"	f	class:NewScriptWindow	file:
kPlainClassName	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kPlainClassName = "Empty Class";$/;"	f	class:NewScriptWindow	file:
kResourcesTemplatePath	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kResourcesTemplatePath = kBasePath + "Resources\/SmartScriptTemplates";$/;"	f	class:NewScriptWindow	file:
kTempEditorClassPrefix	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kTempEditorClassPrefix = "E:";$/;"	f	class:NewScriptWindow	file:
kTemplatePath	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private const string kTemplatePath = kBasePath + "CreateScriptDialog\/SmartScriptTemplates";$/;"	f	class:NewScriptWindow	file:
keepOnKeepingOn	Scripts/CoRotator.cs	/^	public bool keepOnKeepingOn = true;$/;"	f	class:CoRotator
keepOnKeepingOn	Scripts/Fader.cs	/^	public bool keepOnKeepingOn = true;$/;"	f	class:Fader
keyChecker	MovementUtility.cs	/^	public delegate bool keyChecker(KeyCode key);$/;"	m	class:MovementUtility
keyMapping	Scripts/InputInterpreter.cs	/^	public Dictionary<KeyCode, ControllerIntent> keyMapping = new Dictionary<KeyCode, ControllerIntent>();$/;"	f	class:InputInterpreter
keyboardConfig	Scripts/World/KeyboardTargeter.cs	/^	public KeyboardConfiguration keyboardConfig;$/;"	f	class:KeyboardTargeter
keyboardConfig	Shooter.cs	/^	public KeyboardConfiguration keyboardConfig;$/;"	f	class:Shooter
kneeToFootTargetAngle	Scripts/Agent/Act/LegController.cs	/^		public float kneeToFootTargetAngle = 0f;$/;"	f	class:RusticGames.Act.LegController
landSound	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	[SerializeField] AudioClip landSound;				\/\/ the sound played when character touches back on ground.$/;"	f	class:FirstPersonHeadBob	file:
lastAirTime	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	float lastAirTime;                                      \/\/ USed for checking when the character was last in the air for controlling jumps$/;"	f	class:ThirdPersonCharacter	file:
lastAngularForce	Scripts/World/Mover.cs	/^	public Vector3 lastAngularForce;$/;"	f	class:Mover
lastFingerId	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected int lastFingerId = -1;                                              \/\/ Finger last used for this joystick$/;"	f	class:JoystickAbstract
lastFingerId	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private int lastFingerId = -1;                                              \/\/ Finger last used for this joystick$/;"	f	class:TouchJoystick	file:
lastFlatAngle	Sample Assets/Cameras/Scripts/AutoCam.cs	/^	private float lastFlatAngle;                            \/\/ The relative angle of the target and the rig from the previous frame.$/;"	f	class:AutoCam	file:
lastGravity	SimpleWalker.cs	/^	public Vector2 lastGravity = Vector2.zero;$/;"	f	class:SimpleWalker
lastHipToKneeAngle	Scripts/Agent/Act/LegController.cs	/^		public string lastHipToKneeAngle;$/;"	f	class:RusticGames.Act.LegController
lastKneeToFootAngle	Scripts/Agent/Act/LegController.cs	/^		public string lastKneeToFootAngle;$/;"	f	class:RusticGames.Act.LegController
lastLinearForce	Scripts/World/KeyboardMover.cs	/^	public Vector3 lastLinearForce;$/;"	f	class:KeyboardMover
lastLinearForce	Scripts/World/Mover.cs	/^	public Vector3 lastLinearForce;$/;"	f	class:Mover
lastOkTime	Sample Assets/Vehicles/Car/Scripts/CarSelfRighting.cs	/^	private float lastOkTime;								\/\/ the last time that the car was in an OK state$/;"	f	class:CarSelfRighting	file:
lastPos	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	Vector3 lastPos;$/;"	f	class:ParticleSceneControls	file:
lastPosition	Sample Assets/Utility/WaypointProgressTracker.cs	/^	private Vector3 lastPosition;			\/\/ Used to calculate current speed (since we may not have a rigidbody component)$/;"	f	class:WaypointProgressTracker	file:
lastPosition	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var lastPosition : Vector3 = tr.position;$/;"	v
lastPressedFrame	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		int lastPressedFrame = -5;$/;"	f	class:CrossPlatformInput.VirtualButton	file:
lastRealTime	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	float lastRealTime;$/;"	f	class:SlowMoButton	file:
lastRealTime	Sample Assets/Utility/AutoMoveAndRotate.cs	/^	float lastRealTime;$/;"	f	class:AutoMoveAndRotate	file:
lastSoundTime	Sample Assets/Effects/Particle Systems/scripts/WaterHoseParticles.cs	/^	public static float lastSoundTime;$/;"	f	class:WaterHoseParticles
lastTarget	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	Transform lastTarget;$/;"	f	class:TargetFieldOfView	file:
lastTargetPosition	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	Vector3 lastTargetPosition;$/;"	f	class:Camera2DFollow	file:
lastTargetPosition	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	protected Vector3 lastTargetPosition;$/;"	f	class:PivotBasedCameraRig
lastTouchPos	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Vector2 lastTouchPos;$/;"	f	class:JoystickAbstract
lastTouchPos	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private Vector2 lastTouchPos;$/;"	f	class:TouchJoystick	file:
lateralWanderDistance	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float lateralWanderDistance = 5;                 \/\/ The amount that the plane can wander by when heading for a target$/;"	f	class:AeroplaneAIControl	file:
lateralWanderDistance	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float lateralWanderDistance = 3f;                       		\/\/ how far the car will wander laterally towards its target$/;"	f	class:CarAIControl	file:
lateralWanderSpeed	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float lateralWanderSpeed = 0.11f;                \/\/ The speed at which the plane will wander laterally$/;"	f	class:AeroplaneAIControl	file:
lateralWanderSpeed	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float lateralWanderSpeed = 0.1f;                       		\/\/ how fast the lateral wandering will fluctuate$/;"	f	class:CarAIControl	file:
leavingSkidTrail	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private bool leavingSkidTrail;$/;"	f	class:Wheel	file:
left	KeyboardConfiguration.cs	/^	public KeyCode left;$/;"	f	class:KeyboardConfiguration
left	SimpleWalker.cs	/^	public bool left;$/;"	f	class:SimpleWalker
legData	SimpleLeg.cs	/^	public LegData legData;$/;"	f	class:SimpleLeg
legData	SimpleWalker.cs	/^	public LegData legData;$/;"	f	class:SimpleWalker
legIntentSetter	SimpleWalker.cs	/^	private IntentionSetter legIntentSetter;$/;"	f	class:SimpleWalker	file:
legIntentToFunction	SimpleWalker.cs	/^	private Dictionary<LegsIntent, LegsFunction> legIntentToFunction;$/;"	f	class:SimpleWalker	file:
legOne	SimpleWalker.cs	/^	public SimpleLeg legOne;$/;"	f	class:SimpleWalker
legPrefab	SimpleWalker.cs	/^	public GameObject legPrefab;$/;"	f	class:SimpleWalker
legState	SimpleLeg.cs	/^	public LEG_STATE legState = LEG_STATE.DEFAULT;$/;"	f	class:SimpleLeg
legTwo	SimpleWalker.cs	/^	public SimpleLeg legTwo;$/;"	f	class:SimpleWalker
level	_Local/Assets/Scripts/GameManager.cs	/^	public GameObject level;$/;"	f	class:GameManager
levelContainer	_Local/Assets/Scripts/GameManager.cs	/^	public GameObject levelContainer;$/;"	f	class:GameManager
levelMap	_Local/Assets/Scripts/Level.cs	/^	public TextAsset levelMap;$/;"	f	class:Level
lift	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float lift = 0.002f;                       \/\/ The amount of lift generated by the aeroplane moving forwards.$/;"	f	class:AeroplaneController	file:
lift	SimpleLeg.cs	/^	public void lift() {$/;"	m	class:SimpleLeg
liftFactor	SimpleLeg.cs	/^	public float liftFactor;$/;"	f	class:SimpleLeg
liftMotor	SimpleLeg.cs	/^	JointMotor2D liftMotor;$/;"	f	class:SimpleLeg	file:
limitState	Investigator.cs	/^	public JointLimitState2D limitState;$/;"	f	struct:HingeData
limitState	Investigator.cs	/^	public JointLimitState2D limitState;$/;"	f	struct:SliderData
lineHeight	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	float lineHeight = 18;$/;"	f	class:ReplacementListDrawer	file:
lineHeight	Sample Assets/Utility/TimedObjectActivator.cs	/^	float lineHeight = 18;$/;"	f	class:EntriesDrawer	file:
lineHeight	Sample Assets/Utility/WaypointCircuit.cs	/^	float lineHeight = 18;$/;"	f	class:WaypointListDrawer	file:
linear	Scripts/World/KeyboardMover.cs	/^	public Vector3 linear;$/;"	f	class:KeyboardMover
linear	Scripts/World/Mover.cs	/^	public Vector3 linear;$/;"	f	class:Mover
linearForceMode	Shover.cs	/^	public ForceMode2D linearForceMode;$/;"	f	class:Shover
loQualDist	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public float loQualDist = 100;$/;"	f	class:Wheel
lockCameraTimeout	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var lockCameraTimeout = 0.2;$/;"	v
lockCursor	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	[SerializeField] private bool lockCursor = false;   \/\/ Whether the cursor should be hidden and locked.$/;"	f	class:FreeLookCam	file:
lockCursor	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	[SerializeField] private bool lockCursor = true;$/;"	f	class:FirstPersonCharacter	file:
logCollision	Scripts/World/Interaction.cs	/^	public void logCollision(GameObject go) {$/;"	m	class:Interaction
logInteraction	Scripts/World/Interaction.cs	/^	public void logInteraction(InteractionResult r, GameObject g) {$/;"	m	class:Interaction
logInteractionCheck	Scripts/World/Interaction.cs	/^	public void logInteractionCheck(InteractorType t) {$/;"	m	class:Interaction
lookAheadFactor	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	public float lookAheadFactor = 3;$/;"	f	class:Camera2DFollow
lookAheadForSpeedFactor	Sample Assets/Utility/WaypointProgressTracker.cs	/^	[SerializeField] float lookAheadForSpeedFactor = .2f;  		\/\/ A multiplier adding distance ahead along the route for speed adjustments$/;"	f	class:WaypointProgressTracker	file:
lookAheadForSpeedOffset	Sample Assets/Utility/WaypointProgressTracker.cs	/^	[SerializeField] float lookAheadForSpeedOffset = 10;		\/\/ The offset ahead only the route for speed adjustments (applied as the rotation of the waypoint target transform)$/;"	f	class:WaypointProgressTracker	file:
lookAheadForTargetFactor	Sample Assets/Utility/WaypointProgressTracker.cs	/^	[SerializeField] float lookAheadForTargetFactor = .1f;      \/\/ A multiplier adding distance ahead along the route to aim for, based on current speed$/;"	f	class:WaypointProgressTracker	file:
lookAheadForTargetOffset	Sample Assets/Utility/WaypointProgressTracker.cs	/^	[SerializeField] float lookAheadForTargetOffset = 5;		\/\/ The offset ahead along the route that the we will aim for$/;"	f	class:WaypointProgressTracker	file:
lookAheadMoveThreshold	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	public float lookAheadMoveThreshold = 0.1f;$/;"	f	class:Camera2DFollow
lookAheadPos	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	Vector3 lookAheadPos;$/;"	f	class:Camera2DFollow	file:
lookAheadReturnSpeed	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	public float lookAheadReturnSpeed = 0.5f;$/;"	f	class:Camera2DFollow
lookAngle	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	private float lookAngle;                            \/\/ The rig's y axis rotation.$/;"	f	class:FreeLookCam	file:
lookInCameraDirection	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	public bool lookInCameraDirection = true;           \/\/ should the character be looking in the same direction that the camera is facing$/;"	f	class:ThirdPersonUserControl
lookPos	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	private Vector3 lookPos;                            \/\/ The position that the character should be looking towards$/;"	f	class:ThirdPersonUserControl	file:
lookTarget	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	public Transform lookTarget { get; set; }               \/\/ The point where the character will be looking at$/;"	p	class:ThirdPersonCharacter
lowAccel	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	AudioSource lowAccel;                                                               \/\/ Source for the low acceleration sounds$/;"	f	class:CarAudio	file:
lowAccelClip	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public AudioClip lowAccelClip;                                                      \/\/ Audio clip for low acceleration$/;"	f	class:CarAudio
lowDecel	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    AudioSource lowDecel;                                                               \/\/ Source for the low deceleration sounds$/;"	f	class:CarAudio	file:
lowDecelClip	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    public AudioClip lowDecelClip;                                                      \/\/ Audio clip for low deceleration$/;"	f	class:CarAudio
lowPitchMax	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public float lowPitchMax = 6f;                                                      \/\/ The highest possible pitch for the low sounds$/;"	f	class:CarAudio
lowPitchMin	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public float lowPitchMin = 1f;                                                      \/\/ The lowest possible pitch for the low sounds$/;"	f	class:CarAudio
lower	SimpleLeg.cs	/^	public void lower() {$/;"	m	class:SimpleLeg
lowerAtAltitude	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	public float lowerAtAltitude = 40;$/;"	f	class:LandingGear
lowerMotor	SimpleLeg.cs	/^	JointMotor2D lowerMotor;$/;"	f	class:SimpleLeg	file:
m_AttenuationCurve	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public AnimationCurve m_AttenuationCurve;$/;"	f	class:LightShafts
m_AttenuationCurveOn	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public bool m_AttenuationCurveOn = false;$/;"	f	class:LightShafts
m_AttenuationCurveTex	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Texture2D m_AttenuationCurveTex;$/;"	f	class:LightShafts	file:
m_BaseClass	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string m_BaseClass;$/;"	f	class:NewScriptWindow	file:
m_Brightness	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_Brightness = 5;$/;"	f	class:LightShafts
m_BrightnessColored	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_BrightnessColored = 5;$/;"	f	class:LightShafts
m_Button	Sample Assets/Cross Platform Input/Scripts/AbstractButton.cs	/^    protected CrossPlatformInput.VirtualButton m_Button;        \/\/ A reference to the button in the cross platform input system$/;"	f	class:AbstractButton
m_Button	Sample Assets/Cross Platform Input/Scripts/Button.cs	/^    private AbstractButton m_Button;$/;"	f	class:Button	file:
m_Button	Sample Assets/Cross Platform Input/Scripts/ButtonDownTextureChange.cs	/^    private Button m_Button;$/;"	f	class:ButtonDownTextureChange	file:
m_Cameras	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Camera[] m_Cameras;$/;"	f	class:LightShafts
m_ClassName	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string m_ClassName = string.Empty;$/;"	f	class:UnityEditor.ScriptPrescription
m_ClearKeyboardControl	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool m_ClearKeyboardControl = false;$/;"	f	class:NewScriptWindow	file:
m_ColorBalance	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_ColorBalance = 1.0f;$/;"	f	class:LightShafts
m_ColorFilter	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_ColorFilter;$/;"	f	class:LightShafts	file:
m_ColorFilterMask	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public LayerMask m_ColorFilterMask = 0;$/;"	f	class:LightShafts
m_ColorFilterShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_ColorFilterShader;$/;"	f	class:LightShafts
m_Colored	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public bool m_Colored = false;$/;"	f	class:LightShafts
m_CoordEpi	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_CoordEpi;$/;"	f	class:LightShafts	file:
m_CoordMaterial	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Material m_CoordMaterial;$/;"	f	class:LightShafts	file:
m_CoordShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_CoordShader;$/;"	f	class:LightShafts
m_CoordsCamera	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Camera m_CoordsCamera;$/;"	f	class:LightShafts	file:
m_CullingMask	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public LayerMask m_CullingMask = ~0;$/;"	f	class:LightShafts
m_CurrentCamera	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Camera m_CurrentCamera;$/;"	f	class:LightShafts
m_CustomEditorTargetClassName	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string m_CustomEditorTargetClassName = string.Empty;$/;"	f	class:NewScriptWindow	file:
m_DX11Support	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	bool m_DX11Support = false;$/;"	f	class:LightShafts	file:
m_DepthBreaksMaterial	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Material m_DepthBreaksMaterial;$/;"	f	class:LightShafts	file:
m_DepthBreaksShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_DepthBreaksShader;$/;"	f	class:LightShafts
m_DepthEpi	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_DepthEpi;$/;"	f	class:LightShafts	file:
m_DepthShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_DepthShader;$/;"	f	class:LightShafts
m_DepthThreshold	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_DepthThreshold = 0.5f;$/;"	f	class:LightShafts
m_Directory	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string m_Directory = string.Empty;$/;"	f	class:NewScriptWindow	file:
m_EpipolarLines	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public int m_EpipolarLines = 256;$/;"	f	class:LightShafts
m_EpipolarSamples	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public int m_EpipolarSamples = 512;$/;"	f	class:LightShafts
m_Extinction	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_Extinction = 0.5f;$/;"	f	class:LightShafts
m_FinalInterpolationMaterial	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Material m_FinalInterpolationMaterial;$/;"	f	class:LightShafts	file:
m_FinalInterpolationShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_FinalInterpolationShader;$/;"	f	class:LightShafts
m_FocusTextFieldNow	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool m_FocusTextFieldNow = true;$/;"	f	class:NewScriptWindow	file:
m_Functions	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public FunctionData[] m_Functions;$/;"	f	class:UnityEditor.ScriptPrescription
m_GameObjectToAddTo	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private GameObject m_GameObjectToAddTo;$/;"	f	class:NewScriptWindow	file:
m_HelpBox	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		public GUIStyle m_HelpBox = new GUIStyle ("helpbox");$/;"	f	class:NewScriptWindow.Styles
m_IndentLevel	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private int m_IndentLevel = 0;$/;"	f	class:UnityEditor.NewScriptGenerator	file:
m_Indentation	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private string m_Indentation;$/;"	f	class:UnityEditor.NewScriptGenerator	file:
m_InterpolateAlongRaysEpi	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_InterpolateAlongRaysEpi;$/;"	f	class:LightShafts	file:
m_InterpolateAlongRaysMaterial	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Material m_InterpolateAlongRaysMaterial;$/;"	f	class:LightShafts	file:
m_InterpolateAlongRaysShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_InterpolateAlongRaysShader;$/;"	f	class:LightShafts
m_InterpolationEpi	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_InterpolationEpi;$/;"	f	class:LightShafts	file:
m_InterpolationStep	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public int m_InterpolationStep = 32;$/;"	f	class:LightShafts
m_IsCustomEditor	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool m_IsCustomEditor = false;$/;"	f	class:NewScriptWindow	file:
m_IsEditorClass	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private bool m_IsEditorClass = false;$/;"	f	class:NewScriptWindow	file:
m_Lang	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public Language m_Lang;$/;"	f	class:UnityEditor.ScriptPrescription
m_LightType	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	LightType m_LightType = LightType.Directional;$/;"	f	class:LightShafts	file:
m_LoweredBox	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		public GUIStyle m_LoweredBox = new GUIStyle ("TextField");$/;"	f	class:NewScriptWindow.Styles
m_MinDistFromCamera	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_MinDistFromCamera = 0.0f;$/;"	f	class:LightShafts
m_MinRequirements	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	bool m_MinRequirements = false;$/;"	f	class:LightShafts	file:
m_OptionsScroll	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private Vector2 m_OptionsScroll;$/;"	f	class:NewScriptWindow	file:
m_Pressed	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^	bool m_Pressed;			\/\/ whether the button is currently pressed$/;"	f	class:TouchButton	file:
m_PreviewBox	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		public GUIStyle m_PreviewBox = new GUIStyle ("OL Box");$/;"	f	class:NewScriptWindow.Styles
m_PreviewScroll	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private Vector2 m_PreviewScroll;$/;"	f	class:NewScriptWindow	file:
m_PreviewTitle	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		public GUIStyle m_PreviewTitle = new GUIStyle ("OL Title");$/;"	f	class:NewScriptWindow.Styles
m_RaymarchMaterial	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Material m_RaymarchMaterial;$/;"	f	class:LightShafts	file:
m_RaymarchShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_RaymarchShader;$/;"	f	class:LightShafts
m_RaymarchedLightEpi	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_RaymarchedLightEpi;$/;"	f	class:LightShafts	file:
m_Rect	Sample Assets/Cross Platform Input/Scripts/AbstractButton.cs	/^    protected Rect m_Rect;                                      \/\/ The zone on screen where the button exists$/;"	f	class:AbstractButton
m_SamplePositions	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_SamplePositions;$/;"	f	class:LightShafts	file:
m_SamplePositionsMaterial	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Material m_SamplePositionsMaterial;$/;"	f	class:LightShafts	file:
m_SamplePositionsShader	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Shader m_SamplePositionsShader;$/;"	f	class:LightShafts
m_ScriptPrescription	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private ScriptPrescription m_ScriptPrescription;$/;"	f	class:UnityEditor.NewScriptGenerator	file:
m_ScriptPrescription	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private ScriptPrescription m_ScriptPrescription;$/;"	f	class:NewScriptWindow	file:
m_Shadowmap	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	RenderTexture m_Shadowmap;$/;"	f	class:LightShafts	file:
m_ShadowmapCamera	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Camera m_ShadowmapCamera;$/;"	f	class:LightShafts	file:
m_ShadowmapDirty	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	bool m_ShadowmapDirty = true;$/;"	f	class:LightShafts	file:
m_ShadowmapMode	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public LightShaftsShadowmapMode m_ShadowmapMode = LightShaftsShadowmapMode.Dynamic;$/;"	f	class:LightShafts
m_ShadowmapModeOld	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	LightShaftsShadowmapMode m_ShadowmapModeOld = LightShaftsShadowmapMode.Dynamic;$/;"	f	class:LightShafts	file:
m_ShadowmapRes	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public int m_ShadowmapRes = 1024;$/;"	f	class:LightShafts
m_ShowInterpolatedSamples	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public bool m_ShowInterpolatedSamples = false;$/;"	f	class:LightShafts
m_ShowSamples	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public bool m_ShowSamples = false;$/;"	f	class:LightShafts
m_ShowSamplesBackgroundFade	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_ShowSamplesBackgroundFade = 0.8f;$/;"	f	class:LightShafts
m_Size	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public Vector3 m_Size = new Vector3(10, 10, 20);$/;"	f	class:LightShafts
m_SpotFar	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_SpotFar = 1.0f;$/;"	f	class:LightShafts
m_SpotMesh	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	Mesh m_SpotMesh;$/;"	f	class:LightShafts	file:
m_SpotMeshAngle	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	float m_SpotMeshAngle = -1;$/;"	f	class:LightShafts	file:
m_SpotMeshFar	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	float m_SpotMeshFar = -1;$/;"	f	class:LightShafts	file:
m_SpotMeshNear	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	float m_SpotMeshNear = -1;$/;"	f	class:LightShafts	file:
m_SpotMeshRange	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	float m_SpotMeshRange = -1;$/;"	f	class:LightShafts	file:
m_SpotNear	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Resources.cs	/^	public float m_SpotNear = 0.1f;$/;"	f	class:LightShafts
m_StringReplacements	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public Dictionary<string, string> m_StringReplacements = new Dictionary<string, string> ();$/;"	f	class:UnityEditor.ScriptPrescription
m_Styles	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private static Styles m_Styles;$/;"	f	class:NewScriptWindow	file:
m_Template	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string m_Template;$/;"	f	class:UnityEditor.ScriptPrescription
m_TemplateIndex	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private int m_TemplateIndex;$/;"	f	class:NewScriptWindow	file:
m_TemplateNames	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^	private string[] m_TemplateNames;$/;"	f	class:NewScriptWindow	file:
m_Text	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private string m_Text;$/;"	f	class:UnityEditor.NewScriptGenerator	file:
m_Value	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		float m_Value;$/;"	f	class:CrossPlatformInput.VirtualAxis	file:
m_WarningContent	Scripts/CreateScriptDialog/Editor/NewScriptWindow.cs	/^		public GUIContent m_WarningContent = new GUIContent (string.Empty, EditorGUIUtility.LoadRequired("Builtin Skins\/Icons\/console.warnicon.sml.png") as Texture2D);$/;"	f	class:NewScriptWindow.Styles
m_Writer	Scripts/CreateScriptDialog/Editor/NewScriptGenerator.cs	/^		private TextWriter m_Writer;$/;"	f	class:UnityEditor.NewScriptGenerator	file:
mainCamera	Scripts/GUI/HUD.cs	/^	public Camera mainCamera;$/;"	f	class:HUD
manualLegs	SimpleWalker.cs	/^	public IEnumerator manualLegs () {$/;"	m	class:SimpleWalker
manualResult	Change.cs	/^	public InteractionResult manualResult = InteractionResult.NONE;$/;"	f	class:Change
mapping	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	public AxisMapping mapping;$/;"	f	class:TiltInput
mass	Investigator.cs	/^	public float mass;$/;"	f	struct:BodyData
matchWithInputManager	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public bool matchWithInputManager { get; private set; }$/;"	p	class:CrossPlatformInput.VirtualAxis
matchWithInputManager	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public bool matchWithInputManager { get; private set; }$/;"	p	class:CrossPlatformInput.VirtualButton
max	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		public Vector2 max  = Vector2.zero;$/;"	f	class:TouchJoystick.Boundary
maxAirAcceleration	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var maxAirAcceleration : float = 20.0;$/;"	v
maxAngularVelocity	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^    [SerializeField] private float maxAngularVelocity = 25;     \/\/ The maximum velocity the ball can rotate at.$/;"	f	class:Ball	file:
maxBackwardsSpeed	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var maxBackwardsSpeed : float = 10.0;$/;"	v
maxBlurSize	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var maxBlurSize : SerializedProperty;$/;"	v
maxClimbAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float maxClimbAngle = 45;                        \/\/ The maximum angle that the AI will attempt to make plane can climb at$/;"	f	class:AeroplaneAIControl	file:
maxCount	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public int maxCount;$/;"	f	class:ParticleSceneControls.DemoParticleSystem
maxDamage	_Local/CurveDisplayTest.cs	/^	public float maxDamage;$/;"	f	class:CurveDisplayTest
maxDuration	Sample Assets/Utility/ParticleSystemDestroyer.cs	/^	public float maxDuration = 10;$/;"	f	class:ParticleSystemDestroyer
maxEnginePower	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float maxEnginePower = 40f;                \/\/ The maximum output of the engine.$/;"	f	class:AeroplaneController	file:
maxFallSpeed	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var maxFallSpeed : float = 20.0;$/;"	v
maxFootAdvanceForce	SimpleLeg.cs	/^	public float maxFootAdvanceForce;$/;"	f	struct:LegData
maxFootAdvanceSpeed	SimpleLeg.cs	/^	public float maxFootAdvanceSpeed;$/;"	f	struct:LegData
maxGroundAcceleration	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var maxGroundAcceleration : float = 30.0;$/;"	v
maxHeight	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public float maxHeight = 1000;$/;"	f	class:DynamicShadowSettings
maxJumpForce	SimpleLeg.cs	/^	public float maxJumpForce;$/;"	f	struct:LegData
maxJumpSpeed	SimpleLeg.cs	/^	public float maxJumpSpeed;$/;"	f	struct:LegData
maxLifetime	Sample Assets/Utility/ParticleSystemDestroyer.cs	/^	float maxLifetime;$/;"	f	class:ParticleSystemDestroyer	file:
maxLiftForce	SimpleLeg.cs	/^	public float maxLiftForce;$/;"	f	struct:LegData
maxLiftSpeed	SimpleLeg.cs	/^	public float maxLiftSpeed;$/;"	f	struct:LegData
maxPitchAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl2Axis.cs	/^	public float maxPitchAngle = 80;$/;"	f	class:AeroplaneUserControl2Axis
maxPitchAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl4Axis.cs	/^	public float maxPitchAngle = 80;$/;"	f	class:AeroplaneUserControl4Axis
maxPower	Sample Assets/Effects/Particle Systems/scripts/Hose.cs	/^	public float maxPower = 20;$/;"	f	class:Hose
maxReversingSpeed	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    private float maxReversingSpeed;                                                \/\/ The maximum reversing speed$/;"	f	class:CarController	file:
maxRollAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float maxRollAngle = 45;                         \/\/ The maximum angle that the AI will attempt to u$/;"	f	class:AeroplaneAIControl	file:
maxRollAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl2Axis.cs	/^	public float maxRollAngle = 80;$/;"	f	class:AeroplaneUserControl2Axis
maxRollAngle	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneUserControl4Axis.cs	/^	public float maxRollAngle = 80;$/;"	f	class:AeroplaneUserControl4Axis
maxRolloffDistance	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public float maxRolloffDistance = 500;                                              \/\/ The maximum distance where rollof starts to take place$/;"	f	class:CarAudio
maxRotationSpeed	Standard Assets/Character Controllers/Sources/Scripts/PlatformInputController.js	/^var maxRotationSpeed : float = 360;$/;"	v
maxRpm	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^    [SerializeField] private float maxRpm = 2000;                                \/\/ The maximum speed the propellor can turn at.$/;"	f	class:AeroplanePropellerAnimator	file:
maxShadowBias	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public float maxShadowBias = 0.1f;$/;"	f	class:DynamicShadowSettings
maxShadowDistance	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public float maxShadowDistance = 10000;$/;"	f	class:DynamicShadowSettings
maxSidewaysSpeed	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var maxSidewaysSpeed : float = 10.0;$/;"	v
maxSize	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	[SerializeField] float maxSize = 4000;$/;"	f	class:Clouds	file:
maxSpeed	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	[SerializeField] float maxSpeed = 10f;				\/\/ The fastest the player can travel in the x axis.$/;"	f	class:PlatformerCharacter2D	file:
maxSpeed	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private float maxSpeed = 60;                                   \/\/ the maximum speed (in meters per second!)$/;"	f	class:CarController	file:
maxSpeed	Scripts/MoveLeftAndRight.cs	/^	public float maxSpeed = 12.0f;$/;"	f	class:MoveLeftAndRight
maxSpeed	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var maxSpeed : float = MaxSpeedInDirection(desiredLocalDirection);$/;"	v
maxSpeedSteerAngle	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] [Range(0, 1)] private float maxSpeedSteerAngle = 0.23f;        \/\/ the reduction in steering angle at max speed$/;"	f	class:CarController	file:
maxSpeedSteerResponse	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] [Range(0, .5f)] private float maxSpeedSteerResponse = 0.5f;    \/\/ the reduction in steer response at max speed$/;"	f	class:CarController	file:
maxSteerAngle	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private float maxSteerAngle = 28;                              \/\/ The maximum angle the car can steer$/;"	f	class:CarController	file:
maxTorque	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private float maxTorque = 35;                                  \/\/ the maximum torque of the engine$/;"	f	class:CarController	file:
maxWalkForce	Scripts/Agent/Act/LegController.cs	/^		public float maxWalkForce;$/;"	f	class:RusticGames.Act.LegController
maxXAndY	Sample Assets/2D/Scripts/CameraFollow.cs	/^	public Vector2 maxXAndY;		\/\/ The maximum x and y coordinates the camera can have.$/;"	f	class:CameraFollow
maximumAngularVelocity	Scripts/World/Mover.cs	/^	public float maximumAngularVelocity = 1.0f;$/;"	f	class:Mover
maximumVelocity	Scripts/World/KeyboardMover.cs	/^	public float maximumVelocity = 10.0f;$/;"	f	class:KeyboardMover
maximumVelocity	Scripts/World/Mover.cs	/^	public float maximumVelocity = 1.0f;$/;"	f	class:Mover
maximumX	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public float maximumX = 360F;$/;"	f	class:MouseLook
maximumY	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public float maximumY = 60F;$/;"	f	class:MouseLook
me	Change.cs	/^	public GameObject me;$/;"	f	class:Change
mesh	Sample Assets/Utility/MeshCombineUtility.cs	/^		public Mesh      mesh;$/;"	f	struct:MeshCombineUtility.MeshInstance
messageTimeout	Scripts/Networking.cs	/^	public int messageTimeout = 5;$/;"	f	class:Networking
min	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^		public Vector2 min  = Vector2.zero;$/;"	f	class:TouchJoystick.Boundary
minColour	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^    public Color minColour;                             \/\/ The base colour for the effect to start at$/;"	f	class:JetParticleEffect
minDamage	_Local/CurveDisplayTest.cs	/^	public float minDamage;$/;"	f	class:CurveDisplayTest
minDist	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public float minDist;$/;"	f	class:ParticleSceneControls.DemoParticleSystem
minDistFromCamera	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var minDistFromCamera : SerializedProperty;$/;"	v
minDuration	Sample Assets/Utility/ParticleSystemDestroyer.cs	/^	public float minDuration = 8;$/;"	f	class:ParticleSystemDestroyer
minGrip	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float minGrip;$/;"	f	class:Wheel	file:
minHeight	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public float minHeight = 10;$/;"	f	class:DynamicShadowSettings
minPower	Sample Assets/Effects/Particle Systems/scripts/Hose.cs	/^	public float minPower = 5;$/;"	f	class:Hose
minShadowBias	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public float minShadowBias = 1;$/;"	f	class:DynamicShadowSettings
minShadowDistance	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public float minShadowDistance = 80;$/;"	f	class:DynamicShadowSettings
minSize	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	[SerializeField] float minSize = 2000;$/;"	f	class:Clouds	file:
minTorque	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private float minTorque = 10;                                  \/\/ the minimum torque of the engine$/;"	f	class:CarController	file:
minXAndY	Sample Assets/2D/Scripts/CameraFollow.cs	/^	public Vector2 minXAndY;		\/\/ The minimum x and y coordinates the camera can have.$/;"	f	class:CameraFollow
minimumAngularOffset	Scripts/World/Mover.cs	/^	public float minimumAngularOffset = 5.0f;$/;"	f	class:Mover
minimumX	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public float minimumX = -360F;$/;"	f	class:MouseLook
minimumY	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public float minimumY = -60F;$/;"	f	class:MouseLook
mobileBuildTargetGroups	Sample Assets/Cross Platform Input/Scripts/Editor/CrossPlatformInputInitialize.cs	/^	static BuildTargetGroup[] mobileBuildTargetGroups = new BuildTargetGroup[]$/;"	f	class:CrossPlatformInitialize	file:
mode	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public Mode mode;$/;"	f	class:ParticleSceneControls.DemoParticleSystem
mode	Scripts/ScaleWithCollection.cs	/^	public Mode mode;$/;"	f	class:ScaleWithCollection
mousePosition	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	public static Vector3 mousePosition$/;"	p	class:CrossPlatformInput
move	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	private Vector3 move;								\/\/ the world-relative desired move direction, calculated from the camForward and user input.$/;"	f	class:ThirdPersonUserControl	file:
move	Sample Assets/Vehicles/Rolling Ball/Scripts/BallUserControl.cs	/^ 	private Vector3 move;					\/\/ the world-relative desired move direction, calculated from the camForward and user input.$/;"	f	class:BallUserControl	file:
moveAction	Goomba.cs	/^	public Move moveAction;$/;"	f	class:Goomba
moveAction	Scripts/MoveLeftAndRight.cs	/^	public Move moveAction;$/;"	f	class:MoveLeftAndRight
moveDirection	Scripts/Agent/Act/Move.cs	/^		public Vector2 moveDirection;$/;"	f	class:RusticGames.Act.Move
moveDistance	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var moveDistance : Vector3 = Vector3.zero;$/;"	v
moveForce	Scripts/Agent/Act/Move.cs	/^		public float moveForce;$/;"	f	class:RusticGames.Act.Move
moveInput	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	Vector3 moveInput;$/;"	f	class:ThirdPersonCharacter	file:
movePower	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^	[SerializeField] private float movePower = 5;               \/\/ The force added to the ball to move it.$/;"	f	class:Ball	file:
moveRoutine	Scripts/Agent/Act/Move.cs	/^		public IEnumerator moveRoutine (GameObject mover)$/;"	m	class:RusticGames.Act.Move
moveRoutine	Scripts/World/KeyboardMover.cs	/^	IEnumerator moveRoutine() {$/;"	m	class:KeyboardMover	file:
moveRoutine	Scripts/World/Mover.cs	/^	IEnumerator moveRoutine() {$/;"	m	class:Mover	file:
moveSpeed	Sample Assets/Cameras/Scripts/AutoCam.cs	/^    [SerializeField] private float moveSpeed = 3;           		\/\/ How fast the rig will move to keep up with target's position$/;"	f	class:AutoCam	file:
moveSpeed	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	[SerializeField] private float moveSpeed = 1f;      \/\/ How fast the rig will move to keep up with the target's position.$/;"	f	class:FreeLookCam	file:
moveSpeedMultiplier	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	[SerializeField][Range(0.1f,3f)] float moveSpeedMultiplier = 1;	    \/\/ how much the move speed of the character will be multiplied by$/;"	f	class:ThirdPersonCharacter	file:
moveStick	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected bool moveStick;                                                     \/\/ whether the stick graphic should move (it shouldn't if it is being used as the touchpad zone)$/;"	f	class:JoystickAbstract
moveStick	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private bool moveStick;                                                     \/\/ whether the stick graphic should move (it shouldn't if it is being used as the touchpad zone)$/;"	f	class:TouchJoystick	file:
moveTarget	Scripts/World/KeyboardTargeter.cs	/^	public Vector3 moveTarget;$/;"	f	class:KeyboardTargeter
moveTarget	Scripts/World/Mover.cs	/^	Vector3 moveTarget;$/;"	f	class:Mover	file:
moveTo	Scripts/World/Mover.cs	/^	public void moveTo (Vector3 target)$/;"	m	class:Mover
moveUnitsPerSecond	Sample Assets/Utility/AutoMoveAndRotate.cs	/^	public Vector3andSpace moveUnitsPerSecond;$/;"	f	class:AutoMoveAndRotate
moveVelocity	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    private float moveVelocity;                         \/\/ the velocity at which the camera moved$/;"	f	class:ProtectCameraFromWallClip	file:
movement	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^var movement : CharacterMotorMovement = CharacterMotorMovement();$/;"	v
movementTransfer	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var movementTransfer : MovementTransferOnJump = MovementTransferOnJump.PermaTransfer;$/;"	v
mover	Scripts/MoveTarget.cs	/^	public GameObject mover;$/;"	f	class:MoveTarget
moverSpeed	Scripts/MoveTarget.cs	/^	public float moverSpeed = 1.0f;$/;"	f	class:MoveTarget
moving	Scripts/Agent/Act/Move.cs	/^		public bool moving = false;$/;"	f	class:RusticGames.Act.Move
movingPlatform	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^var movingPlatform : CharacterMotorMovingPlatform = CharacterMotorMovingPlatform();$/;"	v
movingTurnSpeed	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float movingTurnSpeed = 360;					\/\/ additional turn speed added when the player is moving (added to animation root rotation)$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
multiplier	Sample Assets/Effects/Particle Systems/scripts/ExtinguishableParticleSystem.cs	/^	public float multiplier = 1;$/;"	f	class:ExtinguishableParticleSystem
multiplier	Sample Assets/Effects/Particle Systems/scripts/ParticleSystemMultiplier.cs	/^	public float multiplier = 1;$/;"	f	class:ParticleSystemMultiplier
multiply	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public float multiply = 1;$/;"	f	class:ParticleSceneControls
name	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public string name {get; private set;}$/;"	p	class:CrossPlatformInput.VirtualAxis
name	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		public string name {get; private set;}$/;"	p	class:CrossPlatformInput.VirtualButton
name	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string name;$/;"	f	struct:UnityEditor.FunctionData
name	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string name;$/;"	f	struct:UnityEditor.ParameterData
near	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var near : SerializedProperty;$/;"	v
nearBlur	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var nearBlur : SerializedProperty; $/;"	v
nearClipPlane	Scripts/GUI/CameraSettings.cs	/^	public float nearClipPlane = 0.3f;$/;"	f	class:CameraSettings
newLocation	OneWayFollow.cs	/^	public Vector3 newLocation;$/;"	f	class:OneWayFollow
newTarget	OneWayFollow.cs	/^	GameObject newTarget;$/;"	f	class:OneWayFollow	file:
newTargetOffset	Scripts/World/KeyboardTargeter.cs	/^	public Vector3 newTargetOffset;$/;"	f	class:KeyboardTargeter
nextStepTime	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float nextStepTime = 0.5f;									\/\/ the time at which the next footstep sound is due to occur$/;"	f	class:FirstPersonHeadBob	file:
noiseScale	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	[SerializeField] float noiseScale = 0.0003f;$/;"	f	class:Clouds	file:
normalize	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public bool normalize;                                                      \/\/ Toggle for normalising the input from the joystick$/;"	f	class:JoystickAbstract
normalize	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    public bool normalize;                                                      \/\/ Toggle for normalising the input from the joystick$/;"	f	class:TouchJoystick
numDebrisPieces	Sample Assets/Effects/Particle Systems/scripts/ExplosionFireAndDebris.cs	/^	public int numDebrisPieces = 0;$/;"	f	class:ExplosionFireAndDebris
numFires	Sample Assets/Effects/Particle Systems/scripts/ExplosionFireAndDebris.cs	/^	public int numFires = 0;$/;"	f	class:ExplosionFireAndDebris
numGears	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        public int numGears = 5;                                                    \/\/ the number of gears$/;"	f	class:CarController.Advanced
numPoints	Sample Assets/Utility/WaypointCircuit.cs	/^	int numPoints;$/;"	f	class:WaypointCircuit	file:
numberOfObjects	Scripts/SpawnObjects.cs	/^	public int numberOfObjects = 5;$/;"	f	class:SpawnObjects
objectAtPoint	Scripts/GUI/HUD.cs	/^		public GameObject objectAtPoint;$/;"	f	class:HUD.ScreenPointToWorldInfo
objectName	_Local/Assets/Scripts/Player.cs	/^		public string objectName;$/;"	f	struct:Player.CollisionData
objectToReach	Scripts/GoalConditions/ReachObject.cs	/^	public GameObject objectToReach;$/;"	f	class:ReachObject
objects	Sample Assets/Utility/SimpleActivatorMenu.cs	/^	public GameObject[] objects;$/;"	f	class:SimpleActivatorMenu
offset	Sample Assets/Utility/FollowTarget.cs	/^	public Vector3 offset = new Vector3(0f, 7.5f, 0f);$/;"	f	class:FollowTarget
offset	Sample Assets/Vehicles/Car/Scripts/Mudguard.cs	/^	Vector3 offset;$/;"	f	class:Mudguard	file:
offsetZ	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	float offsetZ;$/;"	f	class:Camera2DFollow	file:
onGround	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	bool onGround;                                          \/\/ Is the character on the ground$/;"	f	class:ThirdPersonCharacter	file:
opposedMotor	Scripts/Agent/Act/LegController.cs	/^		public JointMotor2D opposedMotor;$/;"	f	class:RusticGames.Act.LegController
oppositeLockSteeringCorrection	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^		public float oppositeLockSteeringCorrection = 4f;                           \/\/ How fast the steering responds when steer input is in the opposite direction to the current wheel angle$/;"	f	class:CarController.Advanced
original	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^		public Shader original = null;$/;"	f	class:AutoMobileShaderSwitch.ReplacementDefinition
originalAngularDrag	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    private float originalAngularDrag;                                  \/\/ The angular drag when the scene starts.$/;"	f	class:AeroplaneController	file:
originalDist	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	private float originalDist;                         \/\/ the original distance to the camera before any modification are made$/;"	f	class:ProtectCameraFromWallClip	file:
originalDrag	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^	private float originalDrag;                                         \/\/ The drag when the scene starts.$/;"	f	class:AeroplaneController	file:
originalHeight	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	float originalHeight;                                   \/\/ Used for tracking the original height of the characters capsule collider$/;"	f	class:ThirdPersonCharacter	file:
originalLifetime	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^	private float originalLifetime;                     \/\/ The original lifetime of the particle system$/;"	f	class:JetParticleEffect	file:
originalLocalPos	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	Vector3 originalLocalPos;							\/\/ the original local position of this gameobject at Start$/;"	f	class:FirstPersonHeadBob	file:
originalLocalRotation	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^        public Quaternion originalLocalRotation;        \/\/ The rotation of the surface at the start.$/;"	f	class:AeroplaneControlSurfaceAnimator.ControlSurface
originalPosition	Sample Assets/Utility/ObjectResetter.cs	/^	Vector3 originalPosition;$/;"	f	class:ObjectResetter	file:
originalPosition	Sample Assets/Vehicles/Car/Scripts/Suspension.cs	/^	private Vector3 originalPosition;$/;"	f	class:Suspension	file:
originalRotation	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^	Quaternion originalRotation;$/;"	f	class:LookatTarget	file:
originalRotation	Sample Assets/Utility/ObjectResetter.cs	/^	Quaternion originalRotation;$/;"	f	class:ObjectResetter	file:
originalRotation	Sample Assets/Utility/SimpleMouseRotator.cs	/^	Quaternion originalRotation;$/;"	f	class:SimpleMouseRotator	file:
originalRotation	Sample Assets/Vehicles/Car/Scripts/Mudguard.cs	/^	Quaternion originalRotation;$/;"	f	class:Mudguard	file:
originalStartColor	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^	private Color originalStartColor;                   \/\/ The original starting colout of the particle system$/;"	f	class:JetParticleEffect	file:
originalStartSize	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^	private float originalStartSize;                    \/\/ The original starting size of the particle system$/;"	f	class:JetParticleEffect	file:
originalStrength	Sample Assets/Utility/DynamicShadowSettings.cs	/^	float originalStrength = 1;$/;"	f	class:DynamicShadowSettings	file:
originalStructure	Sample Assets/Utility/ObjectResetter.cs	/^	List<Transform> originalStructure;$/;"	f	class:ObjectResetter	file:
originalWheelModelPosition	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^	private Vector3 originalWheelModelPosition;$/;"	f	class:Wheel	file:
orthographicSize	Scripts/GUI/CameraSettings.cs	/^	public float orthographicSize = 5f;$/;"	f	class:CameraSettings
othographic	Scripts/GUI/CameraSettings.cs	/^	public bool othographic = false;$/;"	f	class:CameraSettings
output	Scripts/InputInterpreter.cs	/^		public ControllerIntent output;$/;"	f	class:InputInterpreter.SwitchInputMapping
overrideAngular	Scripts/World/Mover.cs	/^	public bool overrideAngular = false;$/;"	f	class:Mover
overrideLinear	Scripts/World/KeyboardMover.cs	/^	public bool overrideLinear = false;$/;"	f	class:KeyboardMover
overrideLinear	Scripts/World/Mover.cs	/^	public bool overrideLinear = false;$/;"	f	class:Mover
owner	Scripts/Agent/Act/LegController.cs	/^		public Move owner;$/;"	f	class:RusticGames.Act.LegController
p0n	Sample Assets/Utility/WaypointCircuit.cs	/^    int p0n;$/;"	f	class:WaypointCircuit	file:
p1n	Sample Assets/Utility/WaypointCircuit.cs	/^    int p1n;$/;"	f	class:WaypointCircuit	file:
p2n	Sample Assets/Utility/WaypointCircuit.cs	/^    int p2n;$/;"	f	class:WaypointCircuit	file:
p3n	Sample Assets/Utility/WaypointCircuit.cs	/^    int p3n;$/;"	f	class:WaypointCircuit	file:
pairedWith	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	private AxisTouchButton pairedWith;                      \/\/ Which button this one is paired with$/;"	f	class:AxisTouchButton	file:
pairedWithInputManager	Sample Assets/Cross Platform Input/Scripts/Button.cs	/^    public bool pairedWithInputManager;$/;"	f	class:Button
parameters	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public ParameterData[] parameters;$/;"	f	struct:UnityEditor.FunctionData
parentTransform	Scripts/GUI/CameraSettings.cs	/^	public Transform parentTransform = null;$/;"	f	class:CameraSettings
particleEmit	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float particleEmit;$/;"	f	class:Wheel	file:
particleMultiplier	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	ParticleSystemMultiplier particleMultiplier;$/;"	f	class:ParticleSceneControls	file:
particleRate	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float particleRate = 3;$/;"	f	class:Wheel	file:
pauseOnStateChange	Scripts/Agent/Act/LegController.cs	/^		public bool pauseOnStateChange;$/;"	f	class:RusticGames.Act.LegsState
paused	Scripts/TimeManagement.cs	/^	public bool paused = false;$/;"	f	class:TimeManagement
perpAmount	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var perpAmount : float = 0.0;$/;"	v
persistTime	Sample Assets/Vehicles/Car/Scripts/SkidTrail.cs	/^	[SerializeField] float persistTime;     \/\/ the amount of time for the skid trail to persist$/;"	f	class:SkidTrail	file:
pitchEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float pitchEffect = 1f;                    \/\/ The strength of effect for pitch input.$/;"	f	class:AeroplaneController	file:
pitchMultiplier	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public float pitchMultiplier = 1f;                                                  \/\/ Used for altering the pitch of audio clips$/;"	f	class:CarAudio
pitchSensitivity	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float pitchSensitivity = .5f;                    \/\/ How sensitively the AI applies the pitch controls$/;"	f	class:AeroplaneAIControl	file:
pivot	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	protected Transform pivot;                            \/\/ the point at which the camera pivots around$/;"	f	class:PivotBasedCameraRig
pivot	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	private Transform pivot;                            \/\/ the point at which the camera pivots around$/;"	f	class:ProtectCameraFromWallClip	file:
plane	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^    private AeroplaneController plane;                                  \/\/ Reference to the aeroplane controller.$/;"	f	class:AeroplaneAudio	file:
plane	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^    private AeroplaneController plane;                              \/\/ Reference to the aeroplane controller.$/;"	f	class:AeroplaneControlSurfaceAnimator	file:
plane	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneGUI.cs	/^    public AeroplaneController plane;           \/\/ Reference to the aeroplane controller.$/;"	f	class:AeroplaneGUI
plane	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^	private AeroplaneController plane;              \/\/ Reference to the aeroplane controller.$/;"	f	class:AeroplanePropellerAnimator	file:
plane	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	AeroplaneController plane;$/;"	f	class:LandingGear	file:
player	Sample Assets/2D/Scripts/CameraFollow.cs	/^	private Transform player;		\/\/ Reference to the player's transform.$/;"	f	class:CameraFollow	file:
player1	Scripts/GameManagerCollect.cs	/^	private GameObject player1;$/;"	f	class:GameManagerCollect	file:
player1Score	Scripts/GameManagerCollect.cs	/^	private int player1Score;$/;"	f	class:GameManagerCollect	file:
player2	Scripts/GameManagerCollect.cs	/^	private GameObject player2;$/;"	f	class:GameManagerCollect	file:
player2Score	Scripts/GameManagerCollect.cs	/^	private int player2Score;$/;"	f	class:GameManagerCollect	file:
pointToPointThreshold	Sample Assets/Utility/WaypointProgressTracker.cs	/^	[SerializeField] float pointToPointThreshold = 4;  \/\/ proximity to waypoint which must be reached to switch target to next waypoint : only used in PointToPoint mode.$/;"	f	class:WaypointProgressTracker	file:
points	Sample Assets/Utility/WaypointCircuit.cs	/^	Vector3[] points;$/;"	f	class:WaypointCircuit	file:
port	Scripts/Networking.cs	/^	public int port = 9090;$/;"	f	class:Networking
position	Investigator.cs	/^	public Vector2 position;$/;"	f	struct:BodyData
position	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Vector2 position;                                                   \/\/ The position on screen of the joystick$/;"	f	class:JoystickAbstract
position	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private Vector2 position;                                                   \/\/ The position on screen of the joystick$/;"	f	class:TouchJoystick	file:
position	Sample Assets/Utility/WaypointCircuit.cs	/^		public Vector3 position;$/;"	f	struct:WaypointCircuit.RoutePoint
position	Scripts/GUI/CameraSettings.cs	/^	public Vector3 position;$/;"	f	class:CameraSettings
positionDifference	OneWayFollow.cs	/^	public Vector3 positionDifference;$/;"	f	class:OneWayFollow
power	Sample Assets/Effects/Particle Systems/scripts/Hose.cs	/^	float power;$/;"	f	class:Hose	file:
powered	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public bool powered = false;$/;"	f	class:Wheel
preserveDirectionWhileInAir	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	[SerializeField] bool preserveDirectionWhileInAir = false;                      \/\/ flag for if the direction of travel to be preserved in the air (helps cars land in the right direction if doing huge jumps!)$/;"	f	class:CarController	file:
pressed	Sample Assets/Cross Platform Input/Scripts/ButtonFactory.cs	/^	private bool pressed;$/;"	f	class:ClickButton	file:
pressed	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^		bool pressed;$/;"	f	class:CrossPlatformInput.VirtualButton	file:
pressedThisFrame	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^    private bool pressedThisFrame;                          \/\/ Was the button pressed this frame$/;"	f	class:AxisTouchButton	file:
prevGrounded	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	bool prevGrounded = true;							\/\/ whether the character was grounded last frame$/;"	f	class:FirstPersonHeadBob	file:
prevPosition	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	Vector3 prevPosition;								\/\/ the position from last frame$/;"	f	class:FirstPersonHeadBob	file:
prevVelocity	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	Vector3 prevVelocity = Vector3.zero;				\/\/ the velocity from last frame$/;"	f	class:FirstPersonHeadBob	file:
processChanges	Change.cs	/^	IEnumerator processChanges ()$/;"	m	class:Change	file:
processCollision	Scripts/World/Interaction.cs	/^	void processCollision (InteractorType x, GeneralCollider gc)$/;"	m	class:Interaction	file:
processCollisions	Scripts/World/Interaction.cs	/^	void processCollisions (Composition c, GeneralCollider gc)$/;"	m	class:Interaction	file:
progressDistance	Sample Assets/Utility/WaypointProgressTracker.cs	/^	private float progressDistance;			\/\/ The progress round the route, used in smooth mode.$/;"	f	class:WaypointProgressTracker	file:
progressNum	Sample Assets/Utility/WaypointProgressTracker.cs	/^	private int progressNum;				\/\/ the current waypoint number, used in point-to-point mode.$/;"	f	class:WaypointProgressTracker	file:
progressPoint	Sample Assets/Utility/WaypointProgressTracker.cs	/^	public WaypointCircuit.RoutePoint progressPoint { get; private set; }$/;"	p	class:WaypointProgressTracker
progressStyle	Sample Assets/Utility/WaypointProgressTracker.cs	/^	[SerializeField] ProgressStyle progressStyle = ProgressStyle.SmoothAlongRoute; \/\/ whether to update the position smoothly along the route (good for curved paths) or just when we reach each waypoint.$/;"	f	class:WaypointProgressTracker	file:
projectileForceSource	Scripts/World/Mover.cs	/^	public Mechanism projectileForceSource;$/;"	f	class:Mover
projectilePrefab	Scripts/World/Mover.cs	/^	public GameObject projectilePrefab;$/;"	f	class:Mover
projectilePrefab	Shooter.cs	/^	public GameObject projectilePrefab;$/;"	f	class:Shooter
projectileSpeed	Scripts/World/Mover.cs	/^	float projectileSpeed = 20f;$/;"	f	class:Mover	file:
projectileSpeed	Shooter.cs	/^	public float projectileSpeed = 20.0f;$/;"	f	class:Shooter
propellorBlur	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^    [SerializeField] private Transform propellorBlur;                 \/\/ The plane used for the blurred propellor textures.$/;"	f	class:AeroplanePropellerAnimator	file:
propellorBlurState	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^	private int propellorBlurState = -1;            \/\/ To store the state of the blurred textures.$/;"	f	class:AeroplanePropellerAnimator	file:
propellorBlurTextures	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^    [SerializeField] private Texture2D[] propellorBlurTextures;       \/\/ An array of increasingly blurred propellor textures.$/;"	f	class:AeroplanePropellerAnimator	file:
propellorModel	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^    [SerializeField] private Transform propellorModel;                \/\/ The model of the the aeroplane's propellor.$/;"	f	class:AeroplanePropellerAnimator	file:
protecting	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    public bool protecting { get; private set; }        \/\/ used for determining if there is an object between the target and the camera$/;"	p	class:ProtectCameraFromWallClip
pushDownOffset	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var pushDownOffset : float = Mathf.Max(controller.stepOffset, Vector3(currentMovementOffset.x, 0, currentMovementOffset.z).magnitude);$/;"	v
r	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	float r;$/;"	f	class:AfterburnerPhysicsForce	file:
raiseAtAltitude	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	public float raiseAtAltitude = 40;$/;"	f	class:LandingGear
randomDamage	_Local/CurveDisplayTest.cs	/^	public float randomDamage {$/;"	p	class:CurveDisplayTest
randomPerlin	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	private float randomPerlin;                                \/\/ Used for generating random point on perlin noise so that the plane will wander off path slightly$/;"	f	class:AeroplaneAIControl	file:
randomPerlin	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	float randomPerlin;             \/\/ A random value for the car to base its wander on (so that AI cars don't all wander in the same pattern)$/;"	f	class:CarAIControl	file:
ray	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    private Ray ray;                                    \/\/ the ray used in the lateupdate for casting between the camera and the target$/;"	f	class:ProtectCameraFromWallClip	file:
ray	Scripts/GUI/HUD.cs	/^	Ray ray = new Ray();$/;"	f	class:HUD	file:
rayHitComparer	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    private RayHitComparer rayHitComparer;              \/\/ variable to compare raycast hit distances$/;"	f	class:ProtectCameraFromWallClip	file:
rayHitComparer	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	private IComparer rayHitComparer;$/;"	f	class:FirstPersonCharacter	file:
rayHitComparer	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	IComparer rayHitComparer;$/;"	f	class:ThirdPersonCharacter	file:
rb	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private Rigidbody rb;$/;"	f	class:Wheel	file:
reachTargetThreshold	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float reachTargetThreshold = 2;    							\/\/ proximity to target to consider we 'reached' it, and stop driving.$/;"	f	class:CarAIControl	file:
reaction	Scripts/World/Interaction.cs	/^	public InteractionResult reaction;$/;"	f	class:InteractionResultMapping
reactionForceForNextTenthOfASecond	Investigator.cs	/^	public Vector2 reactionForceForNextTenthOfASecond;$/;"	f	struct:HingeData
reactionForceForNextTenthOfASecond	Investigator.cs	/^	public Vector2 reactionForceForNextTenthOfASecond;$/;"	f	struct:SliderData
reactionTorqueForNextTenthOfASecond	Investigator.cs	/^	public float reactionTorqueForNextTenthOfASecond;$/;"	f	struct:HingeData
reactionTorqueForNextTenthOfASecond	Investigator.cs	/^	public float reactionTorqueForNextTenthOfASecond;$/;"	f	struct:SliderData
reactions	Scripts/World/Interaction.cs	/^	public List<InteractionResultMapping> reactions = new List<InteractionResultMapping>();$/;"	f	class:Interaction
readManualChange	Change.cs	/^	public bool readManualChange;$/;"	f	class:Change
rect	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	private Rect rect;                                      \/\/ The rect of the gui element on screen$/;"	f	class:AxisTouchButton	file:
referenceAngle	Investigator.cs	/^	public float referenceAngle;$/;"	f	struct:HingeData
referenceAngle	Investigator.cs	/^	public float referenceAngle;$/;"	f	struct:SliderData
relative	Sample Assets/Utility/SimpleMouseRotator.cs	/^	public bool relative = true;$/;"	f	class:SimpleMouseRotator
relativeAngular	Scripts/World/Mover.cs	/^	public bool relativeAngular = false;$/;"	f	class:Mover
relativeLinear	Scripts/World/KeyboardMover.cs	/^	public bool relativeLinear = false;$/;"	f	class:KeyboardMover
relativeLinear	Scripts/World/Mover.cs	/^	public bool relativeLinear = false;$/;"	f	class:Mover
relativeSensitivity	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public bool relativeSensitivity;$/;"	f	class:TouchJoystick
relativeVelocity	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private Vector3 relativeVelocity;$/;"	f	class:Wheel	file:
relax	MovementUtility.cs	/^	public static IEnumerator relax (SimpleLeg legOne, SimpleLeg legTwo)$/;"	m	class:MovementUtility
relaxFoot	SimpleLeg.cs	/^	public void relaxFoot () {$/;"	m	class:SimpleLeg
relaxThigh	SimpleLeg.cs	/^	public void relaxThigh () {$/;"	m	class:SimpleLeg
releasedFrame	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	    private int releasedFrame = -5;$/;"	f	class:CrossPlatformInput.VirtualButton	file:
repeatTrigger	Sample Assets/Utility/ActivateTrigger.cs	/^	public bool repeatTrigger = false;$/;"	f	class:ActivateTrigger
replacement	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^		public Shader replacement = null;$/;"	f	class:AutoMobileShaderSwitch.ReplacementDefinition
replacements	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	[SerializeField] ReplacementList replacements;$/;"	f	class:AutoMobileShaderSwitch	file:
requireGround	_Local/Assets/Scripts/Jump.cs	/^	public bool requireGround = true;$/;"	f	class:Jump
reset	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	public bool reset = true;$/;"	f	class:Explosive
resetList	Resetter.cs	/^	public List<History> resetList = new List<History>();$/;"	f	class:Resetter
resetTimeDelay	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	public float resetTimeDelay = 10;$/;"	f	class:Explosive
responseSpeed	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	public float responseSpeed = 3;                         \/\/ The speed at which the axis touch button responds$/;"	f	class:AxisTouchButton
results	Change.cs	/^	private HashSet<InteractionResult> results = new HashSet<InteractionResult>();$/;"	f	class:Change	file:
retractMotor	SimpleLeg.cs	/^	JointMotor2D retractMotor;$/;"	f	class:SimpleLeg	file:
returnDefault	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string returnDefault;$/;"	f	struct:UnityEditor.FunctionData
returnTime	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^    public float returnTime = 0.4f;                     \/\/ time taken to move back towards desired position, when not clipping (typically should be a higher value than clipMoveTime)$/;"	f	class:ProtectCameraFromWallClip
returnToCentreSpeed	Sample Assets/Cross Platform Input/Scripts/AxisTouchButton.cs	/^	public float returnToCentreSpeed = 3;                   \/\/ The speed at which the button will return to its centre$/;"	f	class:AxisTouchButton
returnType	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string returnType;$/;"	f	struct:UnityEditor.FunctionData
revRangeBoundary	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        [Range(0,1)]public float revRangeBoundary = 0.8f;                           \/\/ The amount of the full rev range used in each gear.$/;"	f	class:CarController.Advanced
reversing	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	bool reversing;$/;"	f	class:CarController	file:
reversingSpeedFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        public float reversingSpeedFactor = 0.3f;                                   \/\/ The car's maximum reverse speed, as a proportion of its max forward speed.$/;"	f	class:CarController.Advanced
right	KeyboardConfiguration.cs	/^	public KeyCode right;$/;"	f	class:KeyboardConfiguration
rnd	Sample Assets/Effects/Particle Systems/scripts/FireLight.cs	/^	float rnd;$/;"	f	class:FireLight	file:
rollEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float rollEffect = 1f;                     \/\/ The strength of effect for roll input.$/;"	f	class:AeroplaneController	file:
rollSensitivity	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float rollSensitivity = .2f;                     \/\/ How sensitively the AI applies the roll controls$/;"	f	class:AeroplaneAIControl	file:
rollSpeed	Sample Assets/Cameras/Scripts/AutoCam.cs	/^    [SerializeField] private float rollSpeed = 0.2f;        		\/\/ How fast the rig will roll (around Z axis) to match target's roll.$/;"	f	class:AutoCam	file:
rollUp	Sample Assets/Cameras/Scripts/AutoCam.cs	/^	private Vector3 rollUp = Vector3.up;                    \/\/ The roll of the camera around the z axis ( generally this will always just be up )$/;"	f	class:AutoCam	file:
root	Scripts/Agent/Act/LegController.cs	/^		public GameObject root;$/;"	f	class:RusticGames.Act.Leg
rootJoint	Scripts/Agent/Act/LegController.cs	/^		public SliderJoint2D rootJoint;$/;"	f	class:RusticGames.Act.Leg
rootToBend	Scripts/Agent/Act/LegController.cs	/^		public HingeJoint2D rootToBend;$/;"	f	class:RusticGames.Act.Leg
rotate	Scripts/CoRotator.cs	/^	IEnumerator rotate () {$/;"	m	class:CoRotator	file:
rotateDegreesPerSecond	Sample Assets/Utility/AutoMoveAndRotate.cs	/^	public Vector3andSpace rotateDegreesPerSecond;$/;"	f	class:AutoMoveAndRotate
rotateSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var rotateSpeed = 500.0;$/;"	v
rotation	Investigator.cs	/^	public float rotation;$/;"	f	struct:BodyData
rotation	Scripts/GUI/CameraSettings.cs	/^	public Vector3 rotation;$/;"	f	class:CameraSettings
rotationRange	Sample Assets/Cameras/Scripts/LookatTarget.cs	/^	[SerializeField] Vector2 rotationRange; $/;"	f	class:LookatTarget	file:
rotationRange	Sample Assets/Utility/SimpleMouseRotator.cs	/^	public Vector2 rotationRange = new Vector3(70,70); $/;"	f	class:SimpleMouseRotator
rotationRates	Scripts/CoRotator.cs	/^	public Vector3 rotationRates;$/;"	f	class:CoRotator
rotationSpeed	Sample Assets/Utility/SimpleMouseRotator.cs	/^	public float rotationSpeed = 10;$/;"	f	class:SimpleMouseRotator
rotationY	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	float rotationY = 0F;$/;"	f	class:MouseLook	file:
runCycleLegOffset	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float runCycleLegOffset = 0.2f;				\/\/ animation cycle offset (0-1) used for determining correct leg to jump off$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
runSpeed	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	[SerializeField] private float runSpeed = 8f;                                       \/\/ The speed at which we want the character to move$/;"	f	class:FirstPersonCharacter	file:
runSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var runSpeed = 6.0;$/;"	v
scaleFactor	Scripts/ScaleWithCollection.cs	/^	public float scaleFactor = 1.0f;$/;"	f	class:ScaleWithCollection
screenFader	_Local/Assets/Scripts/GameManager.cs	/^	public GameObject screenFader;$/;"	f	class:GameManager
screenRect	Scripts/GUI/GUIBox.cs	/^	private Rect screenRect;$/;"	f	class:GUIBox	file:
selectBox	Scripts/MouseSelector.cs	/^	public List<GameObject> selectBox (Vector3 startPoint, Vector3 endPoint){$/;"	m	class:MouseSelector
selectBoxDelay	Scripts/MouseSelector.cs	/^	public float selectBoxDelay = 0.2f; \/\/TODO: add distance delay as well$/;"	f	class:MouseSelector
selectPoint	Scripts/MouseSelector.cs	/^	public List<GameObject> selectPoint (Vector3 point){$/;"	m	class:MouseSelector
selected	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	static DemoParticleSystem selected;$/;"	f	class:ParticleSceneControls	file:
selectedIndex	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	static int selectedIndex = 0;$/;"	f	class:ParticleSceneControls	file:
selectedObject	Scripts/MouseSelector.cs	/^	public GameObject selectedObject;$/;"	f	class:MouseSelector
selectedUnits	Scripts/SelectUnits.cs	/^	public List<GameObject> selectedUnits = new List<GameObject>();$/;"	f	class:SelectUnits
selector	Scripts/SelectUnits.cs	/^	public MouseSelector selector;$/;"	f	class:SelectUnits
sensitivity	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public float sensitivity = 1f;$/;"	f	class:JoystickAbstract
sensitivity	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public float sensitivity = 1f;$/;"	f	class:TouchJoystick
sensitivityRelativeTo	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public SensitivityRelativeTo sensitivityRelativeTo;$/;"	f	class:TouchJoystick
sensitivityRelativeTo	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    public SensitivityRelativeTo sensitivityRelativeTo;$/;"	f	class:TouchPad
sensitivityRelativeX	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private float sensitivityRelativeX;$/;"	f	class:TouchJoystick	file:
sensitivityRelativeX	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    protected float sensitivityRelativeX;$/;"	f	class:TouchPad
sensitivityRelativeY	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private float sensitivityRelativeY;$/;"	f	class:TouchJoystick	file:
sensitivityRelativeY	Sample Assets/Cross Platform Input/Scripts/TouchPad.cs	/^    protected float sensitivityRelativeY;$/;"	f	class:TouchPad
sensitivityX	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public float sensitivityX = 15F;$/;"	f	class:MouseLook
sensitivityY	Standard Assets/Character Controllers/Sources/Scripts/MouseLook.cs	/^	public float sensitivityY = 15F;$/;"	f	class:MouseLook
serverAddress	Scripts/Networking.cs	/^	public string serverAddress;$/;"	f	class:Networking
setMotor	Scripts/Agent/Act/LegController.cs	/^		public JointMotor2D setMotor;$/;"	f	class:RusticGames.Act.LegController
setTargetOn	Sample Assets/Sample Scenes/Scripts/PlaceTargetWithMouse.cs	/^	public GameObject setTargetOn;$/;"	f	class:PlaceTargetWithMouse
shadowmapMode	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var shadowmapMode : SerializedProperty;$/;"	v
shadowmapRes	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var shadowmapRes : SerializedProperty;$/;"	v
shin	Scripts/Agent/Act/LegController.cs	/^		public MotorMotion shin;$/;"	f	class:RusticGames.Act.LegState
shoot	KeyboardConfiguration.cs	/^	public KeyCode shoot;$/;"	f	class:KeyboardConfiguration
showInterpolatedSamples	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var showInterpolatedSamples : SerializedProperty;$/;"	v
showOnlyOn	Sample Assets/Utility/PlatformSpecificContent.cs	/^	[SerializeField] BuildTargetGroup showOnlyOn;$/;"	f	class:PlatformSpecificContent	file:
showSamples	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var showSamples : SerializedProperty;$/;"	v
shrink	Change.cs	/^	void shrink ()$/;"	m	class:Change	file:
sideSlideEffect	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        [Range(0, 1)] public float sideSlideEffect = 0.5f;                          \/\/ how easily the car loses sideways grip $/;"	f	class:CarController.Advanced
sideSlideFactor	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float sideSlideFactor;$/;"	f	class:Wheel	file:
sideSlideFactorTarget	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float sideSlideFactorTarget;$/;"	f	class:Wheel	file:
sideSlideGrip	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float sideSlideGrip;$/;"	f	class:Wheel	file:
sidewaysControl	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var sidewaysControl : float = 1.0;$/;"	v
sidewaysFriction	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private WheelFrictionCurve sidewaysFriction;$/;"	f	class:Wheel	file:
sidewaysStiffness	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float sidewaysStiffness;$/;"	f	class:Wheel	file:
size	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var size : SerializedProperty;$/;"	v
sizeMultiplier	Sample Assets/Effects/Particle Systems/scripts/Explosive.cs	/^	public float sizeMultiplier = 1;$/;"	f	class:Explosive
sizes	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var sizes : int[] = [64, 128, 256, 512, 1024, 2048];$/;"	v
sizesStr	Sample Assets/Effects/Light Shafts/Editor/LightShaftsEditor.js	/^	var sizesStr : GUIContent[] = [new GUIContent("64"), new GUIContent("128"), new GUIContent("256"), new GUIContent("512"), new GUIContent("1024"), new GUIContent("2048")];$/;"	v
skidClip	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    public AudioClip skidClip;                                                          \/\/ Audio clip for the car skidding$/;"	f	class:CarAudio
skidFactorTarget	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float skidFactorTarget;$/;"	f	class:Wheel	file:
skidGearLockFactor	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        public float skidGearLockFactor = 0.1f;                                     \/\/ The car will not automatically change gear if the current skid factor is higher than this value.$/;"	f	class:CarController.Advanced
skidSmokeSystem	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private ParticleSystem skidSmokeSystem;$/;"	f	class:Wheel	file:
skidSource	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^    AudioSource skidSource;                                                             \/\/ Source for the low acceleration sounds$/;"	f	class:CarAudio	file:
skidTrail	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private Transform skidTrail;$/;"	f	class:Wheel	file:
skidTrailPrefab	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public Transform skidTrailPrefab;$/;"	f	class:Wheel
skidTrailsDetachedParent	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public static Transform skidTrailsDetachedParent;$/;"	f	class:Wheel
slideThreshold	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float slideThreshold = 10f;$/;"	f	class:Wheel	file:
slider	Investigator.cs	/^	public SliderJoint2D slider;$/;"	f	class:Investigator
sliderState	Investigator.cs	/^	public SliderData sliderState;$/;"	f	class:Investigator
sliding	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^var sliding : CharacterMotorSliding = CharacterMotorSliding();$/;"	v
slidingSpeed	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var slidingSpeed : float = 15;$/;"	v
slopeSpeedMultiplier	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var slopeSpeedMultiplier : AnimationCurve = AnimationCurve(Keyframe(-90, 1), Keyframe(0, 1), Keyframe(90, 0));$/;"	v
slowMo	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	bool slowMo;$/;"	f	class:SlowMoButton	file:
slowSpeed	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	public float slowSpeed = 0.3f;$/;"	f	class:SlowMoButton
smallSpeed	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    private float smallSpeed;                                                       \/\/ A small proportion of max speed, used to decide when to start accelerating\/braking when transitioning between fwd and reverse motion$/;"	f	class:CarController	file:
smoothHeight	Sample Assets/Utility/DynamicShadowSettings.cs	/^	float smoothHeight;$/;"	f	class:DynamicShadowSettings	file:
smoothRoute	Sample Assets/Utility/WaypointCircuit.cs	/^	[SerializeField] bool smoothRoute = true;$/;"	f	class:WaypointCircuit	file:
smoothTurnTime	Sample Assets/Cameras/Scripts/AutoCam.cs	/^    [SerializeField] private float smoothTurnTime = 0.2f;           \/\/ the smoothing for the camera's rotation$/;"	f	class:AutoCam	file:
smoothX	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	private float smoothX = 0;$/;"	f	class:FreeLookCam	file:
smoothXvelocity	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	private float smoothXvelocity = 0;$/;"	f	class:FreeLookCam	file:
smoothY	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	private float smoothY = 0;$/;"	f	class:FreeLookCam	file:
smoothYvelocity	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	private float smoothYvelocity = 0;$/;"	f	class:FreeLookCam	file:
smoothing	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^    [SerializeField] private float smoothing = 5f;                  \/\/ The smoothing applied to the movement of control surfaces.$/;"	f	class:AeroplaneControlSurfaceAnimator	file:
snapMaxSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var snapMaxSpeed = 720.0;$/;"	v
snapSmoothLag	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonCamera.js	/^var snapSmoothLag = 0.2;$/;"	v
source	Sample Assets/Utility/ActivateTrigger.cs	/^	public GameObject source;$/;"	f	class:ActivateTrigger
space	Sample Assets/Utility/AutoMoveAndRotate.cs	/^		public Space space = Space.Self;$/;"	f	class:AutoMoveAndRotate.Vector3andSpace
spacing	Sample Assets/Utility/AutoMobileShaderSwitch.cs	/^	float spacing = 4;$/;"	f	class:ReplacementListDrawer	file:
spacing	Sample Assets/Utility/TimedObjectActivator.cs	/^	float spacing = 4;$/;"	f	class:EntriesDrawer	file:
spacing	Sample Assets/Utility/WaypointCircuit.cs	/^	float spacing = 4;$/;"	f	class:WaypointListDrawer	file:
spawn	Change.cs	/^	void spawn ()$/;"	m	class:Change	file:
spawn	Spawner.cs	/^	public void spawn ()$/;"	m	class:Spawner
spawnArea	Scripts/SpawnObjects.cs	/^	public Vector3 spawnArea = new Vector3(1, 1, 1);$/;"	f	class:SpawnObjects
spawnLeg	MovementUtility.cs	/^	public static SimpleLeg spawnLeg(GameObject body, Object legPrefab, Object footPrefab, LegData legData, float footXOffset, string nameDecorator) {$/;"	m	class:MovementUtility
spawnObject	Scripts/Creator.cs	/^	public GameObject spawnObject;$/;"	f	class:Creator
spawnObject	Scripts/SpawnObjects.cs	/^	public GameObject spawnObject;$/;"	f	class:SpawnObjects
spawnType	Spawner.cs	/^	public GameObject spawnType;$/;"	f	class:Spawner
speed	Sample Assets/Utility/WaypointProgressTracker.cs	/^	private float speed;					\/\/ current speed of this object (calculated from delta since last frame)$/;"	f	class:WaypointProgressTracker	file:
speed	Scripts/ConstrainedMover.cs	/^	public float speed = 1.0f;$/;"	f	class:ConstrainedMover
speed	Scripts/MoveLeftAndRight.cs	/^	public float speed = 6.0f;$/;"	f	class:MoveLeftAndRight
speed	Scripts/SimpleMover.cs	/^	public float speed = 1.0f;$/;"	f	class:SimpleMover
speedControl	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var speedControl : float = 0.4;$/;"	v
speedEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float speedEffect = 0.01f;                       \/\/ This increases the effect of the controls based on the plane's speed.$/;"	f	class:AeroplaneAIControl	file:
speedPoint	Sample Assets/Utility/WaypointProgressTracker.cs	/^	public WaypointCircuit.RoutePoint speedPoint { get; private set; }	$/;"	p	class:WaypointProgressTracker
speedSmoothing	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var speedSmoothing = 10.0;$/;"	v
sphere	Sample Assets/Effects/Particle Systems/scripts/AfterburnerPhysicsForce.cs	/^	SphereCollider sphere;$/;"	f	class:AfterburnerPhysicsForce	file:
sphereCastRadius	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	public float sphereCastRadius = 0.1f;               \/\/ the radius of the sphere used to test for object between camera and target$/;"	f	class:ProtectCameraFromWallClip
spinAngle	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float spinAngle;$/;"	f	class:Wheel	file:
spinTurnLimit	Sample Assets/Cameras/Scripts/AutoCam.cs	/^    [SerializeField] private float spinTurnLimit = 90;      		\/\/ The threshold beyond which the camera stops following the target's rotation. (used in situations where a car spins out, for example)$/;"	f	class:AutoCam	file:
spinoutFactor	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float spinoutFactor;$/;"	f	class:Wheel	file:
spinoutFactorTarget	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float spinoutFactorTarget;$/;"	f	class:Wheel	file:
spinoutGrip	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float spinoutGrip;$/;"	f	class:Wheel	file:
spinoutSlipEffect	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^        [Range(0, 1)] public float spinoutSlipEffect = 0.5f;                        \/\/ how easily the car spins out when turning$/;"	f	class:CarController.Advanced
spot	Sample Assets/Effects/Light Shafts/Scripts/LightShafts.Utils.cs	/^	public bool spot {get{return m_LightType == LightType.Spot;}}$/;"	p	class:LightShafts
spring	Sample Assets/Utility/DragRigidbody.js	/^var spring = 50.0;$/;"	v
springCompression	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float springCompression;$/;"	f	class:Wheel	file:
springCompressionGripModifier	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    private float springCompressionGripModifier;$/;"	f	class:Wheel	file:
springDampen	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float springDampen = 0.8f;$/;"	f	class:FirstPersonHeadBob	file:
springElastic	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float springElastic = 1.1f;		$/;"	f	class:FirstPersonHeadBob	file:
springPos	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float springPos = 0;$/;"	f	class:FirstPersonHeadBob	file:
springPositionThreshold	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float springPositionThreshold = 0.05f;$/;"	f	class:FirstPersonHeadBob	file:
springVelocity	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float springVelocity = 0;$/;"	f	class:FirstPersonHeadBob	file:
springVelocityThreshold	Sample Assets/Characters/First Person Character/Scripts/FirstPersonHeadBob.cs	/^	float springVelocityThreshold = 0.05f;$/;"	f	class:FirstPersonHeadBob	file:
stand	MovementUtility.cs	/^	public static IEnumerator stand (SimpleLeg legOne, SimpleLeg legTwo)$/;"	m	class:MovementUtility
startAlpha	Sample Assets/Vehicles/Car/Scripts/SkidTrail.cs	/^	float startAlpha;$/;"	f	class:SkidTrail	file:
startColor	Scripts/FadeInOut.cs	/^	public Color startColor = Color.black;$/;"	f	class:FadeInOut
startPosition	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public Vector2 startPosition = Vector2.zero;$/;"	f	class:JoystickAbstract
startPosition	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public Vector2 startPosition = Vector2.zero;$/;"	f	class:TouchJoystick
startedSound	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	bool startedSound;                                                                  \/\/ flag for knowing if we have started sounds$/;"	f	class:CarAudio	file:
state	Sample Assets/Vehicles/Aircraft/Scripts/LandingGear.cs	/^	GearState state = GearState.Lowered;$/;"	f	class:LandingGear	file:
state	Scripts/Agent/Act/LegController.cs	/^		public string state = "Precreation";$/;"	f	class:RusticGames.Act.Leg
stationaryTurnSpeed	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public float stationaryTurnSpeed = 180;				\/\/ additional turn speed added when the player is stationary (added to animation root rotation)$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
steepPerpAmount	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^	var steepPerpAmount : float = 0.5;$/;"	v
steerAxis	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	CrossPlatformInput.VirtualAxis steerAxis;$/;"	f	class:TiltInput	file:
steerSensitivity	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] float steerSensitivity = 0.05f;                           		\/\/ how sensitively the AI uses steering input to turn to the desired direction$/;"	f	class:CarAIControl	file:
steerable	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^    public bool steerable = false;$/;"	f	class:Wheel
steeringCorrection	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^		public float steeringCorrection = 2f;                                       \/\/ How fast the steering returns to centre with no steering input$/;"	f	class:CarController.Advanced
steeringResponseSpeed	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    [SerializeField] private float steeringResponseSpeed = 200;                     \/\/ how fast the steering responds$/;"	f	class:CarController	file:
stepSize	Sample Assets/Sample Scenes/Scripts/Clouds.cs	/^	[SerializeField] float stepSize = 500;$/;"	f	class:Clouds	file:
stop	Scripts/World/Mover.cs	/^	public void stop ()$/;"	m	class:Mover
stopWhenTargetReached	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] bool stopWhenTargetReached;    								\/\/ should we stop driving when we reach the target?$/;"	f	class:CarAIControl	file:
strafeSpeed	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	[SerializeField] private float strafeSpeed = 4f;                                    \/\/ The speed at which we want the character to be able to strafe$/;"	f	class:FirstPersonCharacter	file:
subMeshIndex	Sample Assets/Utility/MeshCombineUtility.cs	/^		public int       subMeshIndex;            $/;"	f	struct:MeshCombineUtility.MeshInstance
sunLight	Sample Assets/Utility/DynamicShadowSettings.cs	/^	public Light sunLight;$/;"	f	class:DynamicShadowSettings
surfaceOffset	Sample Assets/Sample Scenes/Scripts/PlaceTargetWithMouse.cs	/^	public float surfaceOffset = 1.5f;$/;"	f	class:PlaceTargetWithMouse
suspensionSpringPos	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^	public float suspensionSpringPos { get; private set; }$/;"	p	class:Wheel
swaySpeed	Sample Assets/Cameras/Scripts/HandHeldCam.cs	/^	[SerializeField] float swaySpeed = .5f;$/;"	f	class:HandHeldCam	file:
swipeScale	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected float swipeScale;$/;"	f	class:JoystickAbstract
swipeScale	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private float swipeScale;$/;"	f	class:TouchJoystick	file:
system	Sample Assets/Vehicles/Aircraft/Scripts/JetParticleEffect.cs	/^	private ParticleSystem system;                      \/\/ The particle system that is being controlled$/;"	f	class:JetParticleEffect	file:
systems	Sample Assets/Effects/Particle Systems/scripts/ExtinguishableParticleSystem.cs	/^	ParticleSystem[] systems;$/;"	f	class:ExtinguishableParticleSystem	file:
tagFilter	Scripts/SelectUnits.cs	/^	public string tagFilter = "Unit";$/;"	f	class:SelectUnits
takenOff	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	private bool takenOff;                               		\/\/ Has the plane taken off yet$/;"	f	class:AeroplaneAIControl	file:
takeoffHeight	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] float takeoffHeight = 20;						  \/\/ the AI will fly straight and only pitch upwards until reaching this height$/;"	f	class:AeroplaneAIControl	file:
target	OneWayFollow.cs	/^	public GameObject target;$/;"	f	class:OneWayFollow
target	Sample Assets/2D/Scripts/Camera2DFollow.cs	/^	public Transform target;$/;"	f	class:Camera2DFollow
target	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	[SerializeField] protected Transform target;              		\/\/ The target object to follow$/;"	f	class:AbstractTargetFollower
target	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^	public Transform target;										\/\/ target to aim for$/;"	f	class:AICharacterControl
target	Sample Assets/Utility/ActivateTrigger.cs	/^	public Object target;$/;"	f	class:ActivateTrigger
target	Sample Assets/Utility/FollowTarget.cs	/^	public Transform target;$/;"	f	class:FollowTarget
target	Sample Assets/Utility/TimedObjectActivator.cs	/^		public GameObject target;$/;"	f	class:TimedObjectActivator.Entry
target	Sample Assets/Utility/WaypointProgressTracker.cs	/^	public Transform target;$/;"	f	class:WaypointProgressTracker
target	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAIControl.cs	/^	[SerializeField] Transform target;								  \/\/ the target to fly towards$/;"	f	class:AeroplaneAIControl	file:
target	Sample Assets/Vehicles/Car/Scripts/CarAIControl.cs	/^	[SerializeField] Transform target;	        									\/\/ 'target' the target object to aim for.	$/;"	f	class:CarAIControl	file:
target	Scripts/MoveTarget.cs	/^	private Vector3 target;$/;"	f	class:MoveTarget	file:
targetAccelInput	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^	float targetAccelInput; \/\/ target accel input is our desired acceleration input. We smooth towards it later$/;"	f	class:CarController	file:
targetAngles	Sample Assets/Utility/SimpleMouseRotator.cs	/^	Vector3 targetAngles;$/;"	f	class:SimpleMouseRotator	file:
targetChangeTolerance	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^	public float targetChangeTolerance = 1;				            \/\/ distance to target before target can be changed$/;"	f	class:AICharacterControl
targetName	OneWayFollow.cs	/^	public string targetName = "Mario(Clone)";$/;"	f	class:OneWayFollow
targetPoint	Sample Assets/Utility/WaypointProgressTracker.cs	/^	public WaypointCircuit.RoutePoint targetPoint { get; private set; }		$/;"	p	class:WaypointProgressTracker
targetPos	Sample Assets/Characters/Third Person Character/Scripts/AICharacterControl.cs	/^	Vector3 targetPos;$/;"	f	class:AICharacterControl	file:
targetTime	Sample Assets/Sample Scenes/Scripts/SlowMoButton.cs	/^	float targetTime;$/;"	f	class:SlowMoButton	file:
targetVelocityLowerLimit	Sample Assets/Cameras/Scripts/AutoCam.cs	/^ 	[SerializeField] private float targetVelocityLowerLimit = 4f;	\/\/ the minimum velocity above which the camera turns towards the object's velocity. Below this we use the object's forward direction.$/;"	f	class:AutoCam	file:
targeter	Scripts/World/KeyboardMover.cs	/^	public KeyboardTargeter targeter;$/;"	f	class:KeyboardMover
targeter	Shooter.cs	/^	public KeyboardTargeter targeter;$/;"	f	class:Shooter
teamLeader	Scripts/World/Affiliation.cs	/^	public Affiliation teamLeader;$/;"	f	class:Affiliation
text	AreaGoal.cs	/^	public UnityEngine.UI.Text text;$/;"	f	class:AreaGoal
thigh	Scripts/Agent/Act/LegController.cs	/^		public MotorMotion thigh;$/;"	f	class:RusticGames.Act.LegState
thigh	SimpleLeg.cs	/^	public SliderJoint2D thigh;$/;"	f	class:SimpleLeg
thinkRoutine	Goomba.cs	/^	IEnumerator thinkRoutine ()$/;"	m	class:Goomba	file:
thinkRoutine	Scripts/MoveLeftAndRight.cs	/^	IEnumerator thinkRoutine ()$/;"	m	class:MoveLeftAndRight	file:
throttleBlurEnd	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^    [SerializeField] [Range(0f, 1f)] private float throttleBlurEnd = 0.5f;       \/\/ The point at which the blurred textures stop changing.$/;"	f	class:AeroplanePropellerAnimator	file:
throttleBlurStart	Sample Assets/Vehicles/Aircraft/Scripts/AeroplanePropellerAnimator.cs	/^	[SerializeField] [Range(0f,1f)] private float throttleBlurStart = 0.25f;     \/\/ The point at which the blurred textures start.$/;"	f	class:AeroplanePropellerAnimator	file:
throttleChangeSpeed	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float throttleChangeSpeed = 0.3f;          \/\/ The speed with which the throttle changes.$/;"	f	class:AeroplaneController	file:
tiltAngle	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	private float tiltAngle;                            \/\/ The pivot's x axis rotation.$/;"	f	class:FreeLookCam	file:
tiltAroundAxis	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^	public AxisOptions tiltAroundAxis = AxisOptions.ForwardAxis;$/;"	f	class:TiltInput
tiltMax	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	[SerializeField] private float tiltMax = 75f;       \/\/ The maximum value of the x axis rotation of the pivot.$/;"	f	class:FreeLookCam	file:
tiltMin	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	[SerializeField] private float tiltMin = 45f;       \/\/ The minimum value of the x axis rotation of the pivot.$/;"	f	class:FreeLookCam	file:
timeInterval	Scripts/CoRotator.cs	/^	public float timeInterval = 0.1f;$/;"	f	class:CoRotator
timeInterval	Scripts/Fader.cs	/^	public float timeInterval = 0.1f;$/;"	f	class:Fader
timeOut	Standard Assets/Particles/Legacy Particles/TimedObjectDestructor.js	/^var timeOut = 1.0;$/;"	v
titleGuiText	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^	public GUIText titleGuiText;$/;"	f	class:ParticleSceneControls
torque	Shover.cs	/^	public float torque;$/;"	f	class:Shover
torqueForNextTenthOfASecond	Investigator.cs	/^	public float torqueForNextTenthOfASecond;$/;"	f	struct:HingeData
touchDelta	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Vector2 touchDelta;$/;"	f	class:JoystickAbstract
touchDelta	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private Vector2 touchDelta;$/;"	f	class:TouchJoystick	file:
touchPad	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected bool touchPad;                                                      \/\/ Is this a touch pad$/;"	f	class:JoystickAbstract
touchPad	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private bool touchPad;                                                       \/\/ Is this a touch pad$/;"	f	class:TouchJoystick	file:
touchStart	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Vector2 touchStart;$/;"	f	class:JoystickAbstract
touchStart	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private Vector2 touchStart;$/;"	f	class:TouchJoystick	file:
touchZone	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public GUITexture touchZone;                                                \/\/ The area in which the joystick will accept touch input on the screen (useful for constraining a stick to inside an texture area)$/;"	f	class:JoystickAbstract
touchZone	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public GUITexture touchZone;                                                \/\/ The area in which the joystick will accept touch input on the screen (useful for constraining a stick to inside an texture area)$/;"	f	class:TouchJoystick
touchZonePadding	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public float touchZonePadding = 0;											\/\/ An amount of padding around the inside of the touchzone which is not usable$/;"	f	class:JoystickAbstract
touchZonePadding	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	public float touchZonePadding = 0;											\/\/ An amount of padding around the inside of the touchzone which is not usable$/;"	f	class:TouchJoystick
touchZoneRect	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected Rect touchZoneRect;                                                 \/\/ The area on the screen where the touch zone is$/;"	f	class:JoystickAbstract
touchZoneRect	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private Rect touchZoneRect;                                                 \/\/ The area on the screen where the touch zone is$/;"	f	class:TouchJoystick	file:
trackingBias	Sample Assets/Cameras/Scripts/HandHeldCam.cs	/^	[Range(-1,1)][SerializeField] float trackingBias = 0;$/;"	f	class:HandHeldCam	file:
trackingSwayAmount	Sample Assets/Cameras/Scripts/HandHeldCam.cs	/^	[SerializeField] float trackingSwayAmount = .5f;$/;"	f	class:HandHeldCam	file:
transform	Sample Assets/Sample Scenes/Scripts/ParticleSceneControls.cs	/^		public Transform transform;$/;"	f	class:ParticleSceneControls.DemoParticleSystem
transform	Sample Assets/Utility/MeshCombineUtility.cs	/^		public Matrix4x4 transform;$/;"	f	struct:MeshCombineUtility.MeshInstance
transform	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^        public Transform transform;                     \/\/ The transform of the control surface.$/;"	f	class:AeroplaneControlSurfaceAnimator.ControlSurface
triggerCount	Sample Assets/Utility/ActivateTrigger.cs	/^	public int triggerCount = 1;\/\/\/$/;"	f	class:ActivateTrigger
trotAfterSeconds	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var trotAfterSeconds = 3.0;$/;"	v
trotSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var trotSpeed = 4.0;$/;"	v
tryFindTarget	OneWayFollow.cs	/^	public void tryFindTarget() {$/;"	m	class:OneWayFollow
tryInputs	SimpleWalker.cs	/^	public bool tryInputs = false;$/;"	f	class:SimpleWalker
tryUpdate	OneWayFollow.cs	/^	public void tryUpdate() {$/;"	m	class:OneWayFollow
turn	Change.cs	/^	void turn ()$/;"	m	class:Change	file:
turnAmount	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	float turnAmount;$/;"	f	class:ThirdPersonCharacter	file:
turnSmoothing	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	[SerializeField] private float turnSmoothing = 0.1f;\/\/ How much smoothing to apply to the turn input, to reduce mouse-turn jerkiness$/;"	f	class:FreeLookCam	file:
turnSpeed	Sample Assets/Cameras/Scripts/AutoCam.cs	/^    [SerializeField] private float turnSpeed = 1;           		\/\/ How fast the rig will turn to keep up with target's rotation$/;"	f	class:AutoCam	file:
turnSpeed	Sample Assets/Cameras/Scripts/FreeLookCam.cs	/^	[SerializeField] private float turnSpeed = 1.5f;    \/\/ How fast the rig will rotate from user input.$/;"	f	class:FreeLookCam	file:
turnSpeedVelocityChange	Sample Assets/Cameras/Scripts/AutoCam.cs	/^	private float turnSpeedVelocityChange;                  \/\/ The change in the turn speed velocity$/;"	f	class:AutoCam	file:
type	Sample Assets/Cross Platform Input/Scripts/TiltInput.cs	/^		public MappingType type;$/;"	f	class:TiltInput.AxisMapping
type	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneControlSurfaceAnimator.cs	/^        public Type type;                               \/\/ The type of control surface.$/;"	f	class:AeroplaneControlSurfaceAnimator.ControlSurface
type	Scripts/CreateScriptDialog/Editor/ScriptPrescription.cs	/^		public string type;$/;"	f	struct:UnityEditor.ParameterData
up	KeyboardConfiguration.cs	/^	public KeyCode up;$/;"	f	class:KeyboardConfiguration
updateMotor	Scripts/Agent/Act/LegController.cs	/^		public static void updateMotor (LegController lc, HingeJoint2D j, MotorMotion m) {$/;"	m	class:RusticGames.Act.LegController
updateMotors	Scripts/Agent/Act/LegController.cs	/^		public static void updateMotors (LegController lc, Leg l, MotorMotion h2k, MotorMotion k2f) {$/;"	m	class:RusticGames.Act.LegController
updateType	Sample Assets/Cameras/Scripts/AbstractTargetFollower.cs	/^	[SerializeField] private UpdateType updateType;         		\/\/ stores the selected update type$/;"	f	class:AbstractTargetFollower	file:
useDesiredPosition	Shover.cs	/^	public bool useDesiredPosition = false;$/;"	f	class:Shover
useDesiredRotation	Shover.cs	/^	public bool useDesiredRotation = false;$/;"	f	class:Shover
useDoppler	Sample Assets/Vehicles/Car/Scripts/CarAudio.cs	/^	public bool useDoppler = true;                                                      \/\/ Toggle for using doppler$/;"	f	class:CarAudio
useFixedUpdate	Standard Assets/Character Controllers/Sources/Scripts/CharacterMotor.js	/^var useFixedUpdate : boolean = true;$/;"	v
useMyColor	Scripts/World/Affiliation.cs	/^	public bool useMyColor = false;$/;"	f	class:Affiliation
useTorque	Sample Assets/Vehicles/Rolling Ball/Scripts/Ball.cs	/^    [SerializeField] private bool useTorque = true;             \/\/ Whether or not to use torque to move the ball.$/;"	f	class:Ball	file:
useX	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected bool useX;                                                          \/\/ Toggle for using the x axis$/;"	f	class:JoystickAbstract
useX	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private bool useX;                                                          \/\/ Toggle for using the x axis$/;"	f	class:TouchJoystick	file:
useY	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected bool useY;                                                          \/\/ Toggle for using the Y axis$/;"	f	class:JoystickAbstract
useY	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^	private bool useY;                                                          \/\/ Toggle for using the Y axis$/;"	f	class:TouchJoystick	file:
value	Sample Assets/Utility/AutoMoveAndRotate.cs	/^		public Vector3 value;$/;"	f	class:AutoMoveAndRotate.Vector3andSpace
velocity	Investigator.cs	/^	public Vector2 velocity;$/;"	f	struct:BodyData
velocity	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^	Vector3 velocity;$/;"	f	class:ThirdPersonCharacter	file:
velocity	Scripts/Agent/Act/Move.cs	/^		public Vector2 velocity;$/;"	f	class:RusticGames.Act.Move
velocityThreshold	Sample Assets/Vehicles/Car/Scripts/CarSelfRighting.cs	/^    [SerializeField] private float velocityThreshold = 1f;  \/\/ the velocity below which the car is considered stationary for self-righting$/;"	f	class:CarSelfRighting	file:
verticalAxisName	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    public string verticalAxisName = "Vertical";                                \/\/ The name given to the vertical axis for the cross platform input $/;"	f	class:JoystickAbstract
verticalAxisName	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    public string verticalAxisName = "Vertical";                                \/\/ The name given to the vertical axis for the cross platform input $/;"	f	class:TouchJoystick
verticalVirtualAxis	Sample Assets/Cross Platform Input/Scripts/JoystickAbstract.cs	/^    protected CrossPlatformInput.VirtualAxis verticalVirtualAxis;                 \/\/ Reference to the joystick in the cross platform input$/;"	f	class:JoystickAbstract
verticalVirtualAxis	Sample Assets/Cross Platform Input/Scripts/TouchJoystick.cs	/^    private CrossPlatformInput.VirtualAxis verticalVirtualAxis;                 \/\/ Reference to the joystick in the cross platform input$/;"	f	class:TouchJoystick	file:
virtualAxes	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    protected Dictionary<string, CrossPlatformInput.VirtualAxis> virtualAxes = new Dictionary<string, CrossPlatformInput.VirtualAxis>();              \/\/ Dictionary to store the name relating to the virtual axes$/;"	f	class:VirtualInput
virtualButtons	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    protected Dictionary<string, CrossPlatformInput.VirtualButton> virtualButtons = new Dictionary<string, CrossPlatformInput.VirtualButton>();$/;"	f	class:VirtualInput
virtualInput	Sample Assets/Cross Platform Input/Scripts/CrossPlatformInput.cs	/^	private static VirtualInput virtualInput;$/;"	f	class:CrossPlatformInput	file:
virtualMousePosition	Sample Assets/Cross Platform Input/Scripts/VirtualInput.cs	/^    public Vector3 virtualMousePosition { get; private set; }$/;"	p	class:VirtualInput
visualiseInEditor	Sample Assets/Cameras/Scripts/ProtectCameraFromWallClip.cs	/^	public bool visualiseInEditor;                      \/\/ toggle for visualising the algorithm through lines for the raycast in the editor$/;"	f	class:ProtectCameraFromWallClip
visualizeFocus	Sample Assets/Effects/Image Effects (Pro Only)/Editor/Image Effects/DepthOfFieldScatterEditor.js	/^  var visualizeFocus : SerializedProperty;$/;"	v
waitTime	Sample Assets/Vehicles/Car/Scripts/CarSelfRighting.cs	/^    [SerializeField] private float waitTime = 3f;       	\/\/ time to wait before self righting$/;"	f	class:CarSelfRighting	file:
walkByDefault	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	[SerializeField] private bool walkByDefault = true;									\/\/ controls how the walk\/run modifier key behaves.$/;"	f	class:FirstPersonCharacter	file:
walkByDefault	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonUserControl.cs	/^	public bool walkByDefault = false;                  \/\/ toggle for walking state$/;"	f	class:ThirdPersonUserControl
walkMotor	Scripts/Agent/Act/LegController.cs	/^		public JointMotor2D walkMotor;$/;"	f	class:RusticGames.Act.LegController
walkOneLeg	MovementUtility.cs	/^	public static IEnumerator walkOneLeg (SimpleLeg leg1, SimpleLeg leg2) {$/;"	m	class:MovementUtility
walkRoutine	Scripts/Agent/Act/LegController.cs	/^		public static IEnumerator walkRoutine(LegController c, Leg leg1, Leg leg2) {$/;"	m	class:RusticGames.Act.LegController
walkSpeed	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^	[SerializeField] private float walkSpeed = 3f;                                      \/\/ The speed at which we want the character to move$/;"	f	class:FirstPersonCharacter	file:
walkSpeed	Standard Assets/Character Controllers/Sources/Scripts/ThirdPersonController.js	/^var walkSpeed = 2.0;$/;"	v
walking	SimpleWalker.cs	/^	public bool walking;$/;"	f	class:SimpleWalker
warning	Sample Assets/Cameras/Scripts/PivotBasedCameraRig.cs	/^	public string warning { get; private set; }$/;"	p	class:PivotBasedCameraRig
waypointList	Sample Assets/Utility/WaypointCircuit.cs	/^	public WaypointList waypointList = new WaypointList();$/;"	f	class:WaypointCircuit
whatIsGround	Sample Assets/2D/Scripts/PlatformerCharacter2D.cs	/^	[SerializeField] LayerMask whatIsGround;			\/\/ A mask determining what is ground to the character$/;"	f	class:PlatformerCharacter2D	file:
wheel	Sample Assets/Vehicles/Car/Scripts/Mudguard.cs	/^    public Wheel wheel;                \/\/ the wheel we are orientating to$/;"	f	class:Mudguard
wheel	Sample Assets/Vehicles/Car/Scripts/Suspension.cs	/^    public Wheel wheel;   \/\/ The wheel that the script needs to referencing to get the postion for the suspension$/;"	f	class:Suspension
wheelCollider	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^	public WheelCollider wheelCollider { get; private set; }$/;"	p	class:Wheel
wheelModel	Sample Assets/Vehicles/Car/Scripts/Wheel.cs	/^	public Transform wheelModel;$/;"	f	class:Wheel
wheels	Sample Assets/Vehicles/Car/Scripts/CarController.cs	/^    private Wheel[] wheels;                                                         \/\/ Stores a reference to each wheel attached to this car.$/;"	f	class:CarController	file:
windBasePitch	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] float windBasePitch = 0.2f;						\/\/ starting pitch for wind (when plane is at zero speed)$/;"	f	class:AeroplaneAudio	file:
windDopplerLevel	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^        public float windDopplerLevel = 1f;                         	\/\/ The doppler level of the wind audio source.					$/;"	f	class:AeroplaneAudio.AdvancedSetttings
windMasterVolume	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^		[Range(0f, 1f)] public float windMasterVolume = 0.5f;       	\/\/ An overall control of the wind sound volume.$/;"	f	class:AeroplaneAudio.AdvancedSetttings
windMaxDistance	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^        public float windMaxDistance = 100f;                       		\/\/ The max distance of the wind audio source.$/;"	f	class:AeroplaneAudio.AdvancedSetttings
windMaxSpeedVolume	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] float windMaxSpeedVolume = 100;					\/\/ the speed the aircraft much reach before the wind sound reaches maximum volume.$/;"	f	class:AeroplaneAudio	file:
windMinDistance	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^        public float windMinDistance = 10f;                         	\/\/ The min distance of the wind audio source. $/;"	f	class:AeroplaneAudio.AdvancedSetttings
windSound	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] AudioClip windSound;                   			\/\/ Looped wind sound, whose pitch and volume are affected by the plane's velocity.$/;"	f	class:AeroplaneAudio	file:
windSoundSource	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^    private AudioSource windSoundSource;                            	\/\/ Reference to the AudioSource for the wind.$/;"	f	class:AeroplaneAudio	file:
windSpeedPitchFactor	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneAudio.cs	/^	[SerializeField] float windSpeedPitchFactor = 0.004f;       		\/\/ Relative increase in pitch of the wind from the plane's speed.$/;"	f	class:AeroplaneAudio	file:
worldCenterOfMass	Investigator.cs	/^	public Vector2 worldCenterOfMass;$/;"	f	struct:BodyData
worldPoint	Scripts/GUI/HUD.cs	/^		public Vector3 worldPoint;$/;"	f	class:HUD.ScreenPointToWorldInfo
worldRect	Scripts/GUI/GUIBox.cs	/^	private Rect worldRect;$/;"	f	class:GUIBox	file:
xMargin	Sample Assets/2D/Scripts/CameraFollow.cs	/^	public float xMargin = 1f;		\/\/ Distance in the x axis the player can move before the camera follows.$/;"	f	class:CameraFollow
xSmooth	Sample Assets/2D/Scripts/CameraFollow.cs	/^	public float xSmooth = 8f;		\/\/ How smoothly the camera catches up with it's target movement in the x axis.$/;"	f	class:CameraFollow
yMargin	Sample Assets/2D/Scripts/CameraFollow.cs	/^	public float yMargin = 1f;		\/\/ Distance in the y axis the player can move before the camera follows.$/;"	f	class:CameraFollow
ySmooth	Sample Assets/2D/Scripts/CameraFollow.cs	/^	public float ySmooth = 8f;		\/\/ How smoothly the camera catches up with it's target movement in the y axis.$/;"	f	class:CameraFollow
yawEffect	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float yawEffect = 0.2f;                    \/\/ The strength of effect for yaw input.$/;"	f	class:AeroplaneController	file:
zeroFrictionMaterial	Sample Assets/Characters/First Person Character/Scripts/FirstPersonCharacter.cs	/^		public PhysicMaterial zeroFrictionMaterial;                                     \/\/ Material used for zero friction simulation$/;"	f	class:FirstPersonCharacter.AdvancedSettings
zeroFrictionMaterial	Sample Assets/Characters/Third Person Character/Scripts/ThirdPersonCharacter.cs	/^		public PhysicMaterial zeroFrictionMaterial;			\/\/ used when in motion to enable smooth movement$/;"	f	class:ThirdPersonCharacter.AdvancedSettings
zeroLiftSpeed	Sample Assets/Vehicles/Aircraft/Scripts/AeroplaneController.cs	/^    [SerializeField] private float zeroLiftSpeed = 300;                 \/\/ The speed at which lift is no longer applied.$/;"	f	class:AeroplaneController	file:
zoomAmountMultiplier	Sample Assets/Cameras/Scripts/TargetFieldOfView.cs	/^	[SerializeField] float zoomAmountMultiplier = 2;	\/\/ a multiplier for the FOV amount. The default of 2 makes the field of view twice as wide as required to fit the target.$/;"	f	class:TargetFieldOfView	file:
